// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '../../generated/types'

import { AssetFragment, AssetFragmentDoc } from '../Asset/Asset.gql'

export const BlogItemFragmentDoc: DocumentNode<BlogItemFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'BlogItem' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'Page' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'title' } },
          { kind: 'Field', name: { kind: 'Name', value: 'url' } },
          { kind: 'Field', name: { kind: 'Name', value: 'date' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'asset' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'FragmentSpread', name: { kind: 'Name', value: 'Asset' } }],
            },
          },
        ],
      },
    },
    ...AssetFragmentDoc.definitions,
  ],
}
export type BlogItemFragment = Pick<Types.Page, 'title' | 'url' | 'date'> & {
  asset?: Types.Maybe<AssetFragment>
}
