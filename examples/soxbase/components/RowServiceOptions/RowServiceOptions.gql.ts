// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '../../generated/types'

import { PageLinkFragment, PageLinkFragmentDoc } from '../PageLink/PageLink.gql'

export const RowServiceOptionsFragmentDoc: DocumentNode<RowServiceOptionsFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'RowServiceOptions' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'RowServiceOptions' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'serviceOptionsTitle' },
            name: { kind: 'Name', value: 'title' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'serviceOptions' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'FragmentSpread', name: { kind: 'Name', value: 'PageLink' } }],
            },
          },
        ],
      },
    },
    ...PageLinkFragmentDoc.definitions,
  ],
}
export type RowServiceOptionsFragment = {
  serviceOptionsTitle: Types.RowServiceOptions['title']
} & { serviceOptions: Array<PageLinkFragment> }
