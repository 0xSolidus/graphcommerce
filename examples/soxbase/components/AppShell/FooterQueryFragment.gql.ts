// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '../../generated/types'

import { PageLinkFragment, PageLinkFragmentDoc } from '../PageLink/PageLink.gql'

export const FooterQueryFragmentDoc: DocumentNode<FooterQueryFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FooterQueryFragment' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'Query' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'footer' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'where' },
                value: {
                  kind: 'ObjectValue',
                  fields: [
                    {
                      kind: 'ObjectField',
                      name: { kind: 'Name', value: 'identity' },
                      value: { kind: 'StringValue', value: 'footer', block: false },
                    },
                  ],
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'socialLinks' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'PageLink' } },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'copyright' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'legalLinks' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'PageLink' } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...PageLinkFragmentDoc.definitions,
  ],
}
export type FooterQueryFragment = {
  footer?: Types.Maybe<
    Pick<Types.Footer, 'copyright'> & {
      socialLinks: Array<PageLinkFragment>
      legalLinks: Array<PageLinkFragment>
    }
  >
}
