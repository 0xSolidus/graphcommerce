// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '../../generated/types'

export const RowProductUpsellsFragmentDoc: DocumentNode<RowProductUpsellsFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'RowProductUpsells' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'RowProductUpsells' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'identity' } },
          { kind: 'Field', name: { kind: 'Name', value: 'title' } },
        ],
      },
    },
  ],
}
export type RowProductUpsellsFragment = Pick<Types.RowProductUpsells, 'identity' | 'title'>
