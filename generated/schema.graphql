schema {
  query: Query
  mutation: Mutation
}
type Query {
  assets(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Asset]!
  contactForms(
    where: ContactFormWhereInput
    orderBy: ContactFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [ContactForm]!
  ecosystems(
    where: EcosystemWhereInput
    orderBy: EcosystemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Ecosystem]!
  blocks(
    where: BlockWhereInput
    orderBy: BlockOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Block]!
  modules(
    where: ModuleWhereInput
    orderBy: ModuleOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Module]!
  structuredPages(
    where: StructuredPageWhereInput
    orderBy: StructuredPageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [StructuredPage]!
  employees(
    where: EmployeeWhereInput
    orderBy: EmployeeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Employee]!
  quotes(
    where: QuoteWhereInput
    orderBy: QuoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Quote]!
  documents(
    where: DocumentWhereInput
    orderBy: DocumentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Document]!
  startProjectForms(
    where: StartProjectFormWhereInput
    orderBy: StartProjectFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [StartProjectForm]!
  jobListings(
    where: JobListingWhereInput
    orderBy: JobListingOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [JobListing]!
  mailchimpForms(
    where: MailchimpFormWhereInput
    orderBy: MailchimpFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [MailchimpForm]!
  singularPages(
    where: SingularPageWhereInput
    orderBy: SingularPageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [SingularPage]!
  blogPosts(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BlogPost]!
  comments(
    where: CommentWhereInput
    orderBy: CommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Comment]!
  pages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Page]!
  asset(where: AssetWhereUniqueInput!): Asset
  contactForm(where: ContactFormWhereUniqueInput!): ContactForm
  ecosystem(where: EcosystemWhereUniqueInput!): Ecosystem
  block(where: BlockWhereUniqueInput!): Block
  module(where: ModuleWhereUniqueInput!): Module
  structuredPage(where: StructuredPageWhereUniqueInput!): StructuredPage
  employee(where: EmployeeWhereUniqueInput!): Employee
  quote(where: QuoteWhereUniqueInput!): Quote
  document(where: DocumentWhereUniqueInput!): Document
  startProjectForm(where: StartProjectFormWhereUniqueInput!): StartProjectForm
  jobListing(where: JobListingWhereUniqueInput!): JobListing
  mailchimpForm(where: MailchimpFormWhereUniqueInput!): MailchimpForm
  singularPage(where: SingularPageWhereUniqueInput!): SingularPage
  blogPost(where: BlogPostWhereUniqueInput!): BlogPost
  comment(where: CommentWhereUniqueInput!): Comment
  page(where: PageWhereUniqueInput!): Page
  assetsConnection(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): AssetConnection!
  contactFormsConnection(
    where: ContactFormWhereInput
    orderBy: ContactFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ContactFormConnection!
  ecosystemsConnection(
    where: EcosystemWhereInput
    orderBy: EcosystemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): EcosystemConnection!
  blocksConnection(
    where: BlockWhereInput
    orderBy: BlockOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): BlockConnection!
  modulesConnection(
    where: ModuleWhereInput
    orderBy: ModuleOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ModuleConnection!
  structuredPagesConnection(
    where: StructuredPageWhereInput
    orderBy: StructuredPageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): StructuredPageConnection!
  employeesConnection(
    where: EmployeeWhereInput
    orderBy: EmployeeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): EmployeeConnection!
  quotesConnection(
    where: QuoteWhereInput
    orderBy: QuoteOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): QuoteConnection!
  documentsConnection(
    where: DocumentWhereInput
    orderBy: DocumentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): DocumentConnection!
  startProjectFormsConnection(
    where: StartProjectFormWhereInput
    orderBy: StartProjectFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): StartProjectFormConnection!
  jobListingsConnection(
    where: JobListingWhereInput
    orderBy: JobListingOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): JobListingConnection!
  mailchimpFormsConnection(
    where: MailchimpFormWhereInput
    orderBy: MailchimpFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): MailchimpFormConnection!
  singularPagesConnection(
    where: SingularPageWhereInput
    orderBy: SingularPageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): SingularPageConnection!
  blogPostsConnection(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): BlogPostConnection!
  commentsConnection(
    where: CommentWhereInput
    orderBy: CommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): CommentConnection!
  pagesConnection(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): PageConnection!
  node(id: ID!): Node
}
input AssetWhereInput {
  _search: String
  AND: [AssetWhereInput!]
  OR: [AssetWhereInput!]
  NOT: [AssetWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  handle: String
  handle_not: String
  handle_in: [String!]
  handle_not_in: [String!]
  handle_lt: String
  handle_lte: String
  handle_gt: String
  handle_gte: String
  handle_contains: String
  handle_not_contains: String
  handle_starts_with: String
  handle_not_starts_with: String
  handle_ends_with: String
  handle_not_ends_with: String
  fileName: String
  fileName_not: String
  fileName_in: [String!]
  fileName_not_in: [String!]
  fileName_lt: String
  fileName_lte: String
  fileName_gt: String
  fileName_gte: String
  fileName_contains: String
  fileName_not_contains: String
  fileName_starts_with: String
  fileName_not_starts_with: String
  fileName_ends_with: String
  fileName_not_ends_with: String
  height: Float
  height_not: Float
  height_in: [Float!]
  height_not_in: [Float!]
  height_lt: Float
  height_lte: Float
  height_gt: Float
  height_gte: Float
  width: Float
  width_not: Float
  width_in: [Float!]
  width_not_in: [Float!]
  width_lt: Float
  width_lte: Float
  width_gt: Float
  width_gte: Float
  size: Float
  size_not: Float
  size_in: [Float!]
  size_not_in: [Float!]
  size_lt: Float
  size_lte: Float
  size_gt: Float
  size_gte: Float
  mimeType: String
  mimeType_not: String
  mimeType_in: [String!]
  mimeType_not_in: [String!]
  mimeType_lt: String
  mimeType_lte: String
  mimeType_gt: String
  mimeType_gte: String
  mimeType_contains: String
  mimeType_not_contains: String
  mimeType_starts_with: String
  mimeType_not_starts_with: String
  mimeType_ends_with: String
  mimeType_not_ends_with: String
  attachmentContactForm_every: ContactFormWhereInput
  attachmentContactForm_some: ContactFormWhereInput
  attachmentContactForm_none: ContactFormWhereInput
  imageEcosystem_every: EcosystemWhereInput
  imageEcosystem_some: EcosystemWhereInput
  imageEcosystem_none: EcosystemWhereInput
  imageStructuredPage_every: StructuredPageWhereInput
  imageStructuredPage_some: StructuredPageWhereInput
  imageStructuredPage_none: StructuredPageWhereInput
  imageEmployee_every: EmployeeWhereInput
  imageEmployee_some: EmployeeWhereInput
  imageEmployee_none: EmployeeWhereInput
  fileDocument_every: DocumentWhereInput
  fileDocument_some: DocumentWhereInput
  fileDocument_none: DocumentWhereInput
  downloadJobListing_every: JobListingWhereInput
  downloadJobListing_some: JobListingWhereInput
  downloadJobListing_none: JobListingWhereInput
  imageSingularPage_every: SingularPageWhereInput
  imageSingularPage_some: SingularPageWhereInput
  imageSingularPage_none: SingularPageWhereInput
  imageBlogPost_every: BlogPostWhereInput
  imageBlogPost_some: BlogPostWhereInput
  imageBlogPost_none: BlogPostWhereInput
  downloadBlogPost_every: BlogPostWhereInput
  downloadBlogPost_some: BlogPostWhereInput
  downloadBlogPost_none: BlogPostWhereInput
}
enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}
scalar DateTime
input ContactFormWhereInput {
  _search: String
  AND: [ContactFormWhereInput!]
  OR: [ContactFormWhereInput!]
  NOT: [ContactFormWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  subject: String
  subject_not: String
  subject_in: [String!]
  subject_not_in: [String!]
  subject_lt: String
  subject_lte: String
  subject_gt: String
  subject_gte: String
  subject_contains: String
  subject_not_contains: String
  subject_starts_with: String
  subject_not_starts_with: String
  subject_ends_with: String
  subject_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  attachment: AssetWhereInput
}
input EcosystemWhereInput {
  _search: String
  AND: [EcosystemWhereInput!]
  OR: [EcosystemWhereInput!]
  NOT: [EcosystemWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  image: AssetWhereInput
}
input StructuredPageWhereInput {
  _search: String
  AND: [StructuredPageWhereInput!]
  OR: [StructuredPageWhereInput!]
  NOT: [StructuredPageWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  image: AssetWhereInput
  blocks_every: BlockWhereInput
  blocks_some: BlockWhereInput
  blocks_none: BlockWhereInput
  page: PageWhereInput
}
input BlockWhereInput {
  _search: String
  AND: [BlockWhereInput!]
  OR: [BlockWhereInput!]
  NOT: [BlockWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  extended: Boolean
  extended_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  showTitle: Boolean
  showTitle_not: Boolean
  extendedFull: Boolean
  extendedFull_not: Boolean
  extendedContinuation: Boolean
  extendedContinuation_not: Boolean
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  featured: Boolean
  featured_not: Boolean
  raised: Boolean
  raised_not: Boolean
  childBlocks_every: BlockWhereInput
  childBlocks_some: BlockWhereInput
  childBlocks_none: BlockWhereInput
  parentBlock: BlockWhereInput
  page: StructuredPageWhereInput
}
input PageWhereInput {
  _search: String
  AND: [PageWhereInput!]
  OR: [PageWhereInput!]
  NOT: [PageWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  urlEN: String
  urlEN_not: String
  urlEN_in: [String!]
  urlEN_not_in: [String!]
  urlEN_lt: String
  urlEN_lte: String
  urlEN_gt: String
  urlEN_gte: String
  urlEN_contains: String
  urlEN_not_contains: String
  urlEN_starts_with: String
  urlEN_not_starts_with: String
  urlEN_ends_with: String
  urlEN_not_ends_with: String
  urlNL: String
  urlNL_not: String
  urlNL_in: [String!]
  urlNL_not_in: [String!]
  urlNL_lt: String
  urlNL_lte: String
  urlNL_gt: String
  urlNL_gte: String
  urlNL_contains: String
  urlNL_not_contains: String
  urlNL_starts_with: String
  urlNL_not_starts_with: String
  urlNL_ends_with: String
  urlNL_not_ends_with: String
  metaTitleEN: String
  metaTitleEN_not: String
  metaTitleEN_in: [String!]
  metaTitleEN_not_in: [String!]
  metaTitleEN_lt: String
  metaTitleEN_lte: String
  metaTitleEN_gt: String
  metaTitleEN_gte: String
  metaTitleEN_contains: String
  metaTitleEN_not_contains: String
  metaTitleEN_starts_with: String
  metaTitleEN_not_starts_with: String
  metaTitleEN_ends_with: String
  metaTitleEN_not_ends_with: String
  metaTitleNL: String
  metaTitleNL_not: String
  metaTitleNL_in: [String!]
  metaTitleNL_not_in: [String!]
  metaTitleNL_lt: String
  metaTitleNL_lte: String
  metaTitleNL_gt: String
  metaTitleNL_gte: String
  metaTitleNL_contains: String
  metaTitleNL_not_contains: String
  metaTitleNL_starts_with: String
  metaTitleNL_not_starts_with: String
  metaTitleNL_ends_with: String
  metaTitleNL_not_ends_with: String
  metaDescriptionEN: String
  metaDescriptionEN_not: String
  metaDescriptionEN_in: [String!]
  metaDescriptionEN_not_in: [String!]
  metaDescriptionEN_lt: String
  metaDescriptionEN_lte: String
  metaDescriptionEN_gt: String
  metaDescriptionEN_gte: String
  metaDescriptionEN_contains: String
  metaDescriptionEN_not_contains: String
  metaDescriptionEN_starts_with: String
  metaDescriptionEN_not_starts_with: String
  metaDescriptionEN_ends_with: String
  metaDescriptionEN_not_ends_with: String
  metaDescriptionNL: String
  metaDescriptionNL_not: String
  metaDescriptionNL_in: [String!]
  metaDescriptionNL_not_in: [String!]
  metaDescriptionNL_lt: String
  metaDescriptionNL_lte: String
  metaDescriptionNL_gt: String
  metaDescriptionNL_gte: String
  metaDescriptionNL_contains: String
  metaDescriptionNL_not_contains: String
  metaDescriptionNL_starts_with: String
  metaDescriptionNL_not_starts_with: String
  metaDescriptionNL_ends_with: String
  metaDescriptionNL_not_ends_with: String
  metaRobots: MetaRobots
  metaRobots_not: MetaRobots
  metaRobots_in: [MetaRobots!]
  metaRobots_not_in: [MetaRobots!]
  structuredPage: StructuredPageWhereInput
  blogPost: BlogPostWhereInput
  jobListing: JobListingWhereInput
  comment: CommentWhereInput
  singularPage: SingularPageWhereInput
}
enum MetaRobots {
  INDEX_FOLLOW
  INDEX_NOFOLLOW
  NOINDEX_FOLLOW
  NOINDEX_NOFOLLOW
}
input BlogPostWhereInput {
  _search: String
  AND: [BlogPostWhereInput!]
  OR: [BlogPostWhereInput!]
  NOT: [BlogPostWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  publicPublishedAt: DateTime
  publicPublishedAt_not: DateTime
  publicPublishedAt_in: [DateTime!]
  publicPublishedAt_not_in: [DateTime!]
  publicPublishedAt_lt: DateTime
  publicPublishedAt_lte: DateTime
  publicPublishedAt_gt: DateTime
  publicPublishedAt_gte: DateTime
  contentEN: String
  contentEN_not: String
  contentEN_in: [String!]
  contentEN_not_in: [String!]
  contentEN_lt: String
  contentEN_lte: String
  contentEN_gt: String
  contentEN_gte: String
  contentEN_contains: String
  contentEN_not_contains: String
  contentEN_starts_with: String
  contentEN_not_starts_with: String
  contentEN_ends_with: String
  contentEN_not_ends_with: String
  contentNL: String
  contentNL_not: String
  contentNL_in: [String!]
  contentNL_not_in: [String!]
  contentNL_lt: String
  contentNL_lte: String
  contentNL_gt: String
  contentNL_gte: String
  contentNL_contains: String
  contentNL_not_contains: String
  contentNL_starts_with: String
  contentNL_not_starts_with: String
  contentNL_ends_with: String
  contentNL_not_ends_with: String
  titleEN: String
  titleEN_not: String
  titleEN_in: [String!]
  titleEN_not_in: [String!]
  titleEN_lt: String
  titleEN_lte: String
  titleEN_gt: String
  titleEN_gte: String
  titleEN_contains: String
  titleEN_not_contains: String
  titleEN_starts_with: String
  titleEN_not_starts_with: String
  titleEN_ends_with: String
  titleEN_not_ends_with: String
  titleNL: String
  titleNL_not: String
  titleNL_in: [String!]
  titleNL_not_in: [String!]
  titleNL_lt: String
  titleNL_lte: String
  titleNL_gt: String
  titleNL_gte: String
  titleNL_contains: String
  titleNL_not_contains: String
  titleNL_starts_with: String
  titleNL_not_starts_with: String
  titleNL_ends_with: String
  titleNL_not_ends_with: String
  image: AssetWhereInput
  download: AssetWhereInput
  author: EmployeeWhereInput
  page: PageWhereInput
}
input EmployeeWhereInput {
  _search: String
  AND: [EmployeeWhereInput!]
  OR: [EmployeeWhereInput!]
  NOT: [EmployeeWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  jobTitle: String
  jobTitle_not: String
  jobTitle_in: [String!]
  jobTitle_not_in: [String!]
  jobTitle_lt: String
  jobTitle_lte: String
  jobTitle_gt: String
  jobTitle_gte: String
  jobTitle_contains: String
  jobTitle_not_contains: String
  jobTitle_starts_with: String
  jobTitle_not_starts_with: String
  jobTitle_ends_with: String
  jobTitle_not_ends_with: String
  slackId: String
  slackId_not: String
  slackId_in: [String!]
  slackId_not_in: [String!]
  slackId_lt: String
  slackId_lte: String
  slackId_gt: String
  slackId_gte: String
  slackId_contains: String
  slackId_not_contains: String
  slackId_starts_with: String
  slackId_not_starts_with: String
  slackId_ends_with: String
  slackId_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  image: AssetWhereInput
  blogPosts_every: BlogPostWhereInput
  blogPosts_some: BlogPostWhereInput
  blogPosts_none: BlogPostWhereInput
}
input JobListingWhereInput {
  _search: String
  AND: [JobListingWhereInput!]
  OR: [JobListingWhereInput!]
  NOT: [JobListingWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  jobPerks: String
  jobPerks_not: String
  jobPerks_in: [String!]
  jobPerks_not_in: [String!]
  jobPerks_lt: String
  jobPerks_lte: String
  jobPerks_gt: String
  jobPerks_gte: String
  jobPerks_contains: String
  jobPerks_not_contains: String
  jobPerks_starts_with: String
  jobPerks_not_starts_with: String
  jobPerks_ends_with: String
  jobPerks_not_ends_with: String
  label: String
  label_not: String
  label_in: [String!]
  label_not_in: [String!]
  label_lt: String
  label_lte: String
  label_gt: String
  label_gte: String
  label_contains: String
  label_not_contains: String
  label_starts_with: String
  label_not_starts_with: String
  label_ends_with: String
  label_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  displayOrder: Int
  displayOrder_not: Int
  displayOrder_in: [Int!]
  displayOrder_not_in: [Int!]
  displayOrder_lt: Int
  displayOrder_lte: Int
  displayOrder_gt: Int
  displayOrder_gte: Int
  download: AssetWhereInput
  page: PageWhereInput
}
input CommentWhereInput {
  _search: String
  AND: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  upvotes: Int
  upvotes_not: Int
  upvotes_in: [Int!]
  upvotes_not_in: [Int!]
  upvotes_lt: Int
  upvotes_lte: Int
  upvotes_gt: Int
  upvotes_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  page: PageWhereInput
  parentComment: CommentWhereInput
  childComments_every: CommentWhereInput
  childComments_some: CommentWhereInput
  childComments_none: CommentWhereInput
}
input SingularPageWhereInput {
  _search: String
  AND: [SingularPageWhereInput!]
  OR: [SingularPageWhereInput!]
  NOT: [SingularPageWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  releaseDate: DateTime
  releaseDate_not: DateTime
  releaseDate_in: [DateTime!]
  releaseDate_not_in: [DateTime!]
  releaseDate_lt: DateTime
  releaseDate_lte: DateTime
  releaseDate_gt: DateTime
  releaseDate_gte: DateTime
  image: AssetWhereInput
  page: PageWhereInput
}
input DocumentWhereInput {
  _search: String
  AND: [DocumentWhereInput!]
  OR: [DocumentWhereInput!]
  NOT: [DocumentWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  file: AssetWhereInput
}
enum AssetOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
}
type Asset implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm(
    where: ContactFormWhereInput
    orderBy: ContactFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [ContactForm!]
  imageEcosystem(
    where: EcosystemWhereInput
    orderBy: EcosystemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Ecosystem!]
  imageStructuredPage(
    where: StructuredPageWhereInput
    orderBy: StructuredPageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [StructuredPage!]
  imageEmployee(
    where: EmployeeWhereInput
    orderBy: EmployeeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Employee!]
  fileDocument(
    where: DocumentWhereInput
    orderBy: DocumentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Document!]
  downloadJobListing(
    where: JobListingWhereInput
    orderBy: JobListingOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [JobListing!]
  imageSingularPage(
    where: SingularPageWhereInput
    orderBy: SingularPageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [SingularPage!]
  imageBlogPost(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BlogPost!]
  downloadBlogPost(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BlogPost!]
  url(transformation: AssetTransformationInput): String!
}
interface Node {
  id: ID!
}
enum ContactFormOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  subject_ASC
  subject_DESC
  message_ASC
  message_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
}
type ContactForm implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  subject: String!
  message: String
  phone: String
  email: String
  name: String!
  attachment: Asset
}
enum EcosystemOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
}
type Ecosystem implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  image: Asset
}
enum StructuredPageOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  order_ASC
  order_DESC
  description_ASC
  description_DESC
  title_ASC
  title_DESC
}
type StructuredPage implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  order: Int
  description: String!
  title: String
  image: Asset
  blocks(
    where: BlockWhereInput
    orderBy: BlockOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Block!]
  page: Page
}
enum BlockOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  extended_ASC
  extended_DESC
  order_ASC
  order_DESC
  showTitle_ASC
  showTitle_DESC
  extendedFull_ASC
  extendedFull_DESC
  extendedContinuation_ASC
  extendedContinuation_DESC
  content_ASC
  content_DESC
  featured_ASC
  featured_DESC
  raised_ASC
  raised_DESC
}
type Block implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String!
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String!
  featured: Boolean
  raised: Boolean
  brandLogo: [BrandLogoProperties!]!
  childBlocks(
    where: BlockWhereInput
    orderBy: BlockOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Block!]
  parentBlock: Block
  page: StructuredPage
}
enum BrandLogoProperties {
  BOTTOM_LEFT
  BOTTOM_RIGHT
  SOLID
}
type Page implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  metaRobots: MetaRobots!
  structuredPage: StructuredPage
  blogPost: BlogPost
  jobListing: JobListing
  comment: Comment
  singularPage: SingularPage
  metaTitle(locale: Locale): String
  metaDescription(locale: Locale): String
  url(locale: Locale): String
}
type BlogPost implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  publicPublishedAt: DateTime
  image: Asset
  download: Asset
  author: Employee
  page: Page
  title(locale: Locale): String
  content(locale: Locale): String
}
type Employee implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  firstName: String!
  lastName: String!
  jobTitle: String
  slackId: String
  email: String
  image: Asset
  blogPosts(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BlogPost!]
}
enum BlogPostOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  publicPublishedAt_ASC
  publicPublishedAt_DESC
  contentEN_ASC
  contentEN_DESC
  contentNL_ASC
  contentNL_DESC
  titleEN_ASC
  titleEN_DESC
  titleNL_ASC
  titleNL_DESC
}
enum Locale {
  EN
  NL
}
type JobListing implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  jobPerks: String
  label: String
  download: Asset
  title: String!
  content: String
  page: Page
  displayOrder: Int
}
type Comment implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  displayName: String!
  email: String!
  upvotes: Int!
  content: String!
  page: Page
  parentComment: Comment
  childComments(
    where: CommentWhereInput
    orderBy: CommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Comment!]
}
enum CommentOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  displayName_ASC
  displayName_DESC
  email_ASC
  email_DESC
  upvotes_ASC
  upvotes_DESC
  content_ASC
  content_DESC
}
type SingularPage implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  content: String!
  title: String!
  image: Asset
  releaseDate: DateTime
  page: Page
}
enum EmployeeOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  jobTitle_ASC
  jobTitle_DESC
  slackId_ASC
  slackId_DESC
  email_ASC
  email_DESC
}
enum DocumentOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}
type Document implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  file: Asset
  name: String
}
enum JobListingOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  jobPerks_ASC
  jobPerks_DESC
  label_ASC
  label_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  displayOrder_ASC
  displayOrder_DESC
}
enum SingularPageOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  title_ASC
  title_DESC
  releaseDate_ASC
  releaseDate_DESC
}
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput
  validateOptions: Boolean = false
}
input ImageTransformationInput {
  resize: ImageResizeInput
}
input ImageResizeInput {
  width: Int
  height: Int
  fit: ImageFit
}
enum ImageFit {
  clip
  crop
  scale
  max
}
input DocumentTransformationInput {
  output: DocumentOutputInput
}
input DocumentOutputInput {
  format: DocumentFileTypes
}
enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  html
  pdf
  doc
  xlsx
  xls
  pptx
  ppt
}
input ModuleWhereInput {
  _search: String
  AND: [ModuleWhereInput!]
  OR: [ModuleWhereInput!]
  NOT: [ModuleWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  repoUrl: String
  repoUrl_not: String
  repoUrl_in: [String!]
  repoUrl_not_in: [String!]
  repoUrl_lt: String
  repoUrl_lte: String
  repoUrl_gt: String
  repoUrl_gte: String
  repoUrl_contains: String
  repoUrl_not_contains: String
  repoUrl_starts_with: String
  repoUrl_not_starts_with: String
  repoUrl_ends_with: String
  repoUrl_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  type: ModuleType
  type_not: ModuleType
  type_in: [ModuleType!]
  type_not_in: [ModuleType!]
}
enum ModuleType {
  PUBLICCUSTOMER
  PUBLICOWN
  PRIVATE
}
enum ModuleOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  order_ASC
  order_DESC
  repoUrl_ASC
  repoUrl_DESC
  description_ASC
  description_DESC
  type_ASC
  type_DESC
}
type Module implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
  order: Int
  repoUrl: String
  description: String
  type: ModuleType!
}
input QuoteWhereInput {
  _search: String
  AND: [QuoteWhereInput!]
  OR: [QuoteWhereInput!]
  NOT: [QuoteWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  authorName: String
  authorName_not: String
  authorName_in: [String!]
  authorName_not_in: [String!]
  authorName_lt: String
  authorName_lte: String
  authorName_gt: String
  authorName_gte: String
  authorName_contains: String
  authorName_not_contains: String
  authorName_starts_with: String
  authorName_not_starts_with: String
  authorName_ends_with: String
  authorName_not_ends_with: String
  authorTitle: String
  authorTitle_not: String
  authorTitle_in: [String!]
  authorTitle_not_in: [String!]
  authorTitle_lt: String
  authorTitle_lte: String
  authorTitle_gt: String
  authorTitle_gte: String
  authorTitle_contains: String
  authorTitle_not_contains: String
  authorTitle_starts_with: String
  authorTitle_not_starts_with: String
  authorTitle_ends_with: String
  authorTitle_not_ends_with: String
  asideTitle: String
  asideTitle_not: String
  asideTitle_in: [String!]
  asideTitle_not_in: [String!]
  asideTitle_lt: String
  asideTitle_lte: String
  asideTitle_gt: String
  asideTitle_gte: String
  asideTitle_contains: String
  asideTitle_not_contains: String
  asideTitle_starts_with: String
  asideTitle_not_starts_with: String
  asideTitle_ends_with: String
  asideTitle_not_ends_with: String
  asideText: String
  asideText_not: String
  asideText_in: [String!]
  asideText_not_in: [String!]
  asideText_lt: String
  asideText_lte: String
  asideText_gt: String
  asideText_gte: String
  asideText_contains: String
  asideText_not_contains: String
  asideText_starts_with: String
  asideText_not_starts_with: String
  asideText_ends_with: String
  asideText_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
}
enum QuoteOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  authorName_ASC
  authorName_DESC
  authorTitle_ASC
  authorTitle_DESC
  asideTitle_ASC
  asideTitle_DESC
  asideText_ASC
  asideText_DESC
  text_ASC
  text_DESC
}
type Quote implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  authorName: String
  authorTitle: String
  asideTitle: String
  asideText: String
  text: String
}
input StartProjectFormWhereInput {
  _search: String
  AND: [StartProjectFormWhereInput!]
  OR: [StartProjectFormWhereInput!]
  NOT: [StartProjectFormWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  currentUrl: String
  currentUrl_not: String
  currentUrl_in: [String!]
  currentUrl_not_in: [String!]
  currentUrl_lt: String
  currentUrl_lte: String
  currentUrl_gt: String
  currentUrl_gte: String
  currentUrl_contains: String
  currentUrl_not_contains: String
  currentUrl_starts_with: String
  currentUrl_not_starts_with: String
  currentUrl_ends_with: String
  currentUrl_not_ends_with: String
  currentSoftware: String
  currentSoftware_not: String
  currentSoftware_in: [String!]
  currentSoftware_not_in: [String!]
  currentSoftware_lt: String
  currentSoftware_lte: String
  currentSoftware_gt: String
  currentSoftware_gte: String
  currentSoftware_contains: String
  currentSoftware_not_contains: String
  currentSoftware_starts_with: String
  currentSoftware_not_starts_with: String
  currentSoftware_ends_with: String
  currentSoftware_not_ends_with: String
  monthlyVisitors: String
  monthlyVisitors_not: String
  monthlyVisitors_in: [String!]
  monthlyVisitors_not_in: [String!]
  monthlyVisitors_lt: String
  monthlyVisitors_lte: String
  monthlyVisitors_gt: String
  monthlyVisitors_gte: String
  monthlyVisitors_contains: String
  monthlyVisitors_not_contains: String
  monthlyVisitors_starts_with: String
  monthlyVisitors_not_starts_with: String
  monthlyVisitors_ends_with: String
  monthlyVisitors_not_ends_with: String
  monthlyOrderCount: String
  monthlyOrderCount_not: String
  monthlyOrderCount_in: [String!]
  monthlyOrderCount_not_in: [String!]
  monthlyOrderCount_lt: String
  monthlyOrderCount_lte: String
  monthlyOrderCount_gt: String
  monthlyOrderCount_gte: String
  monthlyOrderCount_contains: String
  monthlyOrderCount_not_contains: String
  monthlyOrderCount_starts_with: String
  monthlyOrderCount_not_starts_with: String
  monthlyOrderCount_ends_with: String
  monthlyOrderCount_not_ends_with: String
  averageOrderValue: String
  averageOrderValue_not: String
  averageOrderValue_in: [String!]
  averageOrderValue_not_in: [String!]
  averageOrderValue_lt: String
  averageOrderValue_lte: String
  averageOrderValue_gt: String
  averageOrderValue_gte: String
  averageOrderValue_contains: String
  averageOrderValue_not_contains: String
  averageOrderValue_starts_with: String
  averageOrderValue_not_starts_with: String
  averageOrderValue_ends_with: String
  averageOrderValue_not_ends_with: String
  targetAudienceType: String
  targetAudienceType_not: String
  targetAudienceType_in: [String!]
  targetAudienceType_not_in: [String!]
  targetAudienceType_lt: String
  targetAudienceType_lte: String
  targetAudienceType_gt: String
  targetAudienceType_gte: String
  targetAudienceType_contains: String
  targetAudienceType_not_contains: String
  targetAudienceType_starts_with: String
  targetAudienceType_not_starts_with: String
  targetAudienceType_ends_with: String
  targetAudienceType_not_ends_with: String
  company: String
  company_not: String
  company_in: [String!]
  company_not_in: [String!]
  company_lt: String
  company_lte: String
  company_gt: String
  company_gte: String
  company_contains: String
  company_not_contains: String
  company_starts_with: String
  company_not_starts_with: String
  company_ends_with: String
  company_not_ends_with: String
  companyContactName: String
  companyContactName_not: String
  companyContactName_in: [String!]
  companyContactName_not_in: [String!]
  companyContactName_lt: String
  companyContactName_lte: String
  companyContactName_gt: String
  companyContactName_gte: String
  companyContactName_contains: String
  companyContactName_not_contains: String
  companyContactName_starts_with: String
  companyContactName_not_starts_with: String
  companyContactName_ends_with: String
  companyContactName_not_ends_with: String
  companyContactEmail: String
  companyContactEmail_not: String
  companyContactEmail_in: [String!]
  companyContactEmail_not_in: [String!]
  companyContactEmail_lt: String
  companyContactEmail_lte: String
  companyContactEmail_gt: String
  companyContactEmail_gte: String
  companyContactEmail_contains: String
  companyContactEmail_not_contains: String
  companyContactEmail_starts_with: String
  companyContactEmail_not_starts_with: String
  companyContactEmail_ends_with: String
  companyContactEmail_not_ends_with: String
  companyStoresCount: String
  companyStoresCount_not: String
  companyStoresCount_in: [String!]
  companyStoresCount_not_in: [String!]
  companyStoresCount_lt: String
  companyStoresCount_lte: String
  companyStoresCount_gt: String
  companyStoresCount_gte: String
  companyStoresCount_contains: String
  companyStoresCount_not_contains: String
  companyStoresCount_starts_with: String
  companyStoresCount_not_starts_with: String
  companyStoresCount_ends_with: String
  companyStoresCount_not_ends_with: String
  phoneNumber: String
  phoneNumber_not: String
  phoneNumber_in: [String!]
  phoneNumber_not_in: [String!]
  phoneNumber_lt: String
  phoneNumber_lte: String
  phoneNumber_gt: String
  phoneNumber_gte: String
  phoneNumber_contains: String
  phoneNumber_not_contains: String
  phoneNumber_starts_with: String
  phoneNumber_not_starts_with: String
  phoneNumber_ends_with: String
  phoneNumber_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  marketingStrategy: String
  marketingStrategy_not: String
  marketingStrategy_in: [String!]
  marketingStrategy_not_in: [String!]
  marketingStrategy_lt: String
  marketingStrategy_lte: String
  marketingStrategy_gt: String
  marketingStrategy_gte: String
  marketingStrategy_contains: String
  marketingStrategy_not_contains: String
  marketingStrategy_starts_with: String
  marketingStrategy_not_starts_with: String
  marketingStrategy_ends_with: String
  marketingStrategy_not_ends_with: String
  marketingBudget: String
  marketingBudget_not: String
  marketingBudget_in: [String!]
  marketingBudget_not_in: [String!]
  marketingBudget_lt: String
  marketingBudget_lte: String
  marketingBudget_gt: String
  marketingBudget_gte: String
  marketingBudget_contains: String
  marketingBudget_not_contains: String
  marketingBudget_starts_with: String
  marketingBudget_not_starts_with: String
  marketingBudget_ends_with: String
  marketingBudget_not_ends_with: String
}
enum StartProjectFormOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  currentUrl_ASC
  currentUrl_DESC
  currentSoftware_ASC
  currentSoftware_DESC
  monthlyVisitors_ASC
  monthlyVisitors_DESC
  monthlyOrderCount_ASC
  monthlyOrderCount_DESC
  averageOrderValue_ASC
  averageOrderValue_DESC
  targetAudienceType_ASC
  targetAudienceType_DESC
  projectInvolvedPeople_ASC
  projectInvolvedPeople_DESC
  company_ASC
  company_DESC
  companyContactName_ASC
  companyContactName_DESC
  companyContactEmail_ASC
  companyContactEmail_DESC
  companyStoresCount_ASC
  companyStoresCount_DESC
  phoneNumber_ASC
  phoneNumber_DESC
  message_ASC
  message_DESC
  services_ASC
  services_DESC
  challenges_ASC
  challenges_DESC
  marketingStrategy_ASC
  marketingStrategy_DESC
  marketingBudget_ASC
  marketingBudget_DESC
}
type StartProjectForm implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  currentUrl: String!
  currentSoftware: String!
  monthlyVisitors: String!
  monthlyOrderCount: String!
  averageOrderValue: String
  targetAudienceType: String!
  projectInvolvedPeople: Json!
  company: String!
  companyContactName: String!
  companyContactEmail: String!
  companyStoresCount: String
  phoneNumber: String!
  message: String
  services: Json
  challenges: Json
  marketingStrategy: String
  marketingBudget: String
}
scalar Json
input MailchimpFormWhereInput {
  _search: String
  AND: [MailchimpFormWhereInput!]
  OR: [MailchimpFormWhereInput!]
  NOT: [MailchimpFormWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
}
enum MailchimpFormOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  email_ASC
  email_DESC
}
type MailchimpForm implements Node {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  email: String!
}
enum PageOrderByInput {
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  urlEN_ASC
  urlEN_DESC
  urlNL_ASC
  urlNL_DESC
  metaTitleEN_ASC
  metaTitleEN_DESC
  metaTitleNL_ASC
  metaTitleNL_DESC
  metaDescriptionEN_ASC
  metaDescriptionEN_DESC
  metaDescriptionNL_ASC
  metaDescriptionNL_DESC
  metaRobots_ASC
  metaRobots_DESC
}
input AssetWhereUniqueInput {
  id: ID
  handle: String
}
input ContactFormWhereUniqueInput {
  id: ID
}
input EcosystemWhereUniqueInput {
  id: ID
}
input BlockWhereUniqueInput {
  id: ID
}
input ModuleWhereUniqueInput {
  id: ID
}
input StructuredPageWhereUniqueInput {
  id: ID
}
input EmployeeWhereUniqueInput {
  id: ID
}
input QuoteWhereUniqueInput {
  id: ID
}
input DocumentWhereUniqueInput {
  id: ID
}
input StartProjectFormWhereUniqueInput {
  id: ID
}
input JobListingWhereUniqueInput {
  id: ID
}
input MailchimpFormWhereUniqueInput {
  id: ID
}
input SingularPageWhereUniqueInput {
  id: ID
}
input BlogPostWhereUniqueInput {
  id: ID
  titleEN: String
  titleNL: String
}
input CommentWhereUniqueInput {
  id: ID
}
input PageWhereUniqueInput {
  id: ID
  urlEN: String
  urlNL: String
}
type AssetConnection {
  pageInfo: PageInfo!
  edges: [AssetEdge]!
  aggregate: AggregateAsset!
}
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}
type AssetEdge {
  node: Asset!
  cursor: String!
}
type AggregateAsset {
  count: Int!
}
type ContactFormConnection {
  pageInfo: PageInfo!
  edges: [ContactFormEdge]!
  aggregate: AggregateContactForm!
}
type ContactFormEdge {
  node: ContactForm!
  cursor: String!
}
type AggregateContactForm {
  count: Int!
}
type EcosystemConnection {
  pageInfo: PageInfo!
  edges: [EcosystemEdge]!
  aggregate: AggregateEcosystem!
}
type EcosystemEdge {
  node: Ecosystem!
  cursor: String!
}
type AggregateEcosystem {
  count: Int!
}
type BlockConnection {
  pageInfo: PageInfo!
  edges: [BlockEdge]!
  aggregate: AggregateBlock!
}
type BlockEdge {
  node: Block!
  cursor: String!
}
type AggregateBlock {
  count: Int!
}
type ModuleConnection {
  pageInfo: PageInfo!
  edges: [ModuleEdge]!
  aggregate: AggregateModule!
}
type ModuleEdge {
  node: Module!
  cursor: String!
}
type AggregateModule {
  count: Int!
}
type StructuredPageConnection {
  pageInfo: PageInfo!
  edges: [StructuredPageEdge]!
  aggregate: AggregateStructuredPage!
}
type StructuredPageEdge {
  node: StructuredPage!
  cursor: String!
}
type AggregateStructuredPage {
  count: Int!
}
type EmployeeConnection {
  pageInfo: PageInfo!
  edges: [EmployeeEdge]!
  aggregate: AggregateEmployee!
}
type EmployeeEdge {
  node: Employee!
  cursor: String!
}
type AggregateEmployee {
  count: Int!
}
type QuoteConnection {
  pageInfo: PageInfo!
  edges: [QuoteEdge]!
  aggregate: AggregateQuote!
}
type QuoteEdge {
  node: Quote!
  cursor: String!
}
type AggregateQuote {
  count: Int!
}
type DocumentConnection {
  pageInfo: PageInfo!
  edges: [DocumentEdge]!
  aggregate: AggregateDocument!
}
type DocumentEdge {
  node: Document!
  cursor: String!
}
type AggregateDocument {
  count: Int!
}
type StartProjectFormConnection {
  pageInfo: PageInfo!
  edges: [StartProjectFormEdge]!
  aggregate: AggregateStartProjectForm!
}
type StartProjectFormEdge {
  node: StartProjectForm!
  cursor: String!
}
type AggregateStartProjectForm {
  count: Int!
}
type JobListingConnection {
  pageInfo: PageInfo!
  edges: [JobListingEdge]!
  aggregate: AggregateJobListing!
}
type JobListingEdge {
  node: JobListing!
  cursor: String!
}
type AggregateJobListing {
  count: Int!
}
type MailchimpFormConnection {
  pageInfo: PageInfo!
  edges: [MailchimpFormEdge]!
  aggregate: AggregateMailchimpForm!
}
type MailchimpFormEdge {
  node: MailchimpForm!
  cursor: String!
}
type AggregateMailchimpForm {
  count: Int!
}
type SingularPageConnection {
  pageInfo: PageInfo!
  edges: [SingularPageEdge]!
  aggregate: AggregateSingularPage!
}
type SingularPageEdge {
  node: SingularPage!
  cursor: String!
}
type AggregateSingularPage {
  count: Int!
}
type BlogPostConnection {
  pageInfo: PageInfo!
  edges: [BlogPostEdge]!
  aggregate: AggregateBlogPost!
}
type BlogPostEdge {
  node: BlogPost!
  cursor: String!
}
type AggregateBlogPost {
  count: Int!
}
type CommentConnection {
  pageInfo: PageInfo!
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}
type CommentEdge {
  node: Comment!
  cursor: String!
}
type AggregateComment {
  count: Int!
}
type PageConnection {
  pageInfo: PageInfo!
  edges: [PageEdge]!
  aggregate: AggregatePage!
}
type PageEdge {
  node: Page!
  cursor: String!
}
type AggregatePage {
  count: Int!
}
type Mutation {
  createAsset(data: AssetCreateInput!): Asset!
  uploadAsset(data: AssetUploadInput!): Asset!
  createContactForm(data: ContactFormCreateInput!): ContactForm!
  createEcosystem(data: EcosystemCreateInput!): Ecosystem!
  createBlock(data: BlockCreateInput!): Block!
  createModule(data: ModuleCreateInput!): Module!
  createStructuredPage(data: StructuredPageCreateInput!): StructuredPage!
  createEmployee(data: EmployeeCreateInput!): Employee!
  createQuote(data: QuoteCreateInput!): Quote!
  createDocument(data: DocumentCreateInput!): Document!
  createStartProjectForm(data: StartProjectFormCreateInput!): StartProjectForm!
  createJobListing(data: JobListingCreateInput!): JobListing!
  createMailchimpForm(data: MailchimpFormCreateInput!): MailchimpForm!
  createSingularPage(data: SingularPageCreateInput!): SingularPage!
  createBlogPost(data: BlogPostCreateInput!): BlogPost!
  createComment(data: CommentCreateInput!): Comment!
  createPage(data: PageCreateInput!): Page!
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset
  updateContactForm(data: ContactFormUpdateInput!, where: ContactFormWhereUniqueInput!): ContactForm
  updateEcosystem(data: EcosystemUpdateInput!, where: EcosystemWhereUniqueInput!): Ecosystem
  updateBlock(data: BlockUpdateInput!, where: BlockWhereUniqueInput!): Block
  updateModule(data: ModuleUpdateInput!, where: ModuleWhereUniqueInput!): Module
  updateStructuredPage(
    data: StructuredPageUpdateInput!
    where: StructuredPageWhereUniqueInput!
  ): StructuredPage
  updateEmployee(data: EmployeeUpdateInput!, where: EmployeeWhereUniqueInput!): Employee
  updateQuote(data: QuoteUpdateInput!, where: QuoteWhereUniqueInput!): Quote
  updateDocument(data: DocumentUpdateInput!, where: DocumentWhereUniqueInput!): Document
  updateStartProjectForm(
    data: StartProjectFormUpdateInput!
    where: StartProjectFormWhereUniqueInput!
  ): StartProjectForm
  updateJobListing(data: JobListingUpdateInput!, where: JobListingWhereUniqueInput!): JobListing
  updateMailchimpForm(
    data: MailchimpFormUpdateInput!
    where: MailchimpFormWhereUniqueInput!
  ): MailchimpForm
  updateSingularPage(
    data: SingularPageUpdateInput!
    where: SingularPageWhereUniqueInput!
  ): SingularPage
  updateBlogPost(data: BlogPostUpdateInput!, where: BlogPostWhereUniqueInput!): BlogPost
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updatePage(data: PageUpdateInput!, where: PageWhereUniqueInput!): Page
  deleteAsset(where: AssetWhereUniqueInput!): Asset
  deleteContactForm(where: ContactFormWhereUniqueInput!): ContactForm
  deleteEcosystem(where: EcosystemWhereUniqueInput!): Ecosystem
  deleteBlock(where: BlockWhereUniqueInput!): Block
  deleteModule(where: ModuleWhereUniqueInput!): Module
  deleteStructuredPage(where: StructuredPageWhereUniqueInput!): StructuredPage
  deleteEmployee(where: EmployeeWhereUniqueInput!): Employee
  deleteQuote(where: QuoteWhereUniqueInput!): Quote
  deleteDocument(where: DocumentWhereUniqueInput!): Document
  deleteStartProjectForm(where: StartProjectFormWhereUniqueInput!): StartProjectForm
  deleteJobListing(where: JobListingWhereUniqueInput!): JobListing
  deleteMailchimpForm(where: MailchimpFormWhereUniqueInput!): MailchimpForm
  deleteSingularPage(where: SingularPageWhereUniqueInput!): SingularPage
  deleteBlogPost(where: BlogPostWhereUniqueInput!): BlogPost
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deletePage(where: PageWhereUniqueInput!): Page
  upsertAsset(
    where: AssetWhereUniqueInput!
    create: AssetCreateInput!
    update: AssetUpdateInput!
  ): Asset!
  upsertContactForm(
    where: ContactFormWhereUniqueInput!
    create: ContactFormCreateInput!
    update: ContactFormUpdateInput!
  ): ContactForm!
  upsertEcosystem(
    where: EcosystemWhereUniqueInput!
    create: EcosystemCreateInput!
    update: EcosystemUpdateInput!
  ): Ecosystem!
  upsertBlock(
    where: BlockWhereUniqueInput!
    create: BlockCreateInput!
    update: BlockUpdateInput!
  ): Block!
  upsertModule(
    where: ModuleWhereUniqueInput!
    create: ModuleCreateInput!
    update: ModuleUpdateInput!
  ): Module!
  upsertStructuredPage(
    where: StructuredPageWhereUniqueInput!
    create: StructuredPageCreateInput!
    update: StructuredPageUpdateInput!
  ): StructuredPage!
  upsertEmployee(
    where: EmployeeWhereUniqueInput!
    create: EmployeeCreateInput!
    update: EmployeeUpdateInput!
  ): Employee!
  upsertQuote(
    where: QuoteWhereUniqueInput!
    create: QuoteCreateInput!
    update: QuoteUpdateInput!
  ): Quote!
  upsertDocument(
    where: DocumentWhereUniqueInput!
    create: DocumentCreateInput!
    update: DocumentUpdateInput!
  ): Document!
  upsertStartProjectForm(
    where: StartProjectFormWhereUniqueInput!
    create: StartProjectFormCreateInput!
    update: StartProjectFormUpdateInput!
  ): StartProjectForm!
  upsertJobListing(
    where: JobListingWhereUniqueInput!
    create: JobListingCreateInput!
    update: JobListingUpdateInput!
  ): JobListing!
  upsertMailchimpForm(
    where: MailchimpFormWhereUniqueInput!
    create: MailchimpFormCreateInput!
    update: MailchimpFormUpdateInput!
  ): MailchimpForm!
  upsertSingularPage(
    where: SingularPageWhereUniqueInput!
    create: SingularPageCreateInput!
    update: SingularPageUpdateInput!
  ): SingularPage!
  upsertBlogPost(
    where: BlogPostWhereUniqueInput!
    create: BlogPostCreateInput!
    update: BlogPostUpdateInput!
  ): BlogPost!
  upsertComment(
    where: CommentWhereUniqueInput!
    create: CommentCreateInput!
    update: CommentUpdateInput!
  ): Comment!
  upsertPage(
    where: PageWhereUniqueInput!
    create: PageCreateInput!
    update: PageUpdateInput!
  ): Page!
  updateManyAssets(data: AssetUpdateManyMutationInput!, where: AssetWhereInput): BatchPayload!
  updateManyContactForms(
    data: ContactFormUpdateManyMutationInput!
    where: ContactFormWhereInput
  ): BatchPayload!
  updateManyEcosystems(
    data: EcosystemUpdateManyMutationInput!
    where: EcosystemWhereInput
  ): BatchPayload!
  updateManyBlocks(data: BlockUpdateManyMutationInput!, where: BlockWhereInput): BatchPayload!
  updateManyModules(data: ModuleUpdateManyMutationInput!, where: ModuleWhereInput): BatchPayload!
  updateManyStructuredPages(
    data: StructuredPageUpdateManyMutationInput!
    where: StructuredPageWhereInput
  ): BatchPayload!
  updateManyEmployees(
    data: EmployeeUpdateManyMutationInput!
    where: EmployeeWhereInput
  ): BatchPayload!
  updateManyQuotes(data: QuoteUpdateManyMutationInput!, where: QuoteWhereInput): BatchPayload!
  updateManyDocuments(
    data: DocumentUpdateManyMutationInput!
    where: DocumentWhereInput
  ): BatchPayload!
  updateManyStartProjectForms(
    data: StartProjectFormUpdateManyMutationInput!
    where: StartProjectFormWhereInput
  ): BatchPayload!
  updateManyJobListings(
    data: JobListingUpdateManyMutationInput!
    where: JobListingWhereInput
  ): BatchPayload!
  updateManyMailchimpForms(
    data: MailchimpFormUpdateManyMutationInput!
    where: MailchimpFormWhereInput
  ): BatchPayload!
  updateManySingularPages(
    data: SingularPageUpdateManyMutationInput!
    where: SingularPageWhereInput
  ): BatchPayload!
  updateManyBlogPosts(
    data: BlogPostUpdateManyMutationInput!
    where: BlogPostWhereInput
  ): BatchPayload!
  updateManyComments(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  updateManyPages(data: PageUpdateManyMutationInput!, where: PageWhereInput): BatchPayload!
  deleteManyAssets(where: AssetWhereInput): BatchPayload!
  deleteManyContactForms(where: ContactFormWhereInput): BatchPayload!
  deleteManyEcosystems(where: EcosystemWhereInput): BatchPayload!
  deleteManyBlocks(where: BlockWhereInput): BatchPayload!
  deleteManyModules(where: ModuleWhereInput): BatchPayload!
  deleteManyStructuredPages(where: StructuredPageWhereInput): BatchPayload!
  deleteManyEmployees(where: EmployeeWhereInput): BatchPayload!
  deleteManyQuotes(where: QuoteWhereInput): BatchPayload!
  deleteManyDocuments(where: DocumentWhereInput): BatchPayload!
  deleteManyStartProjectForms(where: StartProjectFormWhereInput): BatchPayload!
  deleteManyJobListings(where: JobListingWhereInput): BatchPayload!
  deleteManyMailchimpForms(where: MailchimpFormWhereInput): BatchPayload!
  deleteManySingularPages(where: SingularPageWhereInput): BatchPayload!
  deleteManyBlogPosts(where: BlogPostWhereInput): BatchPayload!
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  deleteManyPages(where: PageWhereInput): BatchPayload!
}
input AssetCreateInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input ContactFormCreateManyWithoutAttachmentInput {
  create: [ContactFormCreateWithoutAttachmentInput!]
  connect: [ContactFormWhereUniqueInput!]
}
input ContactFormCreateWithoutAttachmentInput {
  status: Status
  subject: String!
  message: String
  phone: String
  email: String
  name: String!
}
input EcosystemCreateManyWithoutImageInput {
  create: [EcosystemCreateWithoutImageInput!]
  connect: [EcosystemWhereUniqueInput!]
}
input EcosystemCreateWithoutImageInput {
  status: Status
}
input StructuredPageCreateManyWithoutImageInput {
  create: [StructuredPageCreateWithoutImageInput!]
  connect: [StructuredPageWhereUniqueInput!]
}
input StructuredPageCreateWithoutImageInput {
  status: Status
  order: Int
  description: String!
  title: String
  blocks: BlockCreateManyWithoutPageInput
  page: PageCreateOneWithoutStructuredPageInput
}
input BlockCreateManyWithoutPageInput {
  create: [BlockCreateWithoutPageInput!]
  connect: [BlockWhereUniqueInput!]
}
input BlockCreateWithoutPageInput {
  status: Status
  title: String!
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String!
  featured: Boolean
  raised: Boolean
  brandLogo: BlockCreatebrandLogoInput
  childBlocks: BlockCreateManyWithoutParentBlockInput
  parentBlock: BlockCreateOneWithoutChildBlocksInput
}
input BlockCreatebrandLogoInput {
  set: [BrandLogoProperties!]
}
input BlockCreateManyWithoutParentBlockInput {
  create: [BlockCreateWithoutParentBlockInput!]
  connect: [BlockWhereUniqueInput!]
}
input BlockCreateWithoutParentBlockInput {
  status: Status
  title: String!
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String!
  featured: Boolean
  raised: Boolean
  brandLogo: BlockCreatebrandLogoInput
  childBlocks: BlockCreateManyWithoutParentBlockInput
  page: StructuredPageCreateOneWithoutBlocksInput
}
input StructuredPageCreateOneWithoutBlocksInput {
  create: StructuredPageCreateWithoutBlocksInput
  connect: StructuredPageWhereUniqueInput
}
input StructuredPageCreateWithoutBlocksInput {
  status: Status
  order: Int
  description: String!
  title: String
  image: AssetCreateOneWithoutImageStructuredPageInput
  page: PageCreateOneWithoutStructuredPageInput
}
input AssetCreateOneWithoutImageStructuredPageInput {
  upload: AssetUploadWithoutImageStructuredPageInput
  create: AssetCreateWithoutImageStructuredPageInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutImageStructuredPageInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input EmployeeCreateManyWithoutImageInput {
  create: [EmployeeCreateWithoutImageInput!]
  connect: [EmployeeWhereUniqueInput!]
}
input EmployeeCreateWithoutImageInput {
  status: Status
  firstName: String!
  lastName: String!
  jobTitle: String
  slackId: String
  email: String
  blogPosts: BlogPostCreateManyWithoutAuthorInput
}
input BlogPostCreateManyWithoutAuthorInput {
  create: [BlogPostCreateWithoutAuthorInput!]
  connect: [BlogPostWhereUniqueInput!]
}
input BlogPostCreateWithoutAuthorInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetCreateOneWithoutImageBlogPostInput
  download: AssetCreateOneWithoutDownloadBlogPostInput
  page: PageCreateOneWithoutBlogPostInput
}
input AssetCreateOneWithoutImageBlogPostInput {
  upload: AssetUploadWithoutImageBlogPostInput
  create: AssetCreateWithoutImageBlogPostInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutImageBlogPostInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input DocumentCreateManyWithoutFileInput {
  create: [DocumentCreateWithoutFileInput!]
  connect: [DocumentWhereUniqueInput!]
}
input DocumentCreateWithoutFileInput {
  status: Status
  name: String
}
input JobListingCreateManyWithoutDownloadInput {
  create: [JobListingCreateWithoutDownloadInput!]
  connect: [JobListingWhereUniqueInput!]
}
input JobListingCreateWithoutDownloadInput {
  status: Status
  jobPerks: String
  label: String
  title: String!
  content: String
  displayOrder: Int
  page: PageCreateOneWithoutJobListingInput
}
input PageCreateOneWithoutJobListingInput {
  create: PageCreateWithoutJobListingInput
  connect: PageWhereUniqueInput
}
input PageCreateWithoutJobListingInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
  structuredPage: StructuredPageCreateOneWithoutPageInput
  blogPost: BlogPostCreateOneWithoutPageInput
  comment: CommentCreateOneWithoutPageInput
  singularPage: SingularPageCreateOneWithoutPageInput
}
input StructuredPageCreateOneWithoutPageInput {
  create: StructuredPageCreateWithoutPageInput
  connect: StructuredPageWhereUniqueInput
}
input StructuredPageCreateWithoutPageInput {
  status: Status
  order: Int
  description: String!
  title: String
  image: AssetCreateOneWithoutImageStructuredPageInput
  blocks: BlockCreateManyWithoutPageInput
}
input BlogPostCreateOneWithoutPageInput {
  create: BlogPostCreateWithoutPageInput
  connect: BlogPostWhereUniqueInput
}
input BlogPostCreateWithoutPageInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetCreateOneWithoutImageBlogPostInput
  download: AssetCreateOneWithoutDownloadBlogPostInput
  author: EmployeeCreateOneWithoutBlogPostsInput
}
input AssetCreateOneWithoutDownloadBlogPostInput {
  upload: AssetUploadWithoutDownloadBlogPostInput
  create: AssetCreateWithoutDownloadBlogPostInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutDownloadBlogPostInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
}
input SingularPageCreateManyWithoutImageInput {
  create: [SingularPageCreateWithoutImageInput!]
  connect: [SingularPageWhereUniqueInput!]
}
input SingularPageCreateWithoutImageInput {
  status: Status
  content: String!
  title: String!
  releaseDate: DateTime
  page: PageCreateOneWithoutSingularPageInput
}
input PageCreateOneWithoutSingularPageInput {
  create: PageCreateWithoutSingularPageInput
  connect: PageWhereUniqueInput
}
input PageCreateWithoutSingularPageInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
  structuredPage: StructuredPageCreateOneWithoutPageInput
  blogPost: BlogPostCreateOneWithoutPageInput
  jobListing: JobListingCreateOneWithoutPageInput
  comment: CommentCreateOneWithoutPageInput
}
input JobListingCreateOneWithoutPageInput {
  create: JobListingCreateWithoutPageInput
  connect: JobListingWhereUniqueInput
}
input JobListingCreateWithoutPageInput {
  status: Status
  jobPerks: String
  label: String
  title: String!
  content: String
  displayOrder: Int
  download: AssetCreateOneWithoutDownloadJobListingInput
}
input AssetCreateOneWithoutDownloadJobListingInput {
  upload: AssetUploadWithoutDownloadJobListingInput
  create: AssetCreateWithoutDownloadJobListingInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutDownloadJobListingInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input BlogPostCreateManyWithoutImageInput {
  create: [BlogPostCreateWithoutImageInput!]
  connect: [BlogPostWhereUniqueInput!]
}
input BlogPostCreateWithoutImageInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  download: AssetCreateOneWithoutDownloadBlogPostInput
  author: EmployeeCreateOneWithoutBlogPostsInput
  page: PageCreateOneWithoutBlogPostInput
}
input EmployeeCreateOneWithoutBlogPostsInput {
  create: EmployeeCreateWithoutBlogPostsInput
  connect: EmployeeWhereUniqueInput
}
input EmployeeCreateWithoutBlogPostsInput {
  status: Status
  firstName: String!
  lastName: String!
  jobTitle: String
  slackId: String
  email: String
  image: AssetCreateOneWithoutImageEmployeeInput
}
input AssetCreateOneWithoutImageEmployeeInput {
  upload: AssetUploadWithoutImageEmployeeInput
  create: AssetCreateWithoutImageEmployeeInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutImageEmployeeInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input BlogPostCreateManyWithoutDownloadInput {
  create: [BlogPostCreateWithoutDownloadInput!]
  connect: [BlogPostWhereUniqueInput!]
}
input BlogPostCreateWithoutDownloadInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetCreateOneWithoutImageBlogPostInput
  author: EmployeeCreateOneWithoutBlogPostsInput
  page: PageCreateOneWithoutBlogPostInput
}
input PageCreateOneWithoutBlogPostInput {
  create: PageCreateWithoutBlogPostInput
  connect: PageWhereUniqueInput
}
input PageCreateWithoutBlogPostInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
  structuredPage: StructuredPageCreateOneWithoutPageInput
  jobListing: JobListingCreateOneWithoutPageInput
  comment: CommentCreateOneWithoutPageInput
  singularPage: SingularPageCreateOneWithoutPageInput
}
input CommentCreateOneWithoutPageInput {
  create: CommentCreateWithoutPageInput
  connect: CommentWhereUniqueInput
}
input CommentCreateWithoutPageInput {
  status: Status
  displayName: String!
  email: String!
  upvotes: Int!
  content: String!
  parentComment: CommentCreateOneWithoutChildCommentsInput
  childComments: CommentCreateManyWithoutParentCommentInput
}
input CommentCreateOneWithoutChildCommentsInput {
  create: CommentCreateWithoutChildCommentsInput
  connect: CommentWhereUniqueInput
}
input CommentCreateWithoutChildCommentsInput {
  status: Status
  displayName: String!
  email: String!
  upvotes: Int!
  content: String!
  page: PageCreateOneWithoutCommentInput
  parentComment: CommentCreateOneWithoutChildCommentsInput
}
input PageCreateOneWithoutCommentInput {
  create: PageCreateWithoutCommentInput
  connect: PageWhereUniqueInput
}
input PageCreateWithoutCommentInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
  structuredPage: StructuredPageCreateOneWithoutPageInput
  blogPost: BlogPostCreateOneWithoutPageInput
  jobListing: JobListingCreateOneWithoutPageInput
  singularPage: SingularPageCreateOneWithoutPageInput
}
input SingularPageCreateOneWithoutPageInput {
  create: SingularPageCreateWithoutPageInput
  connect: SingularPageWhereUniqueInput
}
input SingularPageCreateWithoutPageInput {
  status: Status
  content: String!
  title: String!
  releaseDate: DateTime
  image: AssetCreateOneWithoutImageSingularPageInput
}
input AssetCreateOneWithoutImageSingularPageInput {
  upload: AssetUploadWithoutImageSingularPageInput
  create: AssetCreateWithoutImageSingularPageInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutImageSingularPageInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutImageSingularPageInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input CommentCreateManyWithoutParentCommentInput {
  create: [CommentCreateWithoutParentCommentInput!]
  connect: [CommentWhereUniqueInput!]
}
input CommentCreateWithoutParentCommentInput {
  status: Status
  displayName: String!
  email: String!
  upvotes: Int!
  content: String!
  page: PageCreateOneWithoutCommentInput
  childComments: CommentCreateManyWithoutParentCommentInput
}
input AssetCreateWithoutImageEmployeeInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutDownloadJobListingInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutDownloadBlogPostInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
}
input AssetCreateWithoutImageBlogPostInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutImageStructuredPageInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input PageCreateOneWithoutStructuredPageInput {
  create: PageCreateWithoutStructuredPageInput
  connect: PageWhereUniqueInput
}
input PageCreateWithoutStructuredPageInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
  blogPost: BlogPostCreateOneWithoutPageInput
  jobListing: JobListingCreateOneWithoutPageInput
  comment: CommentCreateOneWithoutPageInput
  singularPage: SingularPageCreateOneWithoutPageInput
}
input BlockCreateOneWithoutChildBlocksInput {
  create: BlockCreateWithoutChildBlocksInput
  connect: BlockWhereUniqueInput
}
input BlockCreateWithoutChildBlocksInput {
  status: Status
  title: String!
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String!
  featured: Boolean
  raised: Boolean
  brandLogo: BlockCreatebrandLogoInput
  parentBlock: BlockCreateOneWithoutChildBlocksInput
  page: StructuredPageCreateOneWithoutBlocksInput
}
input AssetUploadInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input ContactFormCreateInput {
  status: Status
  subject: String!
  message: String
  phone: String
  email: String
  name: String!
  attachment: AssetCreateOneWithoutAttachmentContactFormInput
}
input AssetCreateOneWithoutAttachmentContactFormInput {
  upload: AssetUploadWithoutAttachmentContactFormInput
  create: AssetCreateWithoutAttachmentContactFormInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutAttachmentContactFormInput {
  url: String!
  status: Status
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutAttachmentContactFormInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input EcosystemCreateInput {
  status: Status
  image: AssetCreateOneWithoutImageEcosystemInput
}
input AssetCreateOneWithoutImageEcosystemInput {
  upload: AssetUploadWithoutImageEcosystemInput
  create: AssetCreateWithoutImageEcosystemInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutImageEcosystemInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutImageEcosystemInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  fileDocument: DocumentCreateManyWithoutFileInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input BlockCreateInput {
  status: Status
  title: String!
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String!
  featured: Boolean
  raised: Boolean
  brandLogo: BlockCreatebrandLogoInput
  childBlocks: BlockCreateManyWithoutParentBlockInput
  parentBlock: BlockCreateOneWithoutChildBlocksInput
  page: StructuredPageCreateOneWithoutBlocksInput
}
input ModuleCreateInput {
  status: Status
  name: String
  order: Int
  repoUrl: String
  description: String
  type: ModuleType!
}
input StructuredPageCreateInput {
  status: Status
  order: Int
  description: String!
  title: String
  image: AssetCreateOneWithoutImageStructuredPageInput
  blocks: BlockCreateManyWithoutPageInput
  page: PageCreateOneWithoutStructuredPageInput
}
input EmployeeCreateInput {
  status: Status
  firstName: String!
  lastName: String!
  jobTitle: String
  slackId: String
  email: String
  image: AssetCreateOneWithoutImageEmployeeInput
  blogPosts: BlogPostCreateManyWithoutAuthorInput
}
input QuoteCreateInput {
  status: Status
  authorName: String
  authorTitle: String
  asideTitle: String
  asideText: String
  text: String
}
input DocumentCreateInput {
  status: Status
  name: String
  file: AssetCreateOneWithoutFileDocumentInput
}
input AssetCreateOneWithoutFileDocumentInput {
  upload: AssetUploadWithoutFileDocumentInput
  create: AssetCreateWithoutFileDocumentInput
  connect: AssetWhereUniqueInput
}
input AssetUploadWithoutFileDocumentInput {
  url: String!
  status: Status
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input AssetCreateWithoutFileDocumentInput {
  status: Status
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormCreateManyWithoutAttachmentInput
  imageEcosystem: EcosystemCreateManyWithoutImageInput
  imageStructuredPage: StructuredPageCreateManyWithoutImageInput
  imageEmployee: EmployeeCreateManyWithoutImageInput
  downloadJobListing: JobListingCreateManyWithoutDownloadInput
  imageSingularPage: SingularPageCreateManyWithoutImageInput
  imageBlogPost: BlogPostCreateManyWithoutImageInput
  downloadBlogPost: BlogPostCreateManyWithoutDownloadInput
}
input StartProjectFormCreateInput {
  status: Status
  currentUrl: String!
  currentSoftware: String!
  monthlyVisitors: String!
  monthlyOrderCount: String!
  averageOrderValue: String
  targetAudienceType: String!
  projectInvolvedPeople: Json!
  company: String!
  companyContactName: String!
  companyContactEmail: String!
  companyStoresCount: String
  phoneNumber: String!
  message: String
  services: Json
  challenges: Json
  marketingStrategy: String
  marketingBudget: String
}
input JobListingCreateInput {
  status: Status
  jobPerks: String
  label: String
  title: String!
  content: String
  displayOrder: Int
  download: AssetCreateOneWithoutDownloadJobListingInput
  page: PageCreateOneWithoutJobListingInput
}
input MailchimpFormCreateInput {
  status: Status
  email: String!
}
input SingularPageCreateInput {
  status: Status
  content: String!
  title: String!
  releaseDate: DateTime
  image: AssetCreateOneWithoutImageSingularPageInput
  page: PageCreateOneWithoutSingularPageInput
}
input BlogPostCreateInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetCreateOneWithoutImageBlogPostInput
  download: AssetCreateOneWithoutDownloadBlogPostInput
  author: EmployeeCreateOneWithoutBlogPostsInput
  page: PageCreateOneWithoutBlogPostInput
}
input CommentCreateInput {
  status: Status
  displayName: String!
  email: String!
  upvotes: Int!
  content: String!
  page: PageCreateOneWithoutCommentInput
  parentComment: CommentCreateOneWithoutChildCommentsInput
  childComments: CommentCreateManyWithoutParentCommentInput
}
input PageCreateInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
  structuredPage: StructuredPageCreateOneWithoutPageInput
  blogPost: BlogPostCreateOneWithoutPageInput
  jobListing: JobListingCreateOneWithoutPageInput
  comment: CommentCreateOneWithoutPageInput
  singularPage: SingularPageCreateOneWithoutPageInput
}
input AssetUpdateInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input ContactFormUpdateManyWithoutAttachmentInput {
  create: [ContactFormCreateWithoutAttachmentInput!]
  connect: [ContactFormWhereUniqueInput!]
  set: [ContactFormWhereUniqueInput!]
  disconnect: [ContactFormWhereUniqueInput!]
  delete: [ContactFormWhereUniqueInput!]
  update: [ContactFormUpdateWithWhereUniqueWithoutAttachmentInput!]
  updateMany: [ContactFormUpdateManyWithWhereNestedInput!]
  deleteMany: [ContactFormScalarWhereInput!]
  upsert: [ContactFormUpsertWithWhereUniqueWithoutAttachmentInput!]
}
input ContactFormUpdateWithWhereUniqueWithoutAttachmentInput {
  where: ContactFormWhereUniqueInput!
  data: ContactFormUpdateWithoutAttachmentDataInput!
}
input ContactFormUpdateWithoutAttachmentDataInput {
  status: Status
  subject: String
  message: String
  phone: String
  email: String
  name: String
}
input ContactFormUpdateManyWithWhereNestedInput {
  where: ContactFormScalarWhereInput!
  data: ContactFormUpdateManyDataInput!
}
input ContactFormScalarWhereInput {
  _search: String
  AND: [ContactFormScalarWhereInput!]
  OR: [ContactFormScalarWhereInput!]
  NOT: [ContactFormScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  subject: String
  subject_not: String
  subject_in: [String!]
  subject_not_in: [String!]
  subject_lt: String
  subject_lte: String
  subject_gt: String
  subject_gte: String
  subject_contains: String
  subject_not_contains: String
  subject_starts_with: String
  subject_not_starts_with: String
  subject_ends_with: String
  subject_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
}
input ContactFormUpdateManyDataInput {
  status: Status
  subject: String
  message: String
  phone: String
  email: String
  name: String
}
input ContactFormUpsertWithWhereUniqueWithoutAttachmentInput {
  where: ContactFormWhereUniqueInput!
  update: ContactFormUpdateWithoutAttachmentDataInput!
  create: ContactFormCreateWithoutAttachmentInput!
}
input EcosystemUpdateManyWithoutImageInput {
  create: [EcosystemCreateWithoutImageInput!]
  connect: [EcosystemWhereUniqueInput!]
  set: [EcosystemWhereUniqueInput!]
  disconnect: [EcosystemWhereUniqueInput!]
  delete: [EcosystemWhereUniqueInput!]
  update: [EcosystemUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [EcosystemUpdateManyWithWhereNestedInput!]
  deleteMany: [EcosystemScalarWhereInput!]
  upsert: [EcosystemUpsertWithWhereUniqueWithoutImageInput!]
}
input EcosystemUpdateWithWhereUniqueWithoutImageInput {
  where: EcosystemWhereUniqueInput!
  data: EcosystemUpdateWithoutImageDataInput!
}
input EcosystemUpdateWithoutImageDataInput {
  status: Status
}
input EcosystemUpdateManyWithWhereNestedInput {
  where: EcosystemScalarWhereInput!
  data: EcosystemUpdateManyDataInput!
}
input EcosystemScalarWhereInput {
  _search: String
  AND: [EcosystemScalarWhereInput!]
  OR: [EcosystemScalarWhereInput!]
  NOT: [EcosystemScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
}
input EcosystemUpdateManyDataInput {
  status: Status
}
input EcosystemUpsertWithWhereUniqueWithoutImageInput {
  where: EcosystemWhereUniqueInput!
  update: EcosystemUpdateWithoutImageDataInput!
  create: EcosystemCreateWithoutImageInput!
}
input StructuredPageUpdateManyWithoutImageInput {
  create: [StructuredPageCreateWithoutImageInput!]
  connect: [StructuredPageWhereUniqueInput!]
  set: [StructuredPageWhereUniqueInput!]
  disconnect: [StructuredPageWhereUniqueInput!]
  delete: [StructuredPageWhereUniqueInput!]
  update: [StructuredPageUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [StructuredPageUpdateManyWithWhereNestedInput!]
  deleteMany: [StructuredPageScalarWhereInput!]
  upsert: [StructuredPageUpsertWithWhereUniqueWithoutImageInput!]
}
input StructuredPageUpdateWithWhereUniqueWithoutImageInput {
  where: StructuredPageWhereUniqueInput!
  data: StructuredPageUpdateWithoutImageDataInput!
}
input StructuredPageUpdateWithoutImageDataInput {
  status: Status
  order: Int
  description: String
  title: String
  blocks: BlockUpdateManyWithoutPageInput
  page: PageUpdateOneWithoutStructuredPageInput
}
input BlockUpdateManyWithoutPageInput {
  create: [BlockCreateWithoutPageInput!]
  connect: [BlockWhereUniqueInput!]
  set: [BlockWhereUniqueInput!]
  disconnect: [BlockWhereUniqueInput!]
  delete: [BlockWhereUniqueInput!]
  update: [BlockUpdateWithWhereUniqueWithoutPageInput!]
  updateMany: [BlockUpdateManyWithWhereNestedInput!]
  deleteMany: [BlockScalarWhereInput!]
  upsert: [BlockUpsertWithWhereUniqueWithoutPageInput!]
}
input BlockUpdateWithWhereUniqueWithoutPageInput {
  where: BlockWhereUniqueInput!
  data: BlockUpdateWithoutPageDataInput!
}
input BlockUpdateWithoutPageDataInput {
  status: Status
  title: String
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String
  featured: Boolean
  raised: Boolean
  brandLogo: BlockUpdatebrandLogoInput
  childBlocks: BlockUpdateManyWithoutParentBlockInput
  parentBlock: BlockUpdateOneWithoutChildBlocksInput
}
input BlockUpdatebrandLogoInput {
  set: [BrandLogoProperties!]
}
input BlockUpdateManyWithoutParentBlockInput {
  create: [BlockCreateWithoutParentBlockInput!]
  connect: [BlockWhereUniqueInput!]
  set: [BlockWhereUniqueInput!]
  disconnect: [BlockWhereUniqueInput!]
  delete: [BlockWhereUniqueInput!]
  update: [BlockUpdateWithWhereUniqueWithoutParentBlockInput!]
  updateMany: [BlockUpdateManyWithWhereNestedInput!]
  deleteMany: [BlockScalarWhereInput!]
  upsert: [BlockUpsertWithWhereUniqueWithoutParentBlockInput!]
}
input BlockUpdateWithWhereUniqueWithoutParentBlockInput {
  where: BlockWhereUniqueInput!
  data: BlockUpdateWithoutParentBlockDataInput!
}
input BlockUpdateWithoutParentBlockDataInput {
  status: Status
  title: String
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String
  featured: Boolean
  raised: Boolean
  brandLogo: BlockUpdatebrandLogoInput
  childBlocks: BlockUpdateManyWithoutParentBlockInput
  page: StructuredPageUpdateOneWithoutBlocksInput
}
input StructuredPageUpdateOneWithoutBlocksInput {
  create: StructuredPageCreateWithoutBlocksInput
  connect: StructuredPageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StructuredPageUpdateWithoutBlocksDataInput
  upsert: StructuredPageUpsertWithoutBlocksInput
}
input StructuredPageUpdateWithoutBlocksDataInput {
  status: Status
  order: Int
  description: String
  title: String
  image: AssetUpdateOneWithoutImageStructuredPageInput
  page: PageUpdateOneWithoutStructuredPageInput
}
input AssetUpdateOneWithoutImageStructuredPageInput {
  create: AssetCreateWithoutImageStructuredPageInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageStructuredPageDataInput
  upsert: AssetUpsertWithoutImageStructuredPageInput
}
input AssetUpdateWithoutImageStructuredPageDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input EmployeeUpdateManyWithoutImageInput {
  create: [EmployeeCreateWithoutImageInput!]
  connect: [EmployeeWhereUniqueInput!]
  set: [EmployeeWhereUniqueInput!]
  disconnect: [EmployeeWhereUniqueInput!]
  delete: [EmployeeWhereUniqueInput!]
  update: [EmployeeUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [EmployeeUpdateManyWithWhereNestedInput!]
  deleteMany: [EmployeeScalarWhereInput!]
  upsert: [EmployeeUpsertWithWhereUniqueWithoutImageInput!]
}
input EmployeeUpdateWithWhereUniqueWithoutImageInput {
  where: EmployeeWhereUniqueInput!
  data: EmployeeUpdateWithoutImageDataInput!
}
input EmployeeUpdateWithoutImageDataInput {
  status: Status
  firstName: String
  lastName: String
  jobTitle: String
  slackId: String
  email: String
  blogPosts: BlogPostUpdateManyWithoutAuthorInput
}
input BlogPostUpdateManyWithoutAuthorInput {
  create: [BlogPostCreateWithoutAuthorInput!]
  connect: [BlogPostWhereUniqueInput!]
  set: [BlogPostWhereUniqueInput!]
  disconnect: [BlogPostWhereUniqueInput!]
  delete: [BlogPostWhereUniqueInput!]
  update: [BlogPostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [BlogPostUpdateManyWithWhereNestedInput!]
  deleteMany: [BlogPostScalarWhereInput!]
  upsert: [BlogPostUpsertWithWhereUniqueWithoutAuthorInput!]
}
input BlogPostUpdateWithWhereUniqueWithoutAuthorInput {
  where: BlogPostWhereUniqueInput!
  data: BlogPostUpdateWithoutAuthorDataInput!
}
input BlogPostUpdateWithoutAuthorDataInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetUpdateOneWithoutImageBlogPostInput
  download: AssetUpdateOneWithoutDownloadBlogPostInput
  page: PageUpdateOneWithoutBlogPostInput
}
input AssetUpdateOneWithoutImageBlogPostInput {
  create: AssetCreateWithoutImageBlogPostInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageBlogPostDataInput
  upsert: AssetUpsertWithoutImageBlogPostInput
}
input AssetUpdateWithoutImageBlogPostDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input DocumentUpdateManyWithoutFileInput {
  create: [DocumentCreateWithoutFileInput!]
  connect: [DocumentWhereUniqueInput!]
  set: [DocumentWhereUniqueInput!]
  disconnect: [DocumentWhereUniqueInput!]
  delete: [DocumentWhereUniqueInput!]
  update: [DocumentUpdateWithWhereUniqueWithoutFileInput!]
  updateMany: [DocumentUpdateManyWithWhereNestedInput!]
  deleteMany: [DocumentScalarWhereInput!]
  upsert: [DocumentUpsertWithWhereUniqueWithoutFileInput!]
}
input DocumentUpdateWithWhereUniqueWithoutFileInput {
  where: DocumentWhereUniqueInput!
  data: DocumentUpdateWithoutFileDataInput!
}
input DocumentUpdateWithoutFileDataInput {
  status: Status
  name: String
}
input DocumentUpdateManyWithWhereNestedInput {
  where: DocumentScalarWhereInput!
  data: DocumentUpdateManyDataInput!
}
input DocumentScalarWhereInput {
  _search: String
  AND: [DocumentScalarWhereInput!]
  OR: [DocumentScalarWhereInput!]
  NOT: [DocumentScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
}
input DocumentUpdateManyDataInput {
  status: Status
  name: String
}
input DocumentUpsertWithWhereUniqueWithoutFileInput {
  where: DocumentWhereUniqueInput!
  update: DocumentUpdateWithoutFileDataInput!
  create: DocumentCreateWithoutFileInput!
}
input JobListingUpdateManyWithoutDownloadInput {
  create: [JobListingCreateWithoutDownloadInput!]
  connect: [JobListingWhereUniqueInput!]
  set: [JobListingWhereUniqueInput!]
  disconnect: [JobListingWhereUniqueInput!]
  delete: [JobListingWhereUniqueInput!]
  update: [JobListingUpdateWithWhereUniqueWithoutDownloadInput!]
  updateMany: [JobListingUpdateManyWithWhereNestedInput!]
  deleteMany: [JobListingScalarWhereInput!]
  upsert: [JobListingUpsertWithWhereUniqueWithoutDownloadInput!]
}
input JobListingUpdateWithWhereUniqueWithoutDownloadInput {
  where: JobListingWhereUniqueInput!
  data: JobListingUpdateWithoutDownloadDataInput!
}
input JobListingUpdateWithoutDownloadDataInput {
  status: Status
  jobPerks: String
  label: String
  title: String
  content: String
  displayOrder: Int
  page: PageUpdateOneWithoutJobListingInput
}
input PageUpdateOneWithoutJobListingInput {
  create: PageCreateWithoutJobListingInput
  connect: PageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PageUpdateWithoutJobListingDataInput
  upsert: PageUpsertWithoutJobListingInput
}
input PageUpdateWithoutJobListingDataInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
  structuredPage: StructuredPageUpdateOneWithoutPageInput
  blogPost: BlogPostUpdateOneWithoutPageInput
  comment: CommentUpdateOneWithoutPageInput
  singularPage: SingularPageUpdateOneWithoutPageInput
}
input StructuredPageUpdateOneWithoutPageInput {
  create: StructuredPageCreateWithoutPageInput
  connect: StructuredPageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StructuredPageUpdateWithoutPageDataInput
  upsert: StructuredPageUpsertWithoutPageInput
}
input StructuredPageUpdateWithoutPageDataInput {
  status: Status
  order: Int
  description: String
  title: String
  image: AssetUpdateOneWithoutImageStructuredPageInput
  blocks: BlockUpdateManyWithoutPageInput
}
input StructuredPageUpsertWithoutPageInput {
  update: StructuredPageUpdateWithoutPageDataInput!
  create: StructuredPageCreateWithoutPageInput!
}
input BlogPostUpdateOneWithoutPageInput {
  create: BlogPostCreateWithoutPageInput
  connect: BlogPostWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: BlogPostUpdateWithoutPageDataInput
  upsert: BlogPostUpsertWithoutPageInput
}
input BlogPostUpdateWithoutPageDataInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetUpdateOneWithoutImageBlogPostInput
  download: AssetUpdateOneWithoutDownloadBlogPostInput
  author: EmployeeUpdateOneWithoutBlogPostsInput
}
input AssetUpdateOneWithoutDownloadBlogPostInput {
  create: AssetCreateWithoutDownloadBlogPostInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutDownloadBlogPostDataInput
  upsert: AssetUpsertWithoutDownloadBlogPostInput
}
input AssetUpdateWithoutDownloadBlogPostDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
}
input SingularPageUpdateManyWithoutImageInput {
  create: [SingularPageCreateWithoutImageInput!]
  connect: [SingularPageWhereUniqueInput!]
  set: [SingularPageWhereUniqueInput!]
  disconnect: [SingularPageWhereUniqueInput!]
  delete: [SingularPageWhereUniqueInput!]
  update: [SingularPageUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [SingularPageUpdateManyWithWhereNestedInput!]
  deleteMany: [SingularPageScalarWhereInput!]
  upsert: [SingularPageUpsertWithWhereUniqueWithoutImageInput!]
}
input SingularPageUpdateWithWhereUniqueWithoutImageInput {
  where: SingularPageWhereUniqueInput!
  data: SingularPageUpdateWithoutImageDataInput!
}
input SingularPageUpdateWithoutImageDataInput {
  status: Status
  content: String
  title: String
  releaseDate: DateTime
  page: PageUpdateOneWithoutSingularPageInput
}
input PageUpdateOneWithoutSingularPageInput {
  create: PageCreateWithoutSingularPageInput
  connect: PageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PageUpdateWithoutSingularPageDataInput
  upsert: PageUpsertWithoutSingularPageInput
}
input PageUpdateWithoutSingularPageDataInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
  structuredPage: StructuredPageUpdateOneWithoutPageInput
  blogPost: BlogPostUpdateOneWithoutPageInput
  jobListing: JobListingUpdateOneWithoutPageInput
  comment: CommentUpdateOneWithoutPageInput
}
input JobListingUpdateOneWithoutPageInput {
  create: JobListingCreateWithoutPageInput
  connect: JobListingWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: JobListingUpdateWithoutPageDataInput
  upsert: JobListingUpsertWithoutPageInput
}
input JobListingUpdateWithoutPageDataInput {
  status: Status
  jobPerks: String
  label: String
  title: String
  content: String
  displayOrder: Int
  download: AssetUpdateOneWithoutDownloadJobListingInput
}
input AssetUpdateOneWithoutDownloadJobListingInput {
  create: AssetCreateWithoutDownloadJobListingInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutDownloadJobListingDataInput
  upsert: AssetUpsertWithoutDownloadJobListingInput
}
input AssetUpdateWithoutDownloadJobListingDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input BlogPostUpdateManyWithoutImageInput {
  create: [BlogPostCreateWithoutImageInput!]
  connect: [BlogPostWhereUniqueInput!]
  set: [BlogPostWhereUniqueInput!]
  disconnect: [BlogPostWhereUniqueInput!]
  delete: [BlogPostWhereUniqueInput!]
  update: [BlogPostUpdateWithWhereUniqueWithoutImageInput!]
  updateMany: [BlogPostUpdateManyWithWhereNestedInput!]
  deleteMany: [BlogPostScalarWhereInput!]
  upsert: [BlogPostUpsertWithWhereUniqueWithoutImageInput!]
}
input BlogPostUpdateWithWhereUniqueWithoutImageInput {
  where: BlogPostWhereUniqueInput!
  data: BlogPostUpdateWithoutImageDataInput!
}
input BlogPostUpdateWithoutImageDataInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  download: AssetUpdateOneWithoutDownloadBlogPostInput
  author: EmployeeUpdateOneWithoutBlogPostsInput
  page: PageUpdateOneWithoutBlogPostInput
}
input EmployeeUpdateOneWithoutBlogPostsInput {
  create: EmployeeCreateWithoutBlogPostsInput
  connect: EmployeeWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: EmployeeUpdateWithoutBlogPostsDataInput
  upsert: EmployeeUpsertWithoutBlogPostsInput
}
input EmployeeUpdateWithoutBlogPostsDataInput {
  status: Status
  firstName: String
  lastName: String
  jobTitle: String
  slackId: String
  email: String
  image: AssetUpdateOneWithoutImageEmployeeInput
}
input AssetUpdateOneWithoutImageEmployeeInput {
  create: AssetCreateWithoutImageEmployeeInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageEmployeeDataInput
  upsert: AssetUpsertWithoutImageEmployeeInput
}
input AssetUpdateWithoutImageEmployeeDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input BlogPostUpdateManyWithoutDownloadInput {
  create: [BlogPostCreateWithoutDownloadInput!]
  connect: [BlogPostWhereUniqueInput!]
  set: [BlogPostWhereUniqueInput!]
  disconnect: [BlogPostWhereUniqueInput!]
  delete: [BlogPostWhereUniqueInput!]
  update: [BlogPostUpdateWithWhereUniqueWithoutDownloadInput!]
  updateMany: [BlogPostUpdateManyWithWhereNestedInput!]
  deleteMany: [BlogPostScalarWhereInput!]
  upsert: [BlogPostUpsertWithWhereUniqueWithoutDownloadInput!]
}
input BlogPostUpdateWithWhereUniqueWithoutDownloadInput {
  where: BlogPostWhereUniqueInput!
  data: BlogPostUpdateWithoutDownloadDataInput!
}
input BlogPostUpdateWithoutDownloadDataInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetUpdateOneWithoutImageBlogPostInput
  author: EmployeeUpdateOneWithoutBlogPostsInput
  page: PageUpdateOneWithoutBlogPostInput
}
input PageUpdateOneWithoutBlogPostInput {
  create: PageCreateWithoutBlogPostInput
  connect: PageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PageUpdateWithoutBlogPostDataInput
  upsert: PageUpsertWithoutBlogPostInput
}
input PageUpdateWithoutBlogPostDataInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
  structuredPage: StructuredPageUpdateOneWithoutPageInput
  jobListing: JobListingUpdateOneWithoutPageInput
  comment: CommentUpdateOneWithoutPageInput
  singularPage: SingularPageUpdateOneWithoutPageInput
}
input CommentUpdateOneWithoutPageInput {
  create: CommentCreateWithoutPageInput
  connect: CommentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CommentUpdateWithoutPageDataInput
  upsert: CommentUpsertWithoutPageInput
}
input CommentUpdateWithoutPageDataInput {
  status: Status
  displayName: String
  email: String
  upvotes: Int
  content: String
  parentComment: CommentUpdateOneWithoutChildCommentsInput
  childComments: CommentUpdateManyWithoutParentCommentInput
}
input CommentUpdateOneWithoutChildCommentsInput {
  create: CommentCreateWithoutChildCommentsInput
  connect: CommentWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CommentUpdateWithoutChildCommentsDataInput
  upsert: CommentUpsertWithoutChildCommentsInput
}
input CommentUpdateWithoutChildCommentsDataInput {
  status: Status
  displayName: String
  email: String
  upvotes: Int
  content: String
  page: PageUpdateOneWithoutCommentInput
  parentComment: CommentUpdateOneWithoutChildCommentsInput
}
input PageUpdateOneWithoutCommentInput {
  create: PageCreateWithoutCommentInput
  connect: PageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PageUpdateWithoutCommentDataInput
  upsert: PageUpsertWithoutCommentInput
}
input PageUpdateWithoutCommentDataInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
  structuredPage: StructuredPageUpdateOneWithoutPageInput
  blogPost: BlogPostUpdateOneWithoutPageInput
  jobListing: JobListingUpdateOneWithoutPageInput
  singularPage: SingularPageUpdateOneWithoutPageInput
}
input SingularPageUpdateOneWithoutPageInput {
  create: SingularPageCreateWithoutPageInput
  connect: SingularPageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SingularPageUpdateWithoutPageDataInput
  upsert: SingularPageUpsertWithoutPageInput
}
input SingularPageUpdateWithoutPageDataInput {
  status: Status
  content: String
  title: String
  releaseDate: DateTime
  image: AssetUpdateOneWithoutImageSingularPageInput
}
input AssetUpdateOneWithoutImageSingularPageInput {
  create: AssetCreateWithoutImageSingularPageInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageSingularPageDataInput
  upsert: AssetUpsertWithoutImageSingularPageInput
}
input AssetUpdateWithoutImageSingularPageDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input AssetUpsertWithoutImageSingularPageInput {
  update: AssetUpdateWithoutImageSingularPageDataInput!
  create: AssetCreateWithoutImageSingularPageInput!
}
input SingularPageUpsertWithoutPageInput {
  update: SingularPageUpdateWithoutPageDataInput!
  create: SingularPageCreateWithoutPageInput!
}
input PageUpsertWithoutCommentInput {
  update: PageUpdateWithoutCommentDataInput!
  create: PageCreateWithoutCommentInput!
}
input CommentUpsertWithoutChildCommentsInput {
  update: CommentUpdateWithoutChildCommentsDataInput!
  create: CommentCreateWithoutChildCommentsInput!
}
input CommentUpdateManyWithoutParentCommentInput {
  create: [CommentCreateWithoutParentCommentInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutParentCommentInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentScalarWhereInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutParentCommentInput!]
}
input CommentUpdateWithWhereUniqueWithoutParentCommentInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutParentCommentDataInput!
}
input CommentUpdateWithoutParentCommentDataInput {
  status: Status
  displayName: String
  email: String
  upvotes: Int
  content: String
  page: PageUpdateOneWithoutCommentInput
  childComments: CommentUpdateManyWithoutParentCommentInput
}
input CommentUpdateManyWithWhereNestedInput {
  where: CommentScalarWhereInput!
  data: CommentUpdateManyDataInput!
}
input CommentScalarWhereInput {
  _search: String
  AND: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  NOT: [CommentScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  displayName: String
  displayName_not: String
  displayName_in: [String!]
  displayName_not_in: [String!]
  displayName_lt: String
  displayName_lte: String
  displayName_gt: String
  displayName_gte: String
  displayName_contains: String
  displayName_not_contains: String
  displayName_starts_with: String
  displayName_not_starts_with: String
  displayName_ends_with: String
  displayName_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  upvotes: Int
  upvotes_not: Int
  upvotes_in: [Int!]
  upvotes_not_in: [Int!]
  upvotes_lt: Int
  upvotes_lte: Int
  upvotes_gt: Int
  upvotes_gte: Int
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
}
input CommentUpdateManyDataInput {
  status: Status
  displayName: String
  email: String
  upvotes: Int
  content: String
}
input CommentUpsertWithWhereUniqueWithoutParentCommentInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutParentCommentDataInput!
  create: CommentCreateWithoutParentCommentInput!
}
input CommentUpsertWithoutPageInput {
  update: CommentUpdateWithoutPageDataInput!
  create: CommentCreateWithoutPageInput!
}
input PageUpsertWithoutBlogPostInput {
  update: PageUpdateWithoutBlogPostDataInput!
  create: PageCreateWithoutBlogPostInput!
}
input BlogPostUpdateManyWithWhereNestedInput {
  where: BlogPostScalarWhereInput!
  data: BlogPostUpdateManyDataInput!
}
input BlogPostScalarWhereInput {
  _search: String
  AND: [BlogPostScalarWhereInput!]
  OR: [BlogPostScalarWhereInput!]
  NOT: [BlogPostScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  publicPublishedAt: DateTime
  publicPublishedAt_not: DateTime
  publicPublishedAt_in: [DateTime!]
  publicPublishedAt_not_in: [DateTime!]
  publicPublishedAt_lt: DateTime
  publicPublishedAt_lte: DateTime
  publicPublishedAt_gt: DateTime
  publicPublishedAt_gte: DateTime
  contentEN: String
  contentEN_not: String
  contentEN_in: [String!]
  contentEN_not_in: [String!]
  contentEN_lt: String
  contentEN_lte: String
  contentEN_gt: String
  contentEN_gte: String
  contentEN_contains: String
  contentEN_not_contains: String
  contentEN_starts_with: String
  contentEN_not_starts_with: String
  contentEN_ends_with: String
  contentEN_not_ends_with: String
  contentNL: String
  contentNL_not: String
  contentNL_in: [String!]
  contentNL_not_in: [String!]
  contentNL_lt: String
  contentNL_lte: String
  contentNL_gt: String
  contentNL_gte: String
  contentNL_contains: String
  contentNL_not_contains: String
  contentNL_starts_with: String
  contentNL_not_starts_with: String
  contentNL_ends_with: String
  contentNL_not_ends_with: String
  titleEN: String
  titleEN_not: String
  titleEN_in: [String!]
  titleEN_not_in: [String!]
  titleEN_lt: String
  titleEN_lte: String
  titleEN_gt: String
  titleEN_gte: String
  titleEN_contains: String
  titleEN_not_contains: String
  titleEN_starts_with: String
  titleEN_not_starts_with: String
  titleEN_ends_with: String
  titleEN_not_ends_with: String
  titleNL: String
  titleNL_not: String
  titleNL_in: [String!]
  titleNL_not_in: [String!]
  titleNL_lt: String
  titleNL_lte: String
  titleNL_gt: String
  titleNL_gte: String
  titleNL_contains: String
  titleNL_not_contains: String
  titleNL_starts_with: String
  titleNL_not_starts_with: String
  titleNL_ends_with: String
  titleNL_not_ends_with: String
}
input BlogPostUpdateManyDataInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
}
input BlogPostUpsertWithWhereUniqueWithoutDownloadInput {
  where: BlogPostWhereUniqueInput!
  update: BlogPostUpdateWithoutDownloadDataInput!
  create: BlogPostCreateWithoutDownloadInput!
}
input AssetUpsertWithoutImageEmployeeInput {
  update: AssetUpdateWithoutImageEmployeeDataInput!
  create: AssetCreateWithoutImageEmployeeInput!
}
input EmployeeUpsertWithoutBlogPostsInput {
  update: EmployeeUpdateWithoutBlogPostsDataInput!
  create: EmployeeCreateWithoutBlogPostsInput!
}
input BlogPostUpsertWithWhereUniqueWithoutImageInput {
  where: BlogPostWhereUniqueInput!
  update: BlogPostUpdateWithoutImageDataInput!
  create: BlogPostCreateWithoutImageInput!
}
input AssetUpsertWithoutDownloadJobListingInput {
  update: AssetUpdateWithoutDownloadJobListingDataInput!
  create: AssetCreateWithoutDownloadJobListingInput!
}
input JobListingUpsertWithoutPageInput {
  update: JobListingUpdateWithoutPageDataInput!
  create: JobListingCreateWithoutPageInput!
}
input PageUpsertWithoutSingularPageInput {
  update: PageUpdateWithoutSingularPageDataInput!
  create: PageCreateWithoutSingularPageInput!
}
input SingularPageUpdateManyWithWhereNestedInput {
  where: SingularPageScalarWhereInput!
  data: SingularPageUpdateManyDataInput!
}
input SingularPageScalarWhereInput {
  _search: String
  AND: [SingularPageScalarWhereInput!]
  OR: [SingularPageScalarWhereInput!]
  NOT: [SingularPageScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  releaseDate: DateTime
  releaseDate_not: DateTime
  releaseDate_in: [DateTime!]
  releaseDate_not_in: [DateTime!]
  releaseDate_lt: DateTime
  releaseDate_lte: DateTime
  releaseDate_gt: DateTime
  releaseDate_gte: DateTime
}
input SingularPageUpdateManyDataInput {
  status: Status
  content: String
  title: String
  releaseDate: DateTime
}
input SingularPageUpsertWithWhereUniqueWithoutImageInput {
  where: SingularPageWhereUniqueInput!
  update: SingularPageUpdateWithoutImageDataInput!
  create: SingularPageCreateWithoutImageInput!
}
input AssetUpsertWithoutDownloadBlogPostInput {
  update: AssetUpdateWithoutDownloadBlogPostDataInput!
  create: AssetCreateWithoutDownloadBlogPostInput!
}
input BlogPostUpsertWithoutPageInput {
  update: BlogPostUpdateWithoutPageDataInput!
  create: BlogPostCreateWithoutPageInput!
}
input PageUpsertWithoutJobListingInput {
  update: PageUpdateWithoutJobListingDataInput!
  create: PageCreateWithoutJobListingInput!
}
input JobListingUpdateManyWithWhereNestedInput {
  where: JobListingScalarWhereInput!
  data: JobListingUpdateManyDataInput!
}
input JobListingScalarWhereInput {
  _search: String
  AND: [JobListingScalarWhereInput!]
  OR: [JobListingScalarWhereInput!]
  NOT: [JobListingScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  jobPerks: String
  jobPerks_not: String
  jobPerks_in: [String!]
  jobPerks_not_in: [String!]
  jobPerks_lt: String
  jobPerks_lte: String
  jobPerks_gt: String
  jobPerks_gte: String
  jobPerks_contains: String
  jobPerks_not_contains: String
  jobPerks_starts_with: String
  jobPerks_not_starts_with: String
  jobPerks_ends_with: String
  jobPerks_not_ends_with: String
  label: String
  label_not: String
  label_in: [String!]
  label_not_in: [String!]
  label_lt: String
  label_lte: String
  label_gt: String
  label_gte: String
  label_contains: String
  label_not_contains: String
  label_starts_with: String
  label_not_starts_with: String
  label_ends_with: String
  label_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  displayOrder: Int
  displayOrder_not: Int
  displayOrder_in: [Int!]
  displayOrder_not_in: [Int!]
  displayOrder_lt: Int
  displayOrder_lte: Int
  displayOrder_gt: Int
  displayOrder_gte: Int
}
input JobListingUpdateManyDataInput {
  status: Status
  jobPerks: String
  label: String
  title: String
  content: String
  displayOrder: Int
}
input JobListingUpsertWithWhereUniqueWithoutDownloadInput {
  where: JobListingWhereUniqueInput!
  update: JobListingUpdateWithoutDownloadDataInput!
  create: JobListingCreateWithoutDownloadInput!
}
input AssetUpsertWithoutImageBlogPostInput {
  update: AssetUpdateWithoutImageBlogPostDataInput!
  create: AssetCreateWithoutImageBlogPostInput!
}
input BlogPostUpsertWithWhereUniqueWithoutAuthorInput {
  where: BlogPostWhereUniqueInput!
  update: BlogPostUpdateWithoutAuthorDataInput!
  create: BlogPostCreateWithoutAuthorInput!
}
input EmployeeUpdateManyWithWhereNestedInput {
  where: EmployeeScalarWhereInput!
  data: EmployeeUpdateManyDataInput!
}
input EmployeeScalarWhereInput {
  _search: String
  AND: [EmployeeScalarWhereInput!]
  OR: [EmployeeScalarWhereInput!]
  NOT: [EmployeeScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  jobTitle: String
  jobTitle_not: String
  jobTitle_in: [String!]
  jobTitle_not_in: [String!]
  jobTitle_lt: String
  jobTitle_lte: String
  jobTitle_gt: String
  jobTitle_gte: String
  jobTitle_contains: String
  jobTitle_not_contains: String
  jobTitle_starts_with: String
  jobTitle_not_starts_with: String
  jobTitle_ends_with: String
  jobTitle_not_ends_with: String
  slackId: String
  slackId_not: String
  slackId_in: [String!]
  slackId_not_in: [String!]
  slackId_lt: String
  slackId_lte: String
  slackId_gt: String
  slackId_gte: String
  slackId_contains: String
  slackId_not_contains: String
  slackId_starts_with: String
  slackId_not_starts_with: String
  slackId_ends_with: String
  slackId_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
}
input EmployeeUpdateManyDataInput {
  status: Status
  firstName: String
  lastName: String
  jobTitle: String
  slackId: String
  email: String
}
input EmployeeUpsertWithWhereUniqueWithoutImageInput {
  where: EmployeeWhereUniqueInput!
  update: EmployeeUpdateWithoutImageDataInput!
  create: EmployeeCreateWithoutImageInput!
}
input AssetUpsertWithoutImageStructuredPageInput {
  update: AssetUpdateWithoutImageStructuredPageDataInput!
  create: AssetCreateWithoutImageStructuredPageInput!
}
input PageUpdateOneWithoutStructuredPageInput {
  create: PageCreateWithoutStructuredPageInput
  connect: PageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PageUpdateWithoutStructuredPageDataInput
  upsert: PageUpsertWithoutStructuredPageInput
}
input PageUpdateWithoutStructuredPageDataInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
  blogPost: BlogPostUpdateOneWithoutPageInput
  jobListing: JobListingUpdateOneWithoutPageInput
  comment: CommentUpdateOneWithoutPageInput
  singularPage: SingularPageUpdateOneWithoutPageInput
}
input PageUpsertWithoutStructuredPageInput {
  update: PageUpdateWithoutStructuredPageDataInput!
  create: PageCreateWithoutStructuredPageInput!
}
input StructuredPageUpsertWithoutBlocksInput {
  update: StructuredPageUpdateWithoutBlocksDataInput!
  create: StructuredPageCreateWithoutBlocksInput!
}
input BlockUpdateManyWithWhereNestedInput {
  where: BlockScalarWhereInput!
  data: BlockUpdateManyDataInput!
}
input BlockScalarWhereInput {
  _search: String
  AND: [BlockScalarWhereInput!]
  OR: [BlockScalarWhereInput!]
  NOT: [BlockScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  extended: Boolean
  extended_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  showTitle: Boolean
  showTitle_not: Boolean
  extendedFull: Boolean
  extendedFull_not: Boolean
  extendedContinuation: Boolean
  extendedContinuation_not: Boolean
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  featured: Boolean
  featured_not: Boolean
  raised: Boolean
  raised_not: Boolean
}
input BlockUpdateManyDataInput {
  status: Status
  title: String
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String
  featured: Boolean
  raised: Boolean
  brandLogo: BlockUpdatebrandLogoInput
}
input BlockUpsertWithWhereUniqueWithoutParentBlockInput {
  where: BlockWhereUniqueInput!
  update: BlockUpdateWithoutParentBlockDataInput!
  create: BlockCreateWithoutParentBlockInput!
}
input BlockUpdateOneWithoutChildBlocksInput {
  create: BlockCreateWithoutChildBlocksInput
  connect: BlockWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: BlockUpdateWithoutChildBlocksDataInput
  upsert: BlockUpsertWithoutChildBlocksInput
}
input BlockUpdateWithoutChildBlocksDataInput {
  status: Status
  title: String
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String
  featured: Boolean
  raised: Boolean
  brandLogo: BlockUpdatebrandLogoInput
  parentBlock: BlockUpdateOneWithoutChildBlocksInput
  page: StructuredPageUpdateOneWithoutBlocksInput
}
input BlockUpsertWithoutChildBlocksInput {
  update: BlockUpdateWithoutChildBlocksDataInput!
  create: BlockCreateWithoutChildBlocksInput!
}
input BlockUpsertWithWhereUniqueWithoutPageInput {
  where: BlockWhereUniqueInput!
  update: BlockUpdateWithoutPageDataInput!
  create: BlockCreateWithoutPageInput!
}
input StructuredPageUpdateManyWithWhereNestedInput {
  where: StructuredPageScalarWhereInput!
  data: StructuredPageUpdateManyDataInput!
}
input StructuredPageScalarWhereInput {
  _search: String
  AND: [StructuredPageScalarWhereInput!]
  OR: [StructuredPageScalarWhereInput!]
  NOT: [StructuredPageScalarWhereInput!]
  status: Status
  status_not: Status
  status_in: [Status!]
  status_not_in: [Status!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
}
input StructuredPageUpdateManyDataInput {
  status: Status
  order: Int
  description: String
  title: String
}
input StructuredPageUpsertWithWhereUniqueWithoutImageInput {
  where: StructuredPageWhereUniqueInput!
  update: StructuredPageUpdateWithoutImageDataInput!
  create: StructuredPageCreateWithoutImageInput!
}
input ContactFormUpdateInput {
  status: Status
  subject: String
  message: String
  phone: String
  email: String
  name: String
  attachment: AssetUpdateOneWithoutAttachmentContactFormInput
}
input AssetUpdateOneWithoutAttachmentContactFormInput {
  create: AssetCreateWithoutAttachmentContactFormInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutAttachmentContactFormDataInput
  upsert: AssetUpsertWithoutAttachmentContactFormInput
}
input AssetUpdateWithoutAttachmentContactFormDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input AssetUpsertWithoutAttachmentContactFormInput {
  update: AssetUpdateWithoutAttachmentContactFormDataInput!
  create: AssetCreateWithoutAttachmentContactFormInput!
}
input EcosystemUpdateInput {
  status: Status
  image: AssetUpdateOneWithoutImageEcosystemInput
}
input AssetUpdateOneWithoutImageEcosystemInput {
  create: AssetCreateWithoutImageEcosystemInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutImageEcosystemDataInput
  upsert: AssetUpsertWithoutImageEcosystemInput
}
input AssetUpdateWithoutImageEcosystemDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  fileDocument: DocumentUpdateManyWithoutFileInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input AssetUpsertWithoutImageEcosystemInput {
  update: AssetUpdateWithoutImageEcosystemDataInput!
  create: AssetCreateWithoutImageEcosystemInput!
}
input BlockUpdateInput {
  status: Status
  title: String
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String
  featured: Boolean
  raised: Boolean
  brandLogo: BlockUpdatebrandLogoInput
  childBlocks: BlockUpdateManyWithoutParentBlockInput
  parentBlock: BlockUpdateOneWithoutChildBlocksInput
  page: StructuredPageUpdateOneWithoutBlocksInput
}
input ModuleUpdateInput {
  status: Status
  name: String
  order: Int
  repoUrl: String
  description: String
  type: ModuleType
}
input StructuredPageUpdateInput {
  status: Status
  order: Int
  description: String
  title: String
  image: AssetUpdateOneWithoutImageStructuredPageInput
  blocks: BlockUpdateManyWithoutPageInput
  page: PageUpdateOneWithoutStructuredPageInput
}
input EmployeeUpdateInput {
  status: Status
  firstName: String
  lastName: String
  jobTitle: String
  slackId: String
  email: String
  image: AssetUpdateOneWithoutImageEmployeeInput
  blogPosts: BlogPostUpdateManyWithoutAuthorInput
}
input QuoteUpdateInput {
  status: Status
  authorName: String
  authorTitle: String
  asideTitle: String
  asideText: String
  text: String
}
input DocumentUpdateInput {
  status: Status
  name: String
  file: AssetUpdateOneWithoutFileDocumentInput
}
input AssetUpdateOneWithoutFileDocumentInput {
  create: AssetCreateWithoutFileDocumentInput
  connect: AssetWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AssetUpdateWithoutFileDocumentDataInput
  upsert: AssetUpsertWithoutFileDocumentInput
}
input AssetUpdateWithoutFileDocumentDataInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  attachmentContactForm: ContactFormUpdateManyWithoutAttachmentInput
  imageEcosystem: EcosystemUpdateManyWithoutImageInput
  imageStructuredPage: StructuredPageUpdateManyWithoutImageInput
  imageEmployee: EmployeeUpdateManyWithoutImageInput
  downloadJobListing: JobListingUpdateManyWithoutDownloadInput
  imageSingularPage: SingularPageUpdateManyWithoutImageInput
  imageBlogPost: BlogPostUpdateManyWithoutImageInput
  downloadBlogPost: BlogPostUpdateManyWithoutDownloadInput
}
input AssetUpsertWithoutFileDocumentInput {
  update: AssetUpdateWithoutFileDocumentDataInput!
  create: AssetCreateWithoutFileDocumentInput!
}
input StartProjectFormUpdateInput {
  status: Status
  currentUrl: String
  currentSoftware: String
  monthlyVisitors: String
  monthlyOrderCount: String
  averageOrderValue: String
  targetAudienceType: String
  projectInvolvedPeople: Json
  company: String
  companyContactName: String
  companyContactEmail: String
  companyStoresCount: String
  phoneNumber: String
  message: String
  services: Json
  challenges: Json
  marketingStrategy: String
  marketingBudget: String
}
input JobListingUpdateInput {
  status: Status
  jobPerks: String
  label: String
  title: String
  content: String
  displayOrder: Int
  download: AssetUpdateOneWithoutDownloadJobListingInput
  page: PageUpdateOneWithoutJobListingInput
}
input MailchimpFormUpdateInput {
  status: Status
  email: String
}
input SingularPageUpdateInput {
  status: Status
  content: String
  title: String
  releaseDate: DateTime
  image: AssetUpdateOneWithoutImageSingularPageInput
  page: PageUpdateOneWithoutSingularPageInput
}
input BlogPostUpdateInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
  image: AssetUpdateOneWithoutImageBlogPostInput
  download: AssetUpdateOneWithoutDownloadBlogPostInput
  author: EmployeeUpdateOneWithoutBlogPostsInput
  page: PageUpdateOneWithoutBlogPostInput
}
input CommentUpdateInput {
  status: Status
  displayName: String
  email: String
  upvotes: Int
  content: String
  page: PageUpdateOneWithoutCommentInput
  parentComment: CommentUpdateOneWithoutChildCommentsInput
  childComments: CommentUpdateManyWithoutParentCommentInput
}
input PageUpdateInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
  structuredPage: StructuredPageUpdateOneWithoutPageInput
  blogPost: BlogPostUpdateOneWithoutPageInput
  jobListing: JobListingUpdateOneWithoutPageInput
  comment: CommentUpdateOneWithoutPageInput
  singularPage: SingularPageUpdateOneWithoutPageInput
}
input AssetUpdateManyMutationInput {
  status: Status
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
}
type BatchPayload {
  count: Long!
}
scalar Long
input ContactFormUpdateManyMutationInput {
  status: Status
  subject: String
  message: String
  phone: String
  email: String
  name: String
}
input EcosystemUpdateManyMutationInput {
  status: Status
}
input BlockUpdateManyMutationInput {
  status: Status
  title: String
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String
  featured: Boolean
  raised: Boolean
  brandLogo: BlockUpdatebrandLogoInput
}
input ModuleUpdateManyMutationInput {
  status: Status
  name: String
  order: Int
  repoUrl: String
  description: String
  type: ModuleType
}
input StructuredPageUpdateManyMutationInput {
  status: Status
  order: Int
  description: String
  title: String
}
input EmployeeUpdateManyMutationInput {
  status: Status
  firstName: String
  lastName: String
  jobTitle: String
  slackId: String
  email: String
}
input QuoteUpdateManyMutationInput {
  status: Status
  authorName: String
  authorTitle: String
  asideTitle: String
  asideText: String
  text: String
}
input DocumentUpdateManyMutationInput {
  status: Status
  name: String
}
input StartProjectFormUpdateManyMutationInput {
  status: Status
  currentUrl: String
  currentSoftware: String
  monthlyVisitors: String
  monthlyOrderCount: String
  averageOrderValue: String
  targetAudienceType: String
  projectInvolvedPeople: Json
  company: String
  companyContactName: String
  companyContactEmail: String
  companyStoresCount: String
  phoneNumber: String
  message: String
  services: Json
  challenges: Json
  marketingStrategy: String
  marketingBudget: String
}
input JobListingUpdateManyMutationInput {
  status: Status
  jobPerks: String
  label: String
  title: String
  content: String
  displayOrder: Int
}
input MailchimpFormUpdateManyMutationInput {
  status: Status
  email: String
}
input SingularPageUpdateManyMutationInput {
  status: Status
  content: String
  title: String
  releaseDate: DateTime
}
input BlogPostUpdateManyMutationInput {
  status: Status
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
}
input CommentUpdateManyMutationInput {
  status: Status
  displayName: String
  email: String
  upvotes: Int
  content: String
}
input PageUpdateManyMutationInput {
  status: Status
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots
}
input AssetSubscriptionWhereInput {
  AND: [AssetSubscriptionWhereInput!]
  OR: [AssetSubscriptionWhereInput!]
  NOT: [AssetSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AssetWhereInput
}
enum MutationType {
  CREATED
  UPDATED
  DELETED
}
type AssetSubscriptionPayload {
  mutation: MutationType!
  node: Asset
  updatedFields: [String!]
  previousValues: AssetPreviousValues
}
type AssetPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
}
input ContactFormSubscriptionWhereInput {
  AND: [ContactFormSubscriptionWhereInput!]
  OR: [ContactFormSubscriptionWhereInput!]
  NOT: [ContactFormSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ContactFormWhereInput
}
type ContactFormSubscriptionPayload {
  mutation: MutationType!
  node: ContactForm
  updatedFields: [String!]
  previousValues: ContactFormPreviousValues
}
type ContactFormPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  subject: String!
  message: String
  phone: String
  email: String
  name: String!
}
input EcosystemSubscriptionWhereInput {
  AND: [EcosystemSubscriptionWhereInput!]
  OR: [EcosystemSubscriptionWhereInput!]
  NOT: [EcosystemSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EcosystemWhereInput
}
type EcosystemSubscriptionPayload {
  mutation: MutationType!
  node: Ecosystem
  updatedFields: [String!]
  previousValues: EcosystemPreviousValues
}
type EcosystemPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
}
input BlockSubscriptionWhereInput {
  AND: [BlockSubscriptionWhereInput!]
  OR: [BlockSubscriptionWhereInput!]
  NOT: [BlockSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BlockWhereInput
}
type BlockSubscriptionPayload {
  mutation: MutationType!
  node: Block
  updatedFields: [String!]
  previousValues: BlockPreviousValues
}
type BlockPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  title: String!
  extended: Boolean
  order: Int
  showTitle: Boolean
  extendedFull: Boolean
  extendedContinuation: Boolean
  content: String!
  featured: Boolean
  raised: Boolean
  brandLogo: [BrandLogoProperties!]!
}
input ModuleSubscriptionWhereInput {
  AND: [ModuleSubscriptionWhereInput!]
  OR: [ModuleSubscriptionWhereInput!]
  NOT: [ModuleSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ModuleWhereInput
}
type ModuleSubscriptionPayload {
  mutation: MutationType!
  node: Module
  updatedFields: [String!]
  previousValues: ModulePreviousValues
}
type ModulePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
  order: Int
  repoUrl: String
  description: String
  type: ModuleType!
}
input StructuredPageSubscriptionWhereInput {
  AND: [StructuredPageSubscriptionWhereInput!]
  OR: [StructuredPageSubscriptionWhereInput!]
  NOT: [StructuredPageSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: StructuredPageWhereInput
}
type StructuredPageSubscriptionPayload {
  mutation: MutationType!
  node: StructuredPage
  updatedFields: [String!]
  previousValues: StructuredPagePreviousValues
}
type StructuredPagePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  order: Int
  description: String!
  title: String
}
input EmployeeSubscriptionWhereInput {
  AND: [EmployeeSubscriptionWhereInput!]
  OR: [EmployeeSubscriptionWhereInput!]
  NOT: [EmployeeSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EmployeeWhereInput
}
type EmployeeSubscriptionPayload {
  mutation: MutationType!
  node: Employee
  updatedFields: [String!]
  previousValues: EmployeePreviousValues
}
type EmployeePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  firstName: String!
  lastName: String!
  jobTitle: String
  slackId: String
  email: String
}
input QuoteSubscriptionWhereInput {
  AND: [QuoteSubscriptionWhereInput!]
  OR: [QuoteSubscriptionWhereInput!]
  NOT: [QuoteSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: QuoteWhereInput
}
type QuoteSubscriptionPayload {
  mutation: MutationType!
  node: Quote
  updatedFields: [String!]
  previousValues: QuotePreviousValues
}
type QuotePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  authorName: String
  authorTitle: String
  asideTitle: String
  asideText: String
  text: String
}
input DocumentSubscriptionWhereInput {
  AND: [DocumentSubscriptionWhereInput!]
  OR: [DocumentSubscriptionWhereInput!]
  NOT: [DocumentSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DocumentWhereInput
}
type DocumentSubscriptionPayload {
  mutation: MutationType!
  node: Document
  updatedFields: [String!]
  previousValues: DocumentPreviousValues
}
type DocumentPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  name: String
}
input StartProjectFormSubscriptionWhereInput {
  AND: [StartProjectFormSubscriptionWhereInput!]
  OR: [StartProjectFormSubscriptionWhereInput!]
  NOT: [StartProjectFormSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: StartProjectFormWhereInput
}
type StartProjectFormSubscriptionPayload {
  mutation: MutationType!
  node: StartProjectForm
  updatedFields: [String!]
  previousValues: StartProjectFormPreviousValues
}
type StartProjectFormPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  currentUrl: String!
  currentSoftware: String!
  monthlyVisitors: String!
  monthlyOrderCount: String!
  averageOrderValue: String
  targetAudienceType: String!
  projectInvolvedPeople: Json!
  company: String!
  companyContactName: String!
  companyContactEmail: String!
  companyStoresCount: String
  phoneNumber: String!
  message: String
  services: Json
  challenges: Json
  marketingStrategy: String
  marketingBudget: String
}
input JobListingSubscriptionWhereInput {
  AND: [JobListingSubscriptionWhereInput!]
  OR: [JobListingSubscriptionWhereInput!]
  NOT: [JobListingSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: JobListingWhereInput
}
type JobListingSubscriptionPayload {
  mutation: MutationType!
  node: JobListing
  updatedFields: [String!]
  previousValues: JobListingPreviousValues
}
type JobListingPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  jobPerks: String
  label: String
  title: String!
  content: String
  displayOrder: Int
}
input MailchimpFormSubscriptionWhereInput {
  AND: [MailchimpFormSubscriptionWhereInput!]
  OR: [MailchimpFormSubscriptionWhereInput!]
  NOT: [MailchimpFormSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MailchimpFormWhereInput
}
type MailchimpFormSubscriptionPayload {
  mutation: MutationType!
  node: MailchimpForm
  updatedFields: [String!]
  previousValues: MailchimpFormPreviousValues
}
type MailchimpFormPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  email: String!
}
input SingularPageSubscriptionWhereInput {
  AND: [SingularPageSubscriptionWhereInput!]
  OR: [SingularPageSubscriptionWhereInput!]
  NOT: [SingularPageSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SingularPageWhereInput
}
type SingularPageSubscriptionPayload {
  mutation: MutationType!
  node: SingularPage
  updatedFields: [String!]
  previousValues: SingularPagePreviousValues
}
type SingularPagePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  content: String!
  title: String!
  releaseDate: DateTime
}
input BlogPostSubscriptionWhereInput {
  AND: [BlogPostSubscriptionWhereInput!]
  OR: [BlogPostSubscriptionWhereInput!]
  NOT: [BlogPostSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BlogPostWhereInput
}
type BlogPostSubscriptionPayload {
  mutation: MutationType!
  node: BlogPost
  updatedFields: [String!]
  previousValues: BlogPostPreviousValues
}
type BlogPostPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  publicPublishedAt: DateTime
  contentEN: String
  contentNL: String
  titleEN: String
  titleNL: String
}
input CommentSubscriptionWhereInput {
  AND: [CommentSubscriptionWhereInput!]
  OR: [CommentSubscriptionWhereInput!]
  NOT: [CommentSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
}
type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}
type CommentPreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  displayName: String!
  email: String!
  upvotes: Int!
  content: String!
}
input PageSubscriptionWhereInput {
  AND: [PageSubscriptionWhereInput!]
  OR: [PageSubscriptionWhereInput!]
  NOT: [PageSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PageWhereInput
}
type PageSubscriptionPayload {
  mutation: MutationType!
  node: Page
  updatedFields: [String!]
  previousValues: PagePreviousValues
}
type PagePreviousValues {
  status: Status!
  updatedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  urlEN: String
  urlNL: String
  metaTitleEN: String
  metaTitleNL: String
  metaDescriptionEN: String
  metaDescriptionNL: String
  metaRobots: MetaRobots!
}
