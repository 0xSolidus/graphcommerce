schema {
  query: Query
  mutation: Mutation
}
type Query {
  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): Node
  """
  Retrieve multiple assets
  """
  assets(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [Asset!]!
  """
  Retrieve a single asset
  """
  asset(
    where: AssetWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): Asset
  """
  Retrieve multiple assets using the Relay connection interface
  """
  assetsConnection(
    where: AssetWhereInput
    orderBy: AssetOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): AssetConnection!
  """
  Retrieve multiple companies
  """
  companies(
    where: CompanyWhereInput
    orderBy: CompanyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [Company!]!
  """
  Retrieve a single company
  """
  company(where: CompanyWhereUniqueInput!, stage: Stage! = PUBLISHED): Company
  """
  Retrieve multiple companies using the Relay connection interface
  """
  companiesConnection(
    where: CompanyWhereInput
    orderBy: CompanyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): CompanyConnection!
  """
  Retrieve multiple contactForms
  """
  contactForms(
    where: ContactFormWhereInput
    orderBy: ContactFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [ContactForm!]!
  """
  Retrieve a single contactForm
  """
  contactForm(where: ContactFormWhereUniqueInput!, stage: Stage! = PUBLISHED): ContactForm
  """
  Retrieve multiple contactForms using the Relay connection interface
  """
  contactFormsConnection(
    where: ContactFormWhereInput
    orderBy: ContactFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): ContactFormConnection!
  """
  Retrieve multiple linkExternals
  """
  linkExternals(
    where: LinkExternalWhereInput
    orderBy: LinkExternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [LinkExternal!]!
  """
  Retrieve a single linkExternal
  """
  linkExternal(
    where: LinkExternalWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): LinkExternal
  """
  Retrieve multiple linkExternals using the Relay connection interface
  """
  linkExternalsConnection(
    where: LinkExternalWhereInput
    orderBy: LinkExternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): LinkExternalConnection!
  """
  Retrieve multiple linkInternals
  """
  linkInternals(
    where: LinkInternalWhereInput
    orderBy: LinkInternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [LinkInternal!]!
  """
  Retrieve a single linkInternal
  """
  linkInternal(
    where: LinkInternalWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): LinkInternal
  """
  Retrieve multiple linkInternals using the Relay connection interface
  """
  linkInternalsConnection(
    where: LinkInternalWhereInput
    orderBy: LinkInternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): LinkInternalConnection!
  """
  Retrieve multiple menus
  """
  menus(
    where: MenuWhereInput
    orderBy: MenuOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [Menu!]!
  """
  Retrieve a single menu
  """
  menu(where: MenuWhereUniqueInput!, stage: Stage! = PUBLISHED): Menu
  """
  Retrieve multiple menus using the Relay connection interface
  """
  menusConnection(
    where: MenuWhereInput
    orderBy: MenuOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): MenuConnection!
  """
  Retrieve multiple pages
  """
  pages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [Page!]!
  """
  Retrieve a single page
  """
  page(
    where: PageWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): Page
  """
  Retrieve multiple pages using the Relay connection interface
  """
  pagesConnection(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): PageConnection!
  """
  Retrieve multiple people
  """
  people(
    where: PersonWhereInput
    orderBy: PersonOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [Person!]!
  """
  Retrieve a single person
  """
  person(where: PersonWhereUniqueInput!, stage: Stage! = PUBLISHED): Person
  """
  Retrieve multiple people using the Relay connection interface
  """
  peopleConnection(
    where: PersonWhereInput
    orderBy: PersonOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): PersonConnection!
  """
  Retrieve multiple personLists
  """
  personLists(
    where: PersonListWhereInput
    orderBy: PersonListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [PersonList!]!
  """
  Retrieve a single personList
  """
  personList(where: PersonListWhereUniqueInput!, stage: Stage! = PUBLISHED): PersonList
  """
  Retrieve multiple personLists using the Relay connection interface
  """
  personListsConnection(
    where: PersonListWhereInput
    orderBy: PersonListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): PersonListConnection!
  """
  Retrieve multiple rowColumnOnes
  """
  rowColumnOnes(
    where: RowColumnOneWhereInput
    orderBy: RowColumnOneOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [RowColumnOne!]!
  """
  Retrieve a single rowColumnOne
  """
  rowColumnOne(where: RowColumnOneWhereUniqueInput!, stage: Stage! = PUBLISHED): RowColumnOne
  """
  Retrieve multiple rowColumnOnes using the Relay connection interface
  """
  rowColumnOnesConnection(
    where: RowColumnOneWhereInput
    orderBy: RowColumnOneOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): RowColumnOneConnection!
  """
  Retrieve multiple rowColumnThrees
  """
  rowColumnThrees(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [RowColumnThree!]!
  """
  Retrieve a single rowColumnThree
  """
  rowColumnThree(
    where: RowColumnThreeWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowColumnThree
  """
  Retrieve multiple rowColumnThrees using the Relay connection interface
  """
  rowColumnThreesConnection(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowColumnThreeConnection!
  """
  Retrieve multiple rowColumnTwos
  """
  rowColumnTwos(
    where: RowColumnTwoWhereInput
    orderBy: RowColumnTwoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [RowColumnTwo!]!
  """
  Retrieve a single rowColumnTwo
  """
  rowColumnTwo(
    where: RowColumnTwoWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowColumnTwo
  """
  Retrieve multiple rowColumnTwos using the Relay connection interface
  """
  rowColumnTwosConnection(
    where: RowColumnTwoWhereInput
    orderBy: RowColumnTwoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowColumnTwoConnection!
  """
  Retrieve multiple rowCompanySliders
  """
  rowCompanySliders(
    where: RowCompanySliderWhereInput
    orderBy: RowCompanySliderOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [RowCompanySlider!]!
  """
  Retrieve a single rowCompanySlider
  """
  rowCompanySlider(
    where: RowCompanySliderWhereUniqueInput!
    stage: Stage! = PUBLISHED
  ): RowCompanySlider
  """
  Retrieve multiple rowCompanySliders using the Relay connection interface
  """
  rowCompanySlidersConnection(
    where: RowCompanySliderWhereInput
    orderBy: RowCompanySliderOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): RowCompanySliderConnection!
  """
  Retrieve multiple rowHeroes
  """
  rowHeroes(
    where: RowHeroWhereInput
    orderBy: RowHeroOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [RowHero!]!
  """
  Retrieve a single rowHero
  """
  rowHero(where: RowHeroWhereUniqueInput!, stage: Stage! = PUBLISHED): RowHero
  """
  Retrieve multiple rowHeroes using the Relay connection interface
  """
  rowHeroesConnection(
    where: RowHeroWhereInput
    orderBy: RowHeroOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): RowHeroConnection!
  """
  Retrieve multiple rowPeopleWithTexts
  """
  rowPeopleWithTexts(
    where: RowPeopleWithTextWhereInput
    orderBy: RowPeopleWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [RowPeopleWithText!]!
  """
  Retrieve a single rowPeopleWithText
  """
  rowPeopleWithText(
    where: RowPeopleWithTextWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowPeopleWithText
  """
  Retrieve multiple rowPeopleWithTexts using the Relay connection interface
  """
  rowPeopleWithTextsConnection(
    where: RowPeopleWithTextWhereInput
    orderBy: RowPeopleWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowPeopleWithTextConnection!
  """
  Retrieve multiple rowRecentBlogPosts
  """
  rowRecentBlogPosts(
    where: RowRecentBlogPostWhereInput
    orderBy: RowRecentBlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): [RowRecentBlogPost!]!
  """
  Retrieve a single rowRecentBlogPost
  """
  rowRecentBlogPost(
    where: RowRecentBlogPostWhereUniqueInput!
    stage: Stage! = PUBLISHED
  ): RowRecentBlogPost
  """
  Retrieve multiple rowRecentBlogPosts using the Relay connection interface
  """
  rowRecentBlogPostsConnection(
    where: RowRecentBlogPostWhereInput
    orderBy: RowRecentBlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
  ): RowRecentBlogPostConnection!
  """
  Retrieve multiple rowServicesWithTexts
  """
  rowServicesWithTexts(
    where: RowServicesWithTextWhereInput
    orderBy: RowServicesWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [RowServicesWithText!]!
  """
  Retrieve a single rowServicesWithText
  """
  rowServicesWithText(
    where: RowServicesWithTextWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowServicesWithText
  """
  Retrieve multiple rowServicesWithTexts using the Relay connection interface
  """
  rowServicesWithTextsConnection(
    where: RowServicesWithTextWhereInput
    orderBy: RowServicesWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowServicesWithTextConnection!
  """
  Retrieve multiple rowYoutubeVideos
  """
  rowYoutubeVideos(
    where: RowYoutubeVideoWhereInput
    orderBy: RowYoutubeVideoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): [RowYoutubeVideo!]!
  """
  Retrieve a single rowYoutubeVideo
  """
  rowYoutubeVideo(
    where: RowYoutubeVideoWhereUniqueInput!
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowYoutubeVideo
  """
  Retrieve multiple rowYoutubeVideos using the Relay connection interface
  """
  rowYoutubeVideosConnection(
    where: RowYoutubeVideoWhereInput
    orderBy: RowYoutubeVideoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
    stage: Stage! = PUBLISHED
    """
    First locale matched will be used based on the order of this input
    """
    locales: [Locale!]! = [nl]
  ): RowYoutubeVideoConnection!
}
"""
Stage system enumeration
"""
enum Stage {
  """
  System Published Stage
  """
  PUBLISHED
  """
  System Draft Stage
  """
  DRAFT
}
"""
Locale system enumeration
"""
enum Locale {
  """
  System locale
  """
  nl
  en
}
"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
  """
  The Stage of an object
  """
  stage: Stage!
}
"""
Identifies documents
"""
input AssetWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  handle: String
  """
  All values that are not equal to given value.
  """
  handle_not: String
  """
  All values that are contained in given list.
  """
  handle_in: [String!]
  """
  All values that are not contained in given list.
  """
  handle_not_in: [String!]
  """
  All values containing the given string.
  """
  handle_contains: String
  """
  All values not containing the given string.
  """
  handle_not_contains: String
  """
  All values starting with the given string.
  """
  handle_starts_with: String
  """
  All values not starting with the given string.
  """
  handle_not_starts_with: String
  """
  All values ending with the given string.
  """
  handle_ends_with: String
  """
  All values not ending with the given string
  """
  handle_not_ends_with: String
  fileName: String
  """
  All values that are not equal to given value.
  """
  fileName_not: String
  """
  All values that are contained in given list.
  """
  fileName_in: [String!]
  """
  All values that are not contained in given list.
  """
  fileName_not_in: [String!]
  """
  All values containing the given string.
  """
  fileName_contains: String
  """
  All values not containing the given string.
  """
  fileName_not_contains: String
  """
  All values starting with the given string.
  """
  fileName_starts_with: String
  """
  All values not starting with the given string.
  """
  fileName_not_starts_with: String
  """
  All values ending with the given string.
  """
  fileName_ends_with: String
  """
  All values not ending with the given string
  """
  fileName_not_ends_with: String
  height: Float
  """
  All values that are not equal to given value.
  """
  height_not: Float
  """
  All values that are contained in given list.
  """
  height_in: [Float!]
  """
  All values that are not contained in given list.
  """
  height_not_in: [Float!]
  """
  All values less than the given value.
  """
  height_lt: Float
  """
  All values less than or equal the given value.
  """
  height_lte: Float
  """
  All values greater than the given value.
  """
  height_gt: Float
  """
  All values greater than or equal the given value.
  """
  height_gte: Float
  width: Float
  """
  All values that are not equal to given value.
  """
  width_not: Float
  """
  All values that are contained in given list.
  """
  width_in: [Float!]
  """
  All values that are not contained in given list.
  """
  width_not_in: [Float!]
  """
  All values less than the given value.
  """
  width_lt: Float
  """
  All values less than or equal the given value.
  """
  width_lte: Float
  """
  All values greater than the given value.
  """
  width_gt: Float
  """
  All values greater than or equal the given value.
  """
  width_gte: Float
  size: Float
  """
  All values that are not equal to given value.
  """
  size_not: Float
  """
  All values that are contained in given list.
  """
  size_in: [Float!]
  """
  All values that are not contained in given list.
  """
  size_not_in: [Float!]
  """
  All values less than the given value.
  """
  size_lt: Float
  """
  All values less than or equal the given value.
  """
  size_lte: Float
  """
  All values greater than the given value.
  """
  size_gt: Float
  """
  All values greater than or equal the given value.
  """
  size_gte: Float
  mimeType: String
  """
  All values that are not equal to given value.
  """
  mimeType_not: String
  """
  All values that are contained in given list.
  """
  mimeType_in: [String!]
  """
  All values that are not contained in given list.
  """
  mimeType_not_in: [String!]
  """
  All values containing the given string.
  """
  mimeType_contains: String
  """
  All values not containing the given string.
  """
  mimeType_not_contains: String
  """
  All values starting with the given string.
  """
  mimeType_starts_with: String
  """
  All values not starting with the given string.
  """
  mimeType_not_starts_with: String
  """
  All values ending with the given string.
  """
  mimeType_ends_with: String
  """
  All values not ending with the given string
  """
  mimeType_not_ends_with: String
  personAvatar_every: PersonWhereInput
  personAvatar_some: PersonWhereInput
  personAvatar_none: PersonWhereInput
  companyLogo_every: CompanyWhereInput
  companyLogo_some: CompanyWhereInput
  companyLogo_none: CompanyWhereInput
  rowColumnThreeColOneIcon_every: RowColumnThreeWhereInput
  rowColumnThreeColOneIcon_some: RowColumnThreeWhereInput
  rowColumnThreeColOneIcon_none: RowColumnThreeWhereInput
  rowColumnThreeColTwoIcon_every: RowColumnThreeWhereInput
  rowColumnThreeColTwoIcon_some: RowColumnThreeWhereInput
  rowColumnThreeColTwoIcon_none: RowColumnThreeWhereInput
  rowColumnThreeColThreeIcon_every: RowColumnThreeWhereInput
  rowColumnThreeColThreeIcon_some: RowColumnThreeWhereInput
  rowColumnThreeColThreeIcon_none: RowColumnThreeWhereInput
  rowColumnOneColOneIcon_every: RowColumnOneWhereInput
  rowColumnOneColOneIcon_some: RowColumnOneWhereInput
  rowColumnOneColOneIcon_none: RowColumnOneWhereInput
  rowHeroAsset_every: RowHeroWhereInput
  rowHeroAsset_some: RowHeroWhereInput
  rowHeroAsset_none: RowHeroWhereInput
  alt: String
  """
  All values that are not equal to given value.
  """
  alt_not: String
  """
  All values that are contained in given list.
  """
  alt_in: [String!]
  """
  All values that are not contained in given list.
  """
  alt_not_in: [String!]
  """
  All values containing the given string.
  """
  alt_contains: String
  """
  All values not containing the given string.
  """
  alt_not_contains: String
  """
  All values starting with the given string.
  """
  alt_starts_with: String
  """
  All values not starting with the given string.
  """
  alt_not_starts_with: String
  """
  All values ending with the given string.
  """
  alt_ends_with: String
  """
  All values not ending with the given string
  """
  alt_not_ends_with: String
  pageAsset_every: PageWhereInput
  pageAsset_some: PageWhereInput
  pageAsset_none: PageWhereInput
  rowColumnTwoColOneIcon_every: RowColumnTwoWhereInput
  rowColumnTwoColOneIcon_some: RowColumnTwoWhereInput
  rowColumnTwoColOneIcon_none: RowColumnTwoWhereInput
  rowColumnTwoColTwoIcon_every: RowColumnTwoWhereInput
  rowColumnTwoColTwoIcon_some: RowColumnTwoWhereInput
  rowColumnTwoColTwoIcon_none: RowColumnTwoWhereInput
}
"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601
standard for representationof dates and times using the Gregorian calendar.
"""
scalar DateTime
"""
Identifies documents
"""
input PersonWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [PersonWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PersonWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PersonWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  avatar: AssetWhereInput
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string
  """
  name_not_ends_with: String
  personList_every: PersonListWhereInput
  personList_some: PersonListWhereInput
  personList_none: PersonListWhereInput
}
"""
Identifies documents
"""
input PersonListWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [PersonListWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PersonListWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PersonListWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  people_every: PersonWhereInput
  people_some: PersonWhereInput
  people_none: PersonWhereInput
  rowPeopleWithText_every: RowPeopleWithTextWhereInput
  rowPeopleWithText_some: RowPeopleWithTextWhereInput
  rowPeopleWithText_none: RowPeopleWithTextWhereInput
}
"""
Identifies documents
"""
input RowPeopleWithTextWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowPeopleWithTextWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowPeopleWithTextWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowPeopleWithTextWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  links_every: LinkInternalWhereInput
  links_some: LinkInternalWhereInput
  links_none: LinkInternalWhereInput
  personList: PersonListWhereInput
}
"""
Identifies documents
"""
input LinkInternalWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [LinkInternalWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [LinkInternalWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LinkInternalWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string
  """
  title_not_ends_with: String
  page: PageWhereInput
  rowPeopleWithText_every: RowPeopleWithTextWhereInput
  rowPeopleWithText_some: RowPeopleWithTextWhereInput
  rowPeopleWithText_none: RowPeopleWithTextWhereInput
  rowServicesWithText_every: RowServicesWithTextWhereInput
  rowServicesWithText_some: RowServicesWithTextWhereInput
  rowServicesWithText_none: RowServicesWithTextWhereInput
  rowRecentBlogPost: RowRecentBlogPostWhereInput
}
"""
Identifies documents
"""
input PageWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [PageWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PageWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PageWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  url: String
  """
  All values that are not equal to given value.
  """
  url_not: String
  """
  All values that are contained in given list.
  """
  url_in: [String!]
  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]
  """
  All values containing the given string.
  """
  url_contains: String
  """
  All values not containing the given string.
  """
  url_not_contains: String
  """
  All values starting with the given string.
  """
  url_starts_with: String
  """
  All values not starting with the given string.
  """
  url_not_starts_with: String
  """
  All values ending with the given string.
  """
  url_ends_with: String
  """
  All values not ending with the given string
  """
  url_not_ends_with: String
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string
  """
  title_not_ends_with: String
  metaTitle: String
  """
  All values that are not equal to given value.
  """
  metaTitle_not: String
  """
  All values that are contained in given list.
  """
  metaTitle_in: [String!]
  """
  All values that are not contained in given list.
  """
  metaTitle_not_in: [String!]
  """
  All values containing the given string.
  """
  metaTitle_contains: String
  """
  All values not containing the given string.
  """
  metaTitle_not_contains: String
  """
  All values starting with the given string.
  """
  metaTitle_starts_with: String
  """
  All values not starting with the given string.
  """
  metaTitle_not_starts_with: String
  """
  All values ending with the given string.
  """
  metaTitle_ends_with: String
  """
  All values not ending with the given string
  """
  metaTitle_not_ends_with: String
  metaDescription: String
  """
  All values that are not equal to given value.
  """
  metaDescription_not: String
  """
  All values that are contained in given list.
  """
  metaDescription_in: [String!]
  """
  All values that are not contained in given list.
  """
  metaDescription_not_in: [String!]
  """
  All values containing the given string.
  """
  metaDescription_contains: String
  """
  All values not containing the given string.
  """
  metaDescription_not_contains: String
  """
  All values starting with the given string.
  """
  metaDescription_starts_with: String
  """
  All values not starting with the given string.
  """
  metaDescription_not_starts_with: String
  """
  All values ending with the given string.
  """
  metaDescription_ends_with: String
  """
  All values not ending with the given string
  """
  metaDescription_not_ends_with: String
  metaRobots: MetaRobots
  """
  All values that are not equal to given value.
  """
  metaRobots_not: MetaRobots
  """
  All values that are contained in given list.
  """
  metaRobots_in: [MetaRobots!]
  """
  All values that are not contained in given list.
  """
  metaRobots_not_in: [MetaRobots!]
  releaseDate: DateTime
  """
  All values that are not equal to given value.
  """
  releaseDate_not: DateTime
  """
  All values that are contained in given list.
  """
  releaseDate_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  releaseDate_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  releaseDate_lt: DateTime
  """
  All values less than or equal the given value.
  """
  releaseDate_lte: DateTime
  """
  All values greater than the given value.
  """
  releaseDate_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  releaseDate_gte: DateTime
  asset: AssetWhereInput
  internalLink_every: LinkInternalWhereInput
  internalLink_some: LinkInternalWhereInput
  internalLink_none: LinkInternalWhereInput
  menu_every: MenuWhereInput
  menu_some: MenuWhereInput
  menu_none: MenuWhereInput
}
enum MetaRobots {
  INDEX_FOLLOW
  INDEX_NOFOLLOW
  NOINDEX_FOLLOW
  NOINDEX_NOFOLLOW
}
"""
Identifies documents
"""
input MenuWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [MenuWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [MenuWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [MenuWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}
"""
Identifies documents
"""
input RowServicesWithTextWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowServicesWithTextWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowServicesWithTextWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowServicesWithTextWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  text: String
  """
  All values that are not equal to given value.
  """
  text_not: String
  """
  All values that are contained in given list.
  """
  text_in: [String!]
  """
  All values that are not contained in given list.
  """
  text_not_in: [String!]
  """
  All values containing the given string.
  """
  text_contains: String
  """
  All values not containing the given string.
  """
  text_not_contains: String
  """
  All values starting with the given string.
  """
  text_starts_with: String
  """
  All values not starting with the given string.
  """
  text_not_starts_with: String
  """
  All values ending with the given string.
  """
  text_ends_with: String
  """
  All values not ending with the given string
  """
  text_not_ends_with: String
  links_every: LinkInternalWhereInput
  links_some: LinkInternalWhereInput
  links_none: LinkInternalWhereInput
}
"""
Identifies documents
"""
input RowRecentBlogPostWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowRecentBlogPostWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowRecentBlogPostWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowRecentBlogPostWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  link: LinkInternalWhereInput
}
"""
Identifies documents
"""
input CompanyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [CompanyWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CompanyWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CompanyWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string
  """
  name_not_ends_with: String
  logo: AssetWhereInput
  rowCompanySlider_every: RowCompanySliderWhereInput
  rowCompanySlider_some: RowCompanySliderWhereInput
  rowCompanySlider_none: RowCompanySliderWhereInput
}
"""
Identifies documents
"""
input RowCompanySliderWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowCompanySliderWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowCompanySliderWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowCompanySliderWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  companies_every: CompanyWhereInput
  companies_some: CompanyWhereInput
  companies_none: CompanyWhereInput
}
"""
Identifies documents
"""
input RowColumnThreeWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowColumnThreeWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowColumnThreeWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  colOneIcon: AssetWhereInput
  colTwoIcon: AssetWhereInput
  colThreeIcon: AssetWhereInput
}
"""
Identifies documents
"""
input RowColumnOneWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowColumnOneWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowColumnOneWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  colOneIcon: AssetWhereInput
}
"""
Identifies documents
"""
input RowHeroWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowHeroWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowHeroWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowHeroWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  asset: AssetWhereInput
}
"""
Identifies documents
"""
input RowColumnTwoWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowColumnTwoWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowColumnTwoWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  colOneIcon: AssetWhereInput
  colTwoIcon: AssetWhereInput
}
enum AssetOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  handle_ASC
  handle_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  width_ASC
  width_DESC
  size_ASC
  size_DESC
  mimeType_ASC
  mimeType_DESC
  alt_ASC
  alt_DESC
}
"""
Asset system model
"""
type Asset implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [Asset!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Asset!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  """
  The file handle
  """
  handle: String!
  """
  The file name
  """
  fileName: String!
  """
  The height of the file
  """
  height: Float
  """
  The file width
  """
  width: Float
  """
  The file size
  """
  size: Float
  """
  The mime type of the file
  """
  mimeType: String
  personAvatar(
    where: PersonWhereInput
    orderBy: PersonOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Person!]!
  companyLogo(
    where: CompanyWhereInput
    orderBy: CompanyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Company!]!
  rowColumnThreeColOneIcon(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowColumnThree!]!
  rowColumnThreeColTwoIcon(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowColumnThree!]!
  rowColumnThreeColThreeIcon(
    where: RowColumnThreeWhereInput
    orderBy: RowColumnThreeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowColumnThree!]!
  rowColumnOneColOneIcon(
    where: RowColumnOneWhereInput
    orderBy: RowColumnOneOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowColumnOne!]!
  rowHeroAsset(
    where: RowHeroWhereInput
    orderBy: RowHeroOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowHero!]!
  alt: String
  pageAsset(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Page!]!
  rowColumnTwoColOneIcon(
    where: RowColumnTwoWhereInput
    orderBy: RowColumnTwoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowColumnTwo!]!
  rowColumnTwoColTwoIcon(
    where: RowColumnTwoWhereInput
    orderBy: RowColumnTwoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowColumnTwo!]!
  """
  Get the url for the asset with provided transformations applied.
  """
  url(transformation: AssetTransformationInput): String!
}
enum PersonOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
}
type Person implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Person!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  avatar: Asset!
  name: String!
  personList(
    where: PersonListWhereInput
    orderBy: PersonListOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [PersonList!]!
}
enum PersonListOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
type PersonList implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [PersonList!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  people(
    where: PersonWhereInput
    orderBy: PersonOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Person!]!
  rowPeopleWithText(
    where: RowPeopleWithTextWhereInput
    orderBy: RowPeopleWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowPeopleWithText!]!
}
enum RowPeopleWithTextOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
type RowPeopleWithText implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [RowPeopleWithText!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowPeopleWithText!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  text: RichText!
  links(
    where: LinkInternalWhereInput
    orderBy: LinkInternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [LinkInternal!]!
  personList: PersonList
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
"""
Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values
"""
type RichText {
  """
  Returns AST representation
  """
  raw: RichTextAST!
  """
  Returns HTMl representation
  """
  html: String!
  """
  Returns Markdown representation
  """
  markdown: String!
  """
  Returns plain-text contents of RichText
  """
  text: String!
}
"""
Slate-compatible RichText AST
"""
scalar RichTextAST
enum LinkInternalOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
}
type LinkInternal implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [LinkInternal!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [LinkInternal!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  title: String!
  page: Page
  description: RichText
  rowPeopleWithText(
    where: RowPeopleWithTextWhereInput
    orderBy: RowPeopleWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowPeopleWithText!]!
  rowHeroVideo(skip: Int, after: String, before: String, first: Int, last: Int): [RowHero!]!
  rowServicesWithText(
    where: RowServicesWithTextWhereInput
    orderBy: RowServicesWithTextOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowServicesWithText!]!
  rowRecentBlogPost: RowRecentBlogPost
}
type Page implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [Page!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Page!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  url: String!
  """
  Used in menu's, breadcrumbs, etc.
  """
  title: String!
  metaTitle: String!
  metaDescription: String!
  metaRobots: MetaRobots
  """
  Content
  """
  content(skip: Int, after: String, before: String, first: Int, last: Int): [PageContent!]!
  releaseDate: DateTime
  asset: Asset
  internalLink(
    where: LinkInternalWhereInput
    orderBy: LinkInternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [LinkInternal!]!
  menu(
    where: MenuWhereInput
    orderBy: MenuOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Menu!]!
}
union PageContent =
    RowServicesWithText
  | RowColumnThree
  | RowColumnTwo
  | RowRecentBlogPost
  | RowPeopleWithText
  | RowColumnOne
  | RowCompanySlider
  | RowHero
  | RowYoutubeVideo
type RowServicesWithText implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [RowServicesWithText!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowServicesWithText!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  text: String!
  links(
    where: LinkInternalWhereInput
    orderBy: LinkInternalOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [LinkInternal!]!
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
type RowColumnThree implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [RowColumnThree!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowColumnThree!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  colOne: RichText!
  colOneIcon: Asset
  colTwo: RichText!
  colTwoIcon: Asset
  colThree: RichText!
  colThreeIcon: Asset
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
type RowColumnTwo implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [RowColumnTwo!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowColumnTwo!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  colOne: RichText!
  colOneIcon: Asset
  colTwo: RichText!
  colTwoIcon: Asset
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
type RowRecentBlogPost implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowRecentBlogPost!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
  link: LinkInternal
}
"""
Single text area, flowing over two columns (CSS Columns)
"""
type RowColumnOne implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowColumnOne!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  colOne: RichText!
  colOneIcon: Asset
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
type RowCompanySlider implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowCompanySlider!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  companies(
    where: CompanyWhereInput
    orderBy: CompanyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Company!]!
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
enum CompanyOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
}
type Company implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Company!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  name: String!
  logo: Asset!
  rowCompanySlider(
    where: RowCompanySliderWhereInput
    orderBy: RowCompanySliderOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [RowCompanySlider!]!
}
enum RowCompanySliderOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
type RowHero implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowHero!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  asset: Asset!
  text: RichText!
  links(skip: Int, after: String, before: String, first: Int, last: Int): [RowHeroVideoLinks!]!
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
}
union RowHeroVideoLinks = LinkExternal | LinkInternal
type LinkExternal implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [LinkExternal!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [LinkExternal!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  title: String!
  url: String!
  """
  If filled in a LinkBlock will be rendered
  """
  description: RichText
  rowHeroVideo(skip: Int, after: String, before: String, first: Int, last: Int): [RowHero!]!
}
"""
A full-width Youtube video
"""
type RowYoutubeVideo implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  System Locale field
  """
  locale: Locale!
  """
  Get the other localizations for this document
  """
  localizations(
    """
    Potential locales that should be returned
    """
    locales: [Locale!]! = [nl, en]
    """
    Decides if the current locale should be included or not
    """
    includeCurrent: Boolean! = false
  ): [RowYoutubeVideo!]!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [RowYoutubeVideo!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  """
  The unique identifier
  """
  videoId: String!
  page(skip: Int, after: String, before: String, first: Int, last: Int): [Page!]!
  title: String!
}
enum MenuOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
type Menu implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [Menu!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  identity: String!
  pages(
    where: PageWhereInput
    orderBy: PageOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Page!]!
}
enum PageOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
  metaTitle_ASC
  metaTitle_DESC
  metaDescription_ASC
  metaDescription_DESC
  metaRobots_ASC
  metaRobots_DESC
  releaseDate_ASC
  releaseDate_DESC
}
enum RowServicesWithTextOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
  text_ASC
  text_DESC
}
enum RowColumnThreeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
enum RowColumnOneOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
enum RowHeroOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
enum RowColumnTwoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
"""
Transformations for Assets
"""
input AssetTransformationInput {
  image: ImageTransformationInput
  document: DocumentTransformationInput
  """
  Pass true if you want to validate the passed transformation parameters
  """
  validateOptions: Boolean = false
}
"""
Transformations for Images
"""
input ImageTransformationInput {
  """
  Resizes the image
  """
  resize: ImageResizeInput
}
input ImageResizeInput {
  """
  The width in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  width: Int
  """
  The height in pixels to resize the image to. The value must be an integer from 1 to 10000.
  """
  height: Int
  """
  The default value for the fit parameter is fit:clip.
  """
  fit: ImageFit
}
enum ImageFit {
  """
  Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  """
  clip
  """
  Resizes the image to fit the specified parameters exactly by removing any
  parts of the image that don't fit within the boundaries.
  """
  crop
  """
  Resizes the image to fit the specified parameters exactly by scaling the image
  to the desired size. The aspect ratio of the image is not respected and the
  image can be distorted using this method.
  """
  scale
  """
  Resizes the image to fit within the parameters, but as opposed to 'fit:clip'
  will not scale the image if the image is smaller than the output size.
  """
  max
}
"""
Transformations for Documents
"""
input DocumentTransformationInput {
  """
  Changes the output for the file.
  """
  output: DocumentOutputInput
}
input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:

  PDF:	jpg, odp, ods, odt, png, svg, txt, and webp
  DOC:	docx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:	doc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:	doc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:	jpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:	jpg, pdf, ods, png, svg, xls, and webp
  ODS:	jpg, pdf, png, xls, svg, xlsx, and webp
  PPT:	jpg, odp, pdf, png, svg, pptx, and webp
  PPTX:	jpg, odp, pdf, png, svg, ppt, and webp
  ODP:	jpg, pdf, png, ppt, svg, pptx, and webp
  BMP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:	jpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:	jpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:	jpg, odp, ods, odt, pdf, png, svg, and webp
  AI:	    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:	jpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:	jpg, odp, ods, odt, pdf, png, and webp
  HTML:	jpg, odt, pdf, svg, txt, and webp
  TXT:	jpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}
enum DocumentFileTypes {
  jpg
  odp
  ods
  odt
  png
  svg
  txt
  webp
  docx
  pdf
  html
  doc
  xlsx
  xls
  pptx
  ppt
}
"""
References Asset record uniquely
"""
input AssetWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type AssetConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [AssetEdge!]!
  aggregate: Aggregate!
}
"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}
"""
An edge in a connection.
"""
type AssetEdge {
  """
  The item at the end of the edge.
  """
  node: Asset!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
type Aggregate {
  count: Int!
}
"""
References Company record uniquely
"""
input CompanyWhereUniqueInput {
  id: ID
  name: String
}
"""
A connection to a list of items.
"""
type CompanyConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CompanyEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type CompanyEdge {
  """
  The item at the end of the edge.
  """
  node: Company!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
Identifies documents
"""
input ContactFormWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [ContactFormWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ContactFormWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ContactFormWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string
  """
  name_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string
  """
  email_not_ends_with: String
  phoneNumber: String
  """
  All values that are not equal to given value.
  """
  phoneNumber_not: String
  """
  All values that are contained in given list.
  """
  phoneNumber_in: [String!]
  """
  All values that are not contained in given list.
  """
  phoneNumber_not_in: [String!]
  """
  All values containing the given string.
  """
  phoneNumber_contains: String
  """
  All values not containing the given string.
  """
  phoneNumber_not_contains: String
  """
  All values starting with the given string.
  """
  phoneNumber_starts_with: String
  """
  All values not starting with the given string.
  """
  phoneNumber_not_starts_with: String
  """
  All values ending with the given string.
  """
  phoneNumber_ends_with: String
  """
  All values not ending with the given string
  """
  phoneNumber_not_ends_with: String
  subject: ContactSubject
  """
  All values that are not equal to given value.
  """
  subject_not: ContactSubject
  """
  All values that are contained in given list.
  """
  subject_in: [ContactSubject!]
  """
  All values that are not contained in given list.
  """
  subject_not_in: [ContactSubject!]
  message: String
  """
  All values that are not equal to given value.
  """
  message_not: String
  """
  All values that are contained in given list.
  """
  message_in: [String!]
  """
  All values that are not contained in given list.
  """
  message_not_in: [String!]
  """
  All values containing the given string.
  """
  message_contains: String
  """
  All values not containing the given string.
  """
  message_not_contains: String
  """
  All values starting with the given string.
  """
  message_starts_with: String
  """
  All values not starting with the given string.
  """
  message_not_starts_with: String
  """
  All values ending with the given string.
  """
  message_ends_with: String
  """
  All values not ending with the given string
  """
  message_not_ends_with: String
}
enum ContactSubject {
  COLLABORATION
  MODULE
  NEW_PROJECT
  OTHER
  VACANCY
}
enum ContactFormOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  phoneNumber_ASC
  phoneNumber_DESC
  subject_ASC
  subject_DESC
  message_ASC
  message_DESC
}
type ContactForm implements Node {
  """
  System stage field
  """
  stage: Stage!
  """
  Get the document in other stages
  """
  documentInStages(
    """
    Potential stages that should be returned
    """
    stages: [Stage!]! = [PUBLISHED, DRAFT]
    """
    Decides if the current stage should be included or not
    """
    includeCurrent: Boolean! = false
    """
    Decides if the documents should match the parent documents locale or should use the fallback order defined in the tree
    """
    inheritLocale: Boolean! = false
  ): [ContactForm!]!
  """
  The unique identifier
  """
  id: ID!
  """
  The time the document was created
  """
  createdAt: DateTime!
  """
  The time the document was updated
  """
  updatedAt: DateTime!
  """
  The time the document was published. Null on documents in draft stage.
  """
  publishedAt: DateTime
  name: String!
  email: String!
  phoneNumber: String
  subject: ContactSubject!
  message: String!
}
"""
References ContactForm record uniquely
"""
input ContactFormWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type ContactFormConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ContactFormEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type ContactFormEdge {
  """
  The item at the end of the edge.
  """
  node: ContactForm!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
Identifies documents
"""
input LinkExternalWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [LinkExternalWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [LinkExternalWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LinkExternalWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string
  """
  title_not_ends_with: String
  url: String
  """
  All values that are not equal to given value.
  """
  url_not: String
  """
  All values that are contained in given list.
  """
  url_in: [String!]
  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]
  """
  All values containing the given string.
  """
  url_contains: String
  """
  All values not containing the given string.
  """
  url_not_contains: String
  """
  All values starting with the given string.
  """
  url_starts_with: String
  """
  All values not starting with the given string.
  """
  url_not_starts_with: String
  """
  All values ending with the given string.
  """
  url_ends_with: String
  """
  All values not ending with the given string
  """
  url_not_ends_with: String
}
enum LinkExternalOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}
"""
References LinkExternal record uniquely
"""
input LinkExternalWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type LinkExternalConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [LinkExternalEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type LinkExternalEdge {
  """
  The item at the end of the edge.
  """
  node: LinkExternal!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References LinkInternal record uniquely
"""
input LinkInternalWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type LinkInternalConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [LinkInternalEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type LinkInternalEdge {
  """
  The item at the end of the edge.
  """
  node: LinkInternal!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References Menu record uniquely
"""
input MenuWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type MenuConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [MenuEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type MenuEdge {
  """
  The item at the end of the edge.
  """
  node: Menu!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References Page record uniquely
"""
input PageWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type PageConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PageEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type PageEdge {
  """
  The item at the end of the edge.
  """
  node: Page!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References Person record uniquely
"""
input PersonWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type PersonConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PersonEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type PersonEdge {
  """
  The item at the end of the edge.
  """
  node: Person!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References PersonList record uniquely
"""
input PersonListWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type PersonListConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PersonListEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type PersonListEdge {
  """
  The item at the end of the edge.
  """
  node: PersonList!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowColumnOne record uniquely
"""
input RowColumnOneWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowColumnOneConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowColumnOneEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowColumnOneEdge {
  """
  The item at the end of the edge.
  """
  node: RowColumnOne!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowColumnThree record uniquely
"""
input RowColumnThreeWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowColumnThreeConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowColumnThreeEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowColumnThreeEdge {
  """
  The item at the end of the edge.
  """
  node: RowColumnThree!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowColumnTwo record uniquely
"""
input RowColumnTwoWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowColumnTwoConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowColumnTwoEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowColumnTwoEdge {
  """
  The item at the end of the edge.
  """
  node: RowColumnTwo!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowCompanySlider record uniquely
"""
input RowCompanySliderWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowCompanySliderConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowCompanySliderEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowCompanySliderEdge {
  """
  The item at the end of the edge.
  """
  node: RowCompanySlider!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowHero record uniquely
"""
input RowHeroWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowHeroConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowHeroEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowHeroEdge {
  """
  The item at the end of the edge.
  """
  node: RowHero!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowPeopleWithText record uniquely
"""
input RowPeopleWithTextWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowPeopleWithTextConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowPeopleWithTextEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowPeopleWithTextEdge {
  """
  The item at the end of the edge.
  """
  node: RowPeopleWithText!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
enum RowRecentBlogPostOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  identity_ASC
  identity_DESC
}
"""
References RowRecentBlogPost record uniquely
"""
input RowRecentBlogPostWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowRecentBlogPostConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowRecentBlogPostEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowRecentBlogPostEdge {
  """
  The item at the end of the edge.
  """
  node: RowRecentBlogPost!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
References RowServicesWithText record uniquely
"""
input RowServicesWithTextWhereUniqueInput {
  id: ID
  identity: String
}
"""
A connection to a list of items.
"""
type RowServicesWithTextConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowServicesWithTextEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowServicesWithTextEdge {
  """
  The item at the end of the edge.
  """
  node: RowServicesWithText!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
"""
Identifies documents
"""
input RowYoutubeVideoWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowYoutubeVideoWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowYoutubeVideoWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowYoutubeVideoWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  videoId: String
  """
  All values that are not equal to given value.
  """
  videoId_not: String
  """
  All values that are contained in given list.
  """
  videoId_in: [String!]
  """
  All values that are not contained in given list.
  """
  videoId_not_in: [String!]
  """
  All values containing the given string.
  """
  videoId_contains: String
  """
  All values not containing the given string.
  """
  videoId_not_contains: String
  """
  All values starting with the given string.
  """
  videoId_starts_with: String
  """
  All values not starting with the given string.
  """
  videoId_not_starts_with: String
  """
  All values ending with the given string.
  """
  videoId_ends_with: String
  """
  All values not ending with the given string
  """
  videoId_not_ends_with: String
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string
  """
  title_not_ends_with: String
}
enum RowYoutubeVideoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  videoId_ASC
  videoId_DESC
  title_ASC
  title_DESC
}
"""
References RowYoutubeVideo record uniquely
"""
input RowYoutubeVideoWhereUniqueInput {
  id: ID
}
"""
A connection to a list of items.
"""
type RowYoutubeVideoConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RowYoutubeVideoEdge!]!
  aggregate: Aggregate!
}
"""
An edge in a connection.
"""
type RowYoutubeVideoEdge {
  """
  The item at the end of the edge.
  """
  node: RowYoutubeVideo!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}
type Mutation {
  """
  Create one asset
  """
  createAsset(data: AssetCreateInput!): Asset
    @deprecated(reason: "Asset mutations will be overhauled soon")
  """
  Update one asset
  """
  updateAsset(where: AssetWhereUniqueInput!, data: AssetUpdateInput!): Asset
  """
  Delete one asset from _all_ existing stages. Returns deleted document.
  """
  deleteAsset(
    """
    Document to delete
    """
    where: AssetWhereUniqueInput!
  ): Asset
  """
  Upsert one asset
  """
  upsertAsset(where: AssetWhereUniqueInput!, upsert: AssetUpsertInput!): Asset
  """
  Publish one asset
  """
  publishAsset(
    """
    Document to publish
    """
    where: AssetWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): Asset
  """
  Unpublish one asset from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishAsset(
    """
    Document to unpublish
    """
    where: AssetWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): Asset
  """
  Update many assets
  """
  updateManyAssets(
    """
    Documents to apply update on
    """
    where: AssetManyWhereInput
    """
    Updates to document content
    """
    data: AssetUpdateManyInput!
  ): BatchPayload!
  """
  Delete many Asset documents
  """
  deleteManyAssets(
    """
    Documents to delete
    """
    where: AssetManyWhereInput
  ): BatchPayload!
  """
  Publish many Asset documents
  """
  publishManyAssets(
    """
    Identifies documents in each stage to be published
    """
    where: AssetManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many Asset documents
  """
  unpublishManyAssets(
    """
    Identifies documents in each stage
    """
    where: AssetManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one company
  """
  createCompany(data: CompanyCreateInput!): Company
  """
  Update one company
  """
  updateCompany(where: CompanyWhereUniqueInput!, data: CompanyUpdateInput!): Company
  """
  Delete one company from _all_ existing stages. Returns deleted document.
  """
  deleteCompany(
    """
    Document to delete
    """
    where: CompanyWhereUniqueInput!
  ): Company
  """
  Upsert one company
  """
  upsertCompany(where: CompanyWhereUniqueInput!, upsert: CompanyUpsertInput!): Company
  """
  Publish one company
  """
  publishCompany(
    """
    Document to publish
    """
    where: CompanyWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): Company
  """
  Unpublish one company from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishCompany(
    """
    Document to unpublish
    """
    where: CompanyWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): Company
  """
  Update many companies
  """
  updateManyCompanies(
    """
    Documents to apply update on
    """
    where: CompanyManyWhereInput
    """
    Updates to document content
    """
    data: CompanyUpdateManyInput!
  ): BatchPayload!
  """
  Delete many Company documents
  """
  deleteManyCompanies(
    """
    Documents to delete
    """
    where: CompanyManyWhereInput
  ): BatchPayload!
  """
  Publish many Company documents
  """
  publishManyCompanies(
    """
    Identifies documents in each stage to be published
    """
    where: CompanyManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many Company documents
  """
  unpublishManyCompanies(
    """
    Identifies documents in each stage
    """
    where: CompanyManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one contactForm
  """
  createContactForm(data: ContactFormCreateInput!): ContactForm
  """
  Update one contactForm
  """
  updateContactForm(where: ContactFormWhereUniqueInput!, data: ContactFormUpdateInput!): ContactForm
  """
  Delete one contactForm from _all_ existing stages. Returns deleted document.
  """
  deleteContactForm(
    """
    Document to delete
    """
    where: ContactFormWhereUniqueInput!
  ): ContactForm
  """
  Upsert one contactForm
  """
  upsertContactForm(
    where: ContactFormWhereUniqueInput!
    upsert: ContactFormUpsertInput!
  ): ContactForm
  """
  Publish one contactForm
  """
  publishContactForm(
    """
    Document to publish
    """
    where: ContactFormWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): ContactForm
  """
  Unpublish one contactForm from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishContactForm(
    """
    Document to unpublish
    """
    where: ContactFormWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): ContactForm
  """
  Update many contactForms
  """
  updateManyContactForms(
    """
    Documents to apply update on
    """
    where: ContactFormManyWhereInput
    """
    Updates to document content
    """
    data: ContactFormUpdateManyInput!
  ): BatchPayload!
  """
  Delete many ContactForm documents
  """
  deleteManyContactForms(
    """
    Documents to delete
    """
    where: ContactFormManyWhereInput
  ): BatchPayload!
  """
  Publish many ContactForm documents
  """
  publishManyContactForms(
    """
    Identifies documents in each stage to be published
    """
    where: ContactFormManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many ContactForm documents
  """
  unpublishManyContactForms(
    """
    Identifies documents in each stage
    """
    where: ContactFormManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one linkExternal
  """
  createLinkExternal(data: LinkExternalCreateInput!): LinkExternal
  """
  Update one linkExternal
  """
  updateLinkExternal(
    where: LinkExternalWhereUniqueInput!
    data: LinkExternalUpdateInput!
  ): LinkExternal
  """
  Delete one linkExternal from _all_ existing stages. Returns deleted document.
  """
  deleteLinkExternal(
    """
    Document to delete
    """
    where: LinkExternalWhereUniqueInput!
  ): LinkExternal
  """
  Upsert one linkExternal
  """
  upsertLinkExternal(
    where: LinkExternalWhereUniqueInput!
    upsert: LinkExternalUpsertInput!
  ): LinkExternal
  """
  Publish one linkExternal
  """
  publishLinkExternal(
    """
    Document to publish
    """
    where: LinkExternalWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): LinkExternal
  """
  Unpublish one linkExternal from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishLinkExternal(
    """
    Document to unpublish
    """
    where: LinkExternalWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): LinkExternal
  """
  Update many linkExternals
  """
  updateManyLinkExternals(
    """
    Documents to apply update on
    """
    where: LinkExternalManyWhereInput
    """
    Updates to document content
    """
    data: LinkExternalUpdateManyInput!
  ): BatchPayload!
  """
  Delete many LinkExternal documents
  """
  deleteManyLinkExternals(
    """
    Documents to delete
    """
    where: LinkExternalManyWhereInput
  ): BatchPayload!
  """
  Publish many LinkExternal documents
  """
  publishManyLinkExternals(
    """
    Identifies documents in each stage to be published
    """
    where: LinkExternalManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many LinkExternal documents
  """
  unpublishManyLinkExternals(
    """
    Identifies documents in each stage
    """
    where: LinkExternalManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one linkInternal
  """
  createLinkInternal(data: LinkInternalCreateInput!): LinkInternal
  """
  Update one linkInternal
  """
  updateLinkInternal(
    where: LinkInternalWhereUniqueInput!
    data: LinkInternalUpdateInput!
  ): LinkInternal
  """
  Delete one linkInternal from _all_ existing stages. Returns deleted document.
  """
  deleteLinkInternal(
    """
    Document to delete
    """
    where: LinkInternalWhereUniqueInput!
  ): LinkInternal
  """
  Upsert one linkInternal
  """
  upsertLinkInternal(
    where: LinkInternalWhereUniqueInput!
    upsert: LinkInternalUpsertInput!
  ): LinkInternal
  """
  Publish one linkInternal
  """
  publishLinkInternal(
    """
    Document to publish
    """
    where: LinkInternalWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): LinkInternal
  """
  Unpublish one linkInternal from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishLinkInternal(
    """
    Document to unpublish
    """
    where: LinkInternalWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): LinkInternal
  """
  Update many linkInternals
  """
  updateManyLinkInternals(
    """
    Documents to apply update on
    """
    where: LinkInternalManyWhereInput
    """
    Updates to document content
    """
    data: LinkInternalUpdateManyInput!
  ): BatchPayload!
  """
  Delete many LinkInternal documents
  """
  deleteManyLinkInternals(
    """
    Documents to delete
    """
    where: LinkInternalManyWhereInput
  ): BatchPayload!
  """
  Publish many LinkInternal documents
  """
  publishManyLinkInternals(
    """
    Identifies documents in each stage to be published
    """
    where: LinkInternalManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many LinkInternal documents
  """
  unpublishManyLinkInternals(
    """
    Identifies documents in each stage
    """
    where: LinkInternalManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one menu
  """
  createMenu(data: MenuCreateInput!): Menu
  """
  Update one menu
  """
  updateMenu(where: MenuWhereUniqueInput!, data: MenuUpdateInput!): Menu
  """
  Delete one menu from _all_ existing stages. Returns deleted document.
  """
  deleteMenu(
    """
    Document to delete
    """
    where: MenuWhereUniqueInput!
  ): Menu
  """
  Upsert one menu
  """
  upsertMenu(where: MenuWhereUniqueInput!, upsert: MenuUpsertInput!): Menu
  """
  Publish one menu
  """
  publishMenu(
    """
    Document to publish
    """
    where: MenuWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): Menu
  """
  Unpublish one menu from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishMenu(
    """
    Document to unpublish
    """
    where: MenuWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): Menu
  """
  Update many menus
  """
  updateManyMenus(
    """
    Documents to apply update on
    """
    where: MenuManyWhereInput
    """
    Updates to document content
    """
    data: MenuUpdateManyInput!
  ): BatchPayload!
  """
  Delete many Menu documents
  """
  deleteManyMenus(
    """
    Documents to delete
    """
    where: MenuManyWhereInput
  ): BatchPayload!
  """
  Publish many Menu documents
  """
  publishManyMenus(
    """
    Identifies documents in each stage to be published
    """
    where: MenuManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many Menu documents
  """
  unpublishManyMenus(
    """
    Identifies documents in each stage
    """
    where: MenuManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one page
  """
  createPage(data: PageCreateInput!): Page
  """
  Update one page
  """
  updatePage(where: PageWhereUniqueInput!, data: PageUpdateInput!): Page
  """
  Delete one page from _all_ existing stages. Returns deleted document.
  """
  deletePage(
    """
    Document to delete
    """
    where: PageWhereUniqueInput!
  ): Page
  """
  Upsert one page
  """
  upsertPage(where: PageWhereUniqueInput!, upsert: PageUpsertInput!): Page
  """
  Publish one page
  """
  publishPage(
    """
    Document to publish
    """
    where: PageWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): Page
  """
  Unpublish one page from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishPage(
    """
    Document to unpublish
    """
    where: PageWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): Page
  """
  Update many pages
  """
  updateManyPages(
    """
    Documents to apply update on
    """
    where: PageManyWhereInput
    """
    Updates to document content
    """
    data: PageUpdateManyInput!
  ): BatchPayload!
  """
  Delete many Page documents
  """
  deleteManyPages(
    """
    Documents to delete
    """
    where: PageManyWhereInput
  ): BatchPayload!
  """
  Publish many Page documents
  """
  publishManyPages(
    """
    Identifies documents in each stage to be published
    """
    where: PageManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many Page documents
  """
  unpublishManyPages(
    """
    Identifies documents in each stage
    """
    where: PageManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one person
  """
  createPerson(data: PersonCreateInput!): Person
  """
  Update one person
  """
  updatePerson(where: PersonWhereUniqueInput!, data: PersonUpdateInput!): Person
  """
  Delete one person from _all_ existing stages. Returns deleted document.
  """
  deletePerson(
    """
    Document to delete
    """
    where: PersonWhereUniqueInput!
  ): Person
  """
  Upsert one person
  """
  upsertPerson(where: PersonWhereUniqueInput!, upsert: PersonUpsertInput!): Person
  """
  Publish one person
  """
  publishPerson(
    """
    Document to publish
    """
    where: PersonWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): Person
  """
  Unpublish one person from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishPerson(
    """
    Document to unpublish
    """
    where: PersonWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): Person
  """
  Update many people
  """
  updateManyPeople(
    """
    Documents to apply update on
    """
    where: PersonManyWhereInput
    """
    Updates to document content
    """
    data: PersonUpdateManyInput!
  ): BatchPayload!
  """
  Delete many Person documents
  """
  deleteManyPeople(
    """
    Documents to delete
    """
    where: PersonManyWhereInput
  ): BatchPayload!
  """
  Publish many Person documents
  """
  publishManyPeople(
    """
    Identifies documents in each stage to be published
    """
    where: PersonManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many Person documents
  """
  unpublishManyPeople(
    """
    Identifies documents in each stage
    """
    where: PersonManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one personList
  """
  createPersonList(data: PersonListCreateInput!): PersonList
  """
  Update one personList
  """
  updatePersonList(where: PersonListWhereUniqueInput!, data: PersonListUpdateInput!): PersonList
  """
  Delete one personList from _all_ existing stages. Returns deleted document.
  """
  deletePersonList(
    """
    Document to delete
    """
    where: PersonListWhereUniqueInput!
  ): PersonList
  """
  Upsert one personList
  """
  upsertPersonList(where: PersonListWhereUniqueInput!, upsert: PersonListUpsertInput!): PersonList
  """
  Publish one personList
  """
  publishPersonList(
    """
    Document to publish
    """
    where: PersonListWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): PersonList
  """
  Unpublish one personList from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishPersonList(
    """
    Document to unpublish
    """
    where: PersonListWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): PersonList
  """
  Update many personLists
  """
  updateManyPersonLists(
    """
    Documents to apply update on
    """
    where: PersonListManyWhereInput
    """
    Updates to document content
    """
    data: PersonListUpdateManyInput!
  ): BatchPayload!
  """
  Delete many PersonList documents
  """
  deleteManyPersonLists(
    """
    Documents to delete
    """
    where: PersonListManyWhereInput
  ): BatchPayload!
  """
  Publish many PersonList documents
  """
  publishManyPersonLists(
    """
    Identifies documents in each stage to be published
    """
    where: PersonListManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many PersonList documents
  """
  unpublishManyPersonLists(
    """
    Identifies documents in each stage
    """
    where: PersonListManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one rowColumnOne
  """
  createRowColumnOne(data: RowColumnOneCreateInput!): RowColumnOne
  """
  Update one rowColumnOne
  """
  updateRowColumnOne(
    where: RowColumnOneWhereUniqueInput!
    data: RowColumnOneUpdateInput!
  ): RowColumnOne
  """
  Delete one rowColumnOne from _all_ existing stages. Returns deleted document.
  """
  deleteRowColumnOne(
    """
    Document to delete
    """
    where: RowColumnOneWhereUniqueInput!
  ): RowColumnOne
  """
  Upsert one rowColumnOne
  """
  upsertRowColumnOne(
    where: RowColumnOneWhereUniqueInput!
    upsert: RowColumnOneUpsertInput!
  ): RowColumnOne
  """
  Publish one rowColumnOne
  """
  publishRowColumnOne(
    """
    Document to publish
    """
    where: RowColumnOneWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowColumnOne
  """
  Unpublish one rowColumnOne from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowColumnOne(
    """
    Document to unpublish
    """
    where: RowColumnOneWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): RowColumnOne
  """
  Update many rowColumnOnes
  """
  updateManyRowColumnOnes(
    """
    Documents to apply update on
    """
    where: RowColumnOneManyWhereInput
    """
    Updates to document content
    """
    data: RowColumnOneUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowColumnOne documents
  """
  deleteManyRowColumnOnes(
    """
    Documents to delete
    """
    where: RowColumnOneManyWhereInput
  ): BatchPayload!
  """
  Publish many RowColumnOne documents
  """
  publishManyRowColumnOnes(
    """
    Identifies documents in each stage to be published
    """
    where: RowColumnOneManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many RowColumnOne documents
  """
  unpublishManyRowColumnOnes(
    """
    Identifies documents in each stage
    """
    where: RowColumnOneManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one rowColumnThree
  """
  createRowColumnThree(data: RowColumnThreeCreateInput!): RowColumnThree
  """
  Update one rowColumnThree
  """
  updateRowColumnThree(
    where: RowColumnThreeWhereUniqueInput!
    data: RowColumnThreeUpdateInput!
  ): RowColumnThree
  """
  Delete one rowColumnThree from _all_ existing stages. Returns deleted document.
  """
  deleteRowColumnThree(
    """
    Document to delete
    """
    where: RowColumnThreeWhereUniqueInput!
  ): RowColumnThree
  """
  Upsert one rowColumnThree
  """
  upsertRowColumnThree(
    where: RowColumnThreeWhereUniqueInput!
    upsert: RowColumnThreeUpsertInput!
  ): RowColumnThree
  """
  Publish one rowColumnThree
  """
  publishRowColumnThree(
    """
    Document to publish
    """
    where: RowColumnThreeWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowColumnThree
  """
  Unpublish one rowColumnThree from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowColumnThree(
    """
    Document to unpublish
    """
    where: RowColumnThreeWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): RowColumnThree
  """
  Update many rowColumnThrees
  """
  updateManyRowColumnThrees(
    """
    Documents to apply update on
    """
    where: RowColumnThreeManyWhereInput
    """
    Updates to document content
    """
    data: RowColumnThreeUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowColumnThree documents
  """
  deleteManyRowColumnThrees(
    """
    Documents to delete
    """
    where: RowColumnThreeManyWhereInput
  ): BatchPayload!
  """
  Publish many RowColumnThree documents
  """
  publishManyRowColumnThrees(
    """
    Identifies documents in each stage to be published
    """
    where: RowColumnThreeManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many RowColumnThree documents
  """
  unpublishManyRowColumnThrees(
    """
    Identifies documents in each stage
    """
    where: RowColumnThreeManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one rowColumnTwo
  """
  createRowColumnTwo(data: RowColumnTwoCreateInput!): RowColumnTwo
  """
  Update one rowColumnTwo
  """
  updateRowColumnTwo(
    where: RowColumnTwoWhereUniqueInput!
    data: RowColumnTwoUpdateInput!
  ): RowColumnTwo
  """
  Delete one rowColumnTwo from _all_ existing stages. Returns deleted document.
  """
  deleteRowColumnTwo(
    """
    Document to delete
    """
    where: RowColumnTwoWhereUniqueInput!
  ): RowColumnTwo
  """
  Upsert one rowColumnTwo
  """
  upsertRowColumnTwo(
    where: RowColumnTwoWhereUniqueInput!
    upsert: RowColumnTwoUpsertInput!
  ): RowColumnTwo
  """
  Publish one rowColumnTwo
  """
  publishRowColumnTwo(
    """
    Document to publish
    """
    where: RowColumnTwoWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowColumnTwo
  """
  Unpublish one rowColumnTwo from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowColumnTwo(
    """
    Document to unpublish
    """
    where: RowColumnTwoWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): RowColumnTwo
  """
  Update many rowColumnTwos
  """
  updateManyRowColumnTwos(
    """
    Documents to apply update on
    """
    where: RowColumnTwoManyWhereInput
    """
    Updates to document content
    """
    data: RowColumnTwoUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowColumnTwo documents
  """
  deleteManyRowColumnTwos(
    """
    Documents to delete
    """
    where: RowColumnTwoManyWhereInput
  ): BatchPayload!
  """
  Publish many RowColumnTwo documents
  """
  publishManyRowColumnTwos(
    """
    Identifies documents in each stage to be published
    """
    where: RowColumnTwoManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many RowColumnTwo documents
  """
  unpublishManyRowColumnTwos(
    """
    Identifies documents in each stage
    """
    where: RowColumnTwoManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one rowCompanySlider
  """
  createRowCompanySlider(data: RowCompanySliderCreateInput!): RowCompanySlider
  """
  Update one rowCompanySlider
  """
  updateRowCompanySlider(
    where: RowCompanySliderWhereUniqueInput!
    data: RowCompanySliderUpdateInput!
  ): RowCompanySlider
  """
  Delete one rowCompanySlider from _all_ existing stages. Returns deleted document.
  """
  deleteRowCompanySlider(
    """
    Document to delete
    """
    where: RowCompanySliderWhereUniqueInput!
  ): RowCompanySlider
  """
  Upsert one rowCompanySlider
  """
  upsertRowCompanySlider(
    where: RowCompanySliderWhereUniqueInput!
    upsert: RowCompanySliderUpsertInput!
  ): RowCompanySlider
  """
  Publish one rowCompanySlider
  """
  publishRowCompanySlider(
    """
    Document to publish
    """
    where: RowCompanySliderWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowCompanySlider
  """
  Unpublish one rowCompanySlider from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowCompanySlider(
    """
    Document to unpublish
    """
    where: RowCompanySliderWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): RowCompanySlider
  """
  Update many rowCompanySliders
  """
  updateManyRowCompanySliders(
    """
    Documents to apply update on
    """
    where: RowCompanySliderManyWhereInput
    """
    Updates to document content
    """
    data: RowCompanySliderUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowCompanySlider documents
  """
  deleteManyRowCompanySliders(
    """
    Documents to delete
    """
    where: RowCompanySliderManyWhereInput
  ): BatchPayload!
  """
  Publish many RowCompanySlider documents
  """
  publishManyRowCompanySliders(
    """
    Identifies documents in each stage to be published
    """
    where: RowCompanySliderManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many RowCompanySlider documents
  """
  unpublishManyRowCompanySliders(
    """
    Identifies documents in each stage
    """
    where: RowCompanySliderManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one rowHero
  """
  createRowHero(data: RowHeroCreateInput!): RowHero
  """
  Update one rowHero
  """
  updateRowHero(where: RowHeroWhereUniqueInput!, data: RowHeroUpdateInput!): RowHero
  """
  Delete one rowHero from _all_ existing stages. Returns deleted document.
  """
  deleteRowHero(
    """
    Document to delete
    """
    where: RowHeroWhereUniqueInput!
  ): RowHero
  """
  Upsert one rowHero
  """
  upsertRowHero(where: RowHeroWhereUniqueInput!, upsert: RowHeroUpsertInput!): RowHero
  """
  Publish one rowHero
  """
  publishRowHero(
    """
    Document to publish
    """
    where: RowHeroWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowHero
  """
  Unpublish one rowHero from selected stages. Unpublish either the complete
  document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowHero(
    """
    Document to unpublish
    """
    where: RowHeroWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): RowHero
  """
  Update many rowHeroes
  """
  updateManyRowHeroes(
    """
    Documents to apply update on
    """
    where: RowHeroManyWhereInput
    """
    Updates to document content
    """
    data: RowHeroUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowHero documents
  """
  deleteManyRowHeroes(
    """
    Documents to delete
    """
    where: RowHeroManyWhereInput
  ): BatchPayload!
  """
  Publish many RowHero documents
  """
  publishManyRowHeroes(
    """
    Identifies documents in each stage to be published
    """
    where: RowHeroManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many RowHero documents
  """
  unpublishManyRowHeroes(
    """
    Identifies documents in each stage
    """
    where: RowHeroManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one rowPeopleWithText
  """
  createRowPeopleWithText(data: RowPeopleWithTextCreateInput!): RowPeopleWithText
  """
  Update one rowPeopleWithText
  """
  updateRowPeopleWithText(
    where: RowPeopleWithTextWhereUniqueInput!
    data: RowPeopleWithTextUpdateInput!
  ): RowPeopleWithText
  """
  Delete one rowPeopleWithText from _all_ existing stages. Returns deleted document.
  """
  deleteRowPeopleWithText(
    """
    Document to delete
    """
    where: RowPeopleWithTextWhereUniqueInput!
  ): RowPeopleWithText
  """
  Upsert one rowPeopleWithText
  """
  upsertRowPeopleWithText(
    where: RowPeopleWithTextWhereUniqueInput!
    upsert: RowPeopleWithTextUpsertInput!
  ): RowPeopleWithText
  """
  Publish one rowPeopleWithText
  """
  publishRowPeopleWithText(
    """
    Document to publish
    """
    where: RowPeopleWithTextWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowPeopleWithText
  """
  Unpublish one rowPeopleWithText from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowPeopleWithText(
    """
    Document to unpublish
    """
    where: RowPeopleWithTextWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): RowPeopleWithText
  """
  Update many rowPeopleWithTexts
  """
  updateManyRowPeopleWithTexts(
    """
    Documents to apply update on
    """
    where: RowPeopleWithTextManyWhereInput
    """
    Updates to document content
    """
    data: RowPeopleWithTextUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowPeopleWithText documents
  """
  deleteManyRowPeopleWithTexts(
    """
    Documents to delete
    """
    where: RowPeopleWithTextManyWhereInput
  ): BatchPayload!
  """
  Publish many RowPeopleWithText documents
  """
  publishManyRowPeopleWithTexts(
    """
    Identifies documents in each stage to be published
    """
    where: RowPeopleWithTextManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many RowPeopleWithText documents
  """
  unpublishManyRowPeopleWithTexts(
    """
    Identifies documents in each stage
    """
    where: RowPeopleWithTextManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one rowRecentBlogPost
  """
  createRowRecentBlogPost(data: RowRecentBlogPostCreateInput!): RowRecentBlogPost
  """
  Update one rowRecentBlogPost
  """
  updateRowRecentBlogPost(
    where: RowRecentBlogPostWhereUniqueInput!
    data: RowRecentBlogPostUpdateInput!
  ): RowRecentBlogPost
  """
  Delete one rowRecentBlogPost from _all_ existing stages. Returns deleted document.
  """
  deleteRowRecentBlogPost(
    """
    Document to delete
    """
    where: RowRecentBlogPostWhereUniqueInput!
  ): RowRecentBlogPost
  """
  Upsert one rowRecentBlogPost
  """
  upsertRowRecentBlogPost(
    where: RowRecentBlogPostWhereUniqueInput!
    upsert: RowRecentBlogPostUpsertInput!
  ): RowRecentBlogPost
  """
  Publish one rowRecentBlogPost
  """
  publishRowRecentBlogPost(
    """
    Document to publish
    """
    where: RowRecentBlogPostWhereUniqueInput!
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowRecentBlogPost
  """
  Unpublish one rowRecentBlogPost from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowRecentBlogPost(
    """
    Document to unpublish
    """
    where: RowRecentBlogPostWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
  ): RowRecentBlogPost
  """
  Update many rowRecentBlogPosts
  """
  updateManyRowRecentBlogPosts(
    """
    Documents to apply update on
    """
    where: RowRecentBlogPostManyWhereInput
    """
    Updates to document content
    """
    data: RowRecentBlogPostUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowRecentBlogPost documents
  """
  deleteManyRowRecentBlogPosts(
    """
    Documents to delete
    """
    where: RowRecentBlogPostManyWhereInput
  ): BatchPayload!
  """
  Publish many RowRecentBlogPost documents
  """
  publishManyRowRecentBlogPosts(
    """
    Identifies documents in each stage to be published
    """
    where: RowRecentBlogPostManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Unpublish many RowRecentBlogPost documents
  """
  unpublishManyRowRecentBlogPosts(
    """
    Identifies documents in each stage
    """
    where: RowRecentBlogPostManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
  ): BatchPayload!
  """
  Create one rowServicesWithText
  """
  createRowServicesWithText(data: RowServicesWithTextCreateInput!): RowServicesWithText
  """
  Update one rowServicesWithText
  """
  updateRowServicesWithText(
    where: RowServicesWithTextWhereUniqueInput!
    data: RowServicesWithTextUpdateInput!
  ): RowServicesWithText
  """
  Delete one rowServicesWithText from _all_ existing stages. Returns deleted document.
  """
  deleteRowServicesWithText(
    """
    Document to delete
    """
    where: RowServicesWithTextWhereUniqueInput!
  ): RowServicesWithText
  """
  Upsert one rowServicesWithText
  """
  upsertRowServicesWithText(
    where: RowServicesWithTextWhereUniqueInput!
    upsert: RowServicesWithTextUpsertInput!
  ): RowServicesWithText
  """
  Publish one rowServicesWithText
  """
  publishRowServicesWithText(
    """
    Document to publish
    """
    where: RowServicesWithTextWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowServicesWithText
  """
  Unpublish one rowServicesWithText from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowServicesWithText(
    """
    Document to unpublish
    """
    where: RowServicesWithTextWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): RowServicesWithText
  """
  Update many rowServicesWithTexts
  """
  updateManyRowServicesWithTexts(
    """
    Documents to apply update on
    """
    where: RowServicesWithTextManyWhereInput
    """
    Updates to document content
    """
    data: RowServicesWithTextUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowServicesWithText documents
  """
  deleteManyRowServicesWithTexts(
    """
    Documents to delete
    """
    where: RowServicesWithTextManyWhereInput
  ): BatchPayload!
  """
  Publish many RowServicesWithText documents
  """
  publishManyRowServicesWithTexts(
    """
    Identifies documents in each stage to be published
    """
    where: RowServicesWithTextManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many RowServicesWithText documents
  """
  unpublishManyRowServicesWithTexts(
    """
    Identifies documents in each stage
    """
    where: RowServicesWithTextManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
  """
  Create one rowYoutubeVideo
  """
  createRowYoutubeVideo(data: RowYoutubeVideoCreateInput!): RowYoutubeVideo
  """
  Update one rowYoutubeVideo
  """
  updateRowYoutubeVideo(
    where: RowYoutubeVideoWhereUniqueInput!
    data: RowYoutubeVideoUpdateInput!
  ): RowYoutubeVideo
  """
  Delete one rowYoutubeVideo from _all_ existing stages. Returns deleted document.
  """
  deleteRowYoutubeVideo(
    """
    Document to delete
    """
    where: RowYoutubeVideoWhereUniqueInput!
  ): RowYoutubeVideo
  """
  Upsert one rowYoutubeVideo
  """
  upsertRowYoutubeVideo(
    where: RowYoutubeVideoWhereUniqueInput!
    upsert: RowYoutubeVideoUpsertInput!
  ): RowYoutubeVideo
  """
  Publish one rowYoutubeVideo
  """
  publishRowYoutubeVideo(
    """
    Document to publish
    """
    where: RowYoutubeVideoWhereUniqueInput!
    """
    Optional localizations to publish
    """
    locales: [Locale!]
    """
    Publish base document including default localization and relations, as well
    as selected additional localizations. Returns document in mutation stage.
    """
    publishBase: Boolean = true
    """
    Publishing target stage
    """
    to: [Stage!]! = [PUBLISHED]
  ): RowYoutubeVideo
  """
  Unpublish one rowYoutubeVideo from selected stages. Unpublish either the
  complete document with its relations, localizations and base data or specific
  localizations only.
  """
  unpublishRowYoutubeVideo(
    """
    Document to unpublish
    """
    where: RowYoutubeVideoWhereUniqueInput!
    """
    Stages to unpublish document from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Optional locales to unpublish. Unpublishing the default locale will
    completely remove the document from the selected stages
    """
    locales: [Locale!]
    """
    Unpublish complete document including default localization and relations from stages. Can be disabled.
    """
    unpublishBase: Boolean = true
  ): RowYoutubeVideo
  """
  Update many rowYoutubeVideos
  """
  updateManyRowYoutubeVideos(
    """
    Documents to apply update on
    """
    where: RowYoutubeVideoManyWhereInput
    """
    Updates to document content
    """
    data: RowYoutubeVideoUpdateManyInput!
  ): BatchPayload!
  """
  Delete many RowYoutubeVideo documents
  """
  deleteManyRowYoutubeVideos(
    """
    Documents to delete
    """
    where: RowYoutubeVideoManyWhereInput
  ): BatchPayload!
  """
  Publish many RowYoutubeVideo documents
  """
  publishManyRowYoutubeVideos(
    """
    Identifies documents in each stage to be published
    """
    where: RowYoutubeVideoManyWhereInput
    """
    Stages to publish documents to
    """
    to: [Stage!]! = [PUBLISHED]
    """
    Document localizations to publish
    """
    locales: [Locale!]
    """
    Whether to publish the base document and default localization
    """
    publishBase: Boolean = true
  ): BatchPayload!
  """
  Unpublish many RowYoutubeVideo documents
  """
  unpublishManyRowYoutubeVideos(
    """
    Identifies documents in each stage
    """
    where: RowYoutubeVideoManyWhereInput
    """
    Stages to unpublish documents from
    """
    from: [Stage!]! = [PUBLISHED]
    """
    Locales to unpublish
    """
    locales: [Locale!]
    """
    Whether to unpublish the base document and default localization
    """
    unpublishBase: Boolean = true
  ): BatchPayload!
}
input AssetCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  personAvatar: PersonCreateManyInlineInput
  companyLogo: CompanyCreateManyInlineInput
  rowColumnThreeColOneIcon: RowColumnThreeCreateManyInlineInput
  rowColumnThreeColTwoIcon: RowColumnThreeCreateManyInlineInput
  rowColumnThreeColThreeIcon: RowColumnThreeCreateManyInlineInput
  rowColumnOneColOneIcon: RowColumnOneCreateManyInlineInput
  rowHeroAsset: RowHeroCreateManyInlineInput
  """
  alt input for default locale (nl)
  """
  alt: String
  pageAsset: PageCreateManyInlineInput
  rowColumnTwoColOneIcon: RowColumnTwoCreateManyInlineInput
  rowColumnTwoColTwoIcon: RowColumnTwoCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: AssetCreateLocalizationsInput
}
input PersonCreateManyInlineInput {
  """
  Create and connect multiple existing Person documents
  """
  create: [PersonCreateInput!]
  """
  Connect multiple existing Person documents
  """
  connect: [PersonWhereUniqueInput!]
}
input PersonCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  avatar: AssetCreateOneInlineInput!
  name: String!
  personList: PersonListCreateManyInlineInput
}
input AssetCreateOneInlineInput {
  """
  Create and connect one Asset document
  """
  create: AssetCreateInput
  """
  Connect one existing Asset document
  """
  connect: AssetWhereUniqueInput
}
input PersonListCreateManyInlineInput {
  """
  Create and connect multiple existing PersonList documents
  """
  create: [PersonListCreateInput!]
  """
  Connect multiple existing PersonList documents
  """
  connect: [PersonListWhereUniqueInput!]
}
input PersonListCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  people: PersonCreateManyInlineInput
  rowPeopleWithText: RowPeopleWithTextCreateManyInlineInput
}
input RowPeopleWithTextCreateManyInlineInput {
  """
  Create and connect multiple existing RowPeopleWithText documents
  """
  create: [RowPeopleWithTextCreateInput!]
  """
  Connect multiple existing RowPeopleWithText documents
  """
  connect: [RowPeopleWithTextWhereUniqueInput!]
}
input RowPeopleWithTextCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """
  text input for default locale (nl)
  """
  text: RichTextAST!
  links: LinkInternalCreateManyInlineInput
  personList: PersonListCreateOneInlineInput
  page: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowPeopleWithTextCreateLocalizationsInput
}
input LinkInternalCreateManyInlineInput {
  """
  Create and connect multiple existing LinkInternal documents
  """
  create: [LinkInternalCreateInput!]
  """
  Connect multiple existing LinkInternal documents
  """
  connect: [LinkInternalWhereUniqueInput!]
}
input LinkInternalCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  title input for default locale (nl)
  """
  title: String!
  page: PageCreateOneInlineInput
  description: RichTextAST
  rowPeopleWithText: RowPeopleWithTextCreateManyInlineInput
  rowHeroVideo: RowHeroCreateManyInlineInput
  rowServicesWithText: RowServicesWithTextCreateManyInlineInput
  rowRecentBlogPost: RowRecentBlogPostCreateOneInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: LinkInternalCreateLocalizationsInput
}
input PageCreateOneInlineInput {
  """
  Create and connect one Page document
  """
  create: PageCreateInput
  """
  Connect one existing Page document
  """
  connect: PageWhereUniqueInput
}
input PageCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  url input for default locale (nl)
  """
  url: String!
  """
  title input for default locale (nl)
  """
  title: String!
  """
  metaTitle input for default locale (nl)
  """
  metaTitle: String!
  """
  metaDescription input for default locale (nl)
  """
  metaDescription: String!
  metaRobots: MetaRobots
  content: PageContentCreateManyInlineInput
  """
  releaseDate input for default locale (nl)
  """
  releaseDate: DateTime
  asset: AssetCreateOneInlineInput
  internalLink: LinkInternalCreateManyInlineInput
  menu: MenuCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: PageCreateLocalizationsInput
}
input PageContentCreateManyInlineInput {
  """
  Create and connect multiple existing PageContent documents
  """
  create: [PageContentCreateInput!]
  """
  Connect multiple existing PageContent documents
  """
  connect: [PageContentWhereUniqueInput!]
}
input PageContentCreateInput {
  RowServicesWithText: RowServicesWithTextCreateInput
  RowColumnThree: RowColumnThreeCreateInput
  RowColumnTwo: RowColumnTwoCreateInput
  RowRecentBlogPost: RowRecentBlogPostCreateInput
  RowPeopleWithText: RowPeopleWithTextCreateInput
  RowColumnOne: RowColumnOneCreateInput
  RowCompanySlider: RowCompanySliderCreateInput
  RowHero: RowHeroCreateInput
  RowYoutubeVideo: RowYoutubeVideoCreateInput
}
input RowServicesWithTextCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """
  text input for default locale (nl)
  """
  text: String!
  links: LinkInternalCreateManyInlineInput
  page: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowServicesWithTextCreateLocalizationsInput
}
input PageCreateManyInlineInput {
  """
  Create and connect multiple existing Page documents
  """
  create: [PageCreateInput!]
  """
  Connect multiple existing Page documents
  """
  connect: [PageWhereUniqueInput!]
}
input RowServicesWithTextCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [RowServicesWithTextCreateLocalizationInput!]
}
input RowServicesWithTextCreateLocalizationInput {
  """
  Localization input
  """
  data: RowServicesWithTextCreateLocalizationDataInput!
  locale: Locale!
}
input RowServicesWithTextCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  text: String!
}
input RowColumnThreeCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """
  colOne input for default locale (nl)
  """
  colOne: RichTextAST!
  colOneIcon: AssetCreateOneInlineInput
  """
  colTwo input for default locale (nl)
  """
  colTwo: RichTextAST!
  colTwoIcon: AssetCreateOneInlineInput
  """
  colThree input for default locale (nl)
  """
  colThree: RichTextAST!
  colThreeIcon: AssetCreateOneInlineInput
  page: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowColumnThreeCreateLocalizationsInput
}
input RowColumnThreeCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [RowColumnThreeCreateLocalizationInput!]
}
input RowColumnThreeCreateLocalizationInput {
  """
  Localization input
  """
  data: RowColumnThreeCreateLocalizationDataInput!
  locale: Locale!
}
input RowColumnThreeCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
  colTwo: RichTextAST!
  colThree: RichTextAST!
}
input RowColumnTwoCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  """
  colOne input for default locale (nl)
  """
  colOne: RichTextAST!
  colOneIcon: AssetCreateOneInlineInput
  """
  colTwo input for default locale (nl)
  """
  colTwo: RichTextAST!
  colTwoIcon: AssetCreateOneInlineInput
  page: PageCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowColumnTwoCreateLocalizationsInput
}
input RowColumnTwoCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [RowColumnTwoCreateLocalizationInput!]
}
input RowColumnTwoCreateLocalizationInput {
  """
  Localization input
  """
  data: RowColumnTwoCreateLocalizationDataInput!
  locale: Locale!
}
input RowColumnTwoCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
  colTwo: RichTextAST!
}
input RowRecentBlogPostCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  page: PageCreateManyInlineInput
  link: LinkInternalCreateOneInlineInput
}
input LinkInternalCreateOneInlineInput {
  """
  Create and connect one LinkInternal document
  """
  create: LinkInternalCreateInput
  """
  Connect one existing LinkInternal document
  """
  connect: LinkInternalWhereUniqueInput
}
input RowColumnOneCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  colOne: RichTextAST!
  colOneIcon: AssetCreateOneInlineInput
  page: PageCreateManyInlineInput
}
input RowCompanySliderCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  companies: CompanyCreateManyInlineInput
  page: PageCreateManyInlineInput
}
input CompanyCreateManyInlineInput {
  """
  Create and connect multiple existing Company documents
  """
  create: [CompanyCreateInput!]
  """
  Connect multiple existing Company documents
  """
  connect: [CompanyWhereUniqueInput!]
}
input CompanyCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  logo: AssetCreateOneInlineInput!
  rowCompanySlider: RowCompanySliderCreateManyInlineInput
}
input RowCompanySliderCreateManyInlineInput {
  """
  Create and connect multiple existing RowCompanySlider documents
  """
  create: [RowCompanySliderCreateInput!]
  """
  Connect multiple existing RowCompanySlider documents
  """
  connect: [RowCompanySliderWhereUniqueInput!]
}
input RowHeroCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  asset: AssetCreateOneInlineInput!
  text: RichTextAST!
  links: RowHeroVideoLinksCreateManyInlineInput
  page: PageCreateManyInlineInput
}
input RowHeroVideoLinksCreateManyInlineInput {
  """
  Create and connect multiple existing RowHeroVideoLinks documents
  """
  create: [RowHeroVideoLinksCreateInput!]
  """
  Connect multiple existing RowHeroVideoLinks documents
  """
  connect: [RowHeroVideoLinksWhereUniqueInput!]
}
input RowHeroVideoLinksCreateInput {
  LinkExternal: LinkExternalCreateInput
  LinkInternal: LinkInternalCreateInput
}
input LinkExternalCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  title input for default locale (nl)
  """
  title: String!
  """
  url input for default locale (nl)
  """
  url: String!
  """
  description input for default locale (nl)
  """
  description: RichTextAST
  rowHeroVideo: RowHeroCreateManyInlineInput
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: LinkExternalCreateLocalizationsInput
}
input RowHeroCreateManyInlineInput {
  """
  Create and connect multiple existing RowHero documents
  """
  create: [RowHeroCreateInput!]
  """
  Connect multiple existing RowHero documents
  """
  connect: [RowHeroWhereUniqueInput!]
}
input LinkExternalCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [LinkExternalCreateLocalizationInput!]
}
input LinkExternalCreateLocalizationInput {
  """
  Localization input
  """
  data: LinkExternalCreateLocalizationDataInput!
  locale: Locale!
}
input LinkExternalCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
  url: String!
  description: RichTextAST
}
input RowHeroVideoLinksWhereUniqueInput {
  LinkExternal: LinkExternalWhereUniqueInput
  LinkInternal: LinkInternalWhereUniqueInput
}
input RowYoutubeVideoCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  videoId input for default locale (nl)
  """
  videoId: String!
  page: PageCreateManyInlineInput
  title: String!
  """
  Inline mutations for managing document localizations excluding the default locale
  """
  localizations: RowYoutubeVideoCreateLocalizationsInput
}
input RowYoutubeVideoCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [RowYoutubeVideoCreateLocalizationInput!]
}
input RowYoutubeVideoCreateLocalizationInput {
  """
  Localization input
  """
  data: RowYoutubeVideoCreateLocalizationDataInput!
  locale: Locale!
}
input RowYoutubeVideoCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  videoId: String!
}
input PageContentWhereUniqueInput {
  RowServicesWithText: RowServicesWithTextWhereUniqueInput
  RowColumnThree: RowColumnThreeWhereUniqueInput
  RowColumnTwo: RowColumnTwoWhereUniqueInput
  RowRecentBlogPost: RowRecentBlogPostWhereUniqueInput
  RowPeopleWithText: RowPeopleWithTextWhereUniqueInput
  RowColumnOne: RowColumnOneWhereUniqueInput
  RowCompanySlider: RowCompanySliderWhereUniqueInput
  RowHero: RowHeroWhereUniqueInput
  RowYoutubeVideo: RowYoutubeVideoWhereUniqueInput
}
input MenuCreateManyInlineInput {
  """
  Create and connect multiple existing Menu documents
  """
  create: [MenuCreateInput!]
  """
  Connect multiple existing Menu documents
  """
  connect: [MenuWhereUniqueInput!]
}
input MenuCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  identity: String!
  pages: PageCreateManyInlineInput
}
input PageCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [PageCreateLocalizationInput!]
}
input PageCreateLocalizationInput {
  """
  Localization input
  """
  data: PageCreateLocalizationDataInput!
  locale: Locale!
}
input PageCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  url: String!
  title: String!
  metaTitle: String!
  metaDescription: String!
  releaseDate: DateTime
}
input RowServicesWithTextCreateManyInlineInput {
  """
  Create and connect multiple existing RowServicesWithText documents
  """
  create: [RowServicesWithTextCreateInput!]
  """
  Connect multiple existing RowServicesWithText documents
  """
  connect: [RowServicesWithTextWhereUniqueInput!]
}
input RowRecentBlogPostCreateOneInlineInput {
  """
  Create and connect one RowRecentBlogPost document
  """
  create: RowRecentBlogPostCreateInput
  """
  Connect one existing RowRecentBlogPost document
  """
  connect: RowRecentBlogPostWhereUniqueInput
}
input LinkInternalCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [LinkInternalCreateLocalizationInput!]
}
input LinkInternalCreateLocalizationInput {
  """
  Localization input
  """
  data: LinkInternalCreateLocalizationDataInput!
  locale: Locale!
}
input LinkInternalCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
}
input PersonListCreateOneInlineInput {
  """
  Create and connect one PersonList document
  """
  create: PersonListCreateInput
  """
  Connect one existing PersonList document
  """
  connect: PersonListWhereUniqueInput
}
input RowPeopleWithTextCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [RowPeopleWithTextCreateLocalizationInput!]
}
input RowPeopleWithTextCreateLocalizationInput {
  """
  Localization input
  """
  data: RowPeopleWithTextCreateLocalizationDataInput!
  locale: Locale!
}
input RowPeopleWithTextCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  text: RichTextAST!
}
input RowColumnThreeCreateManyInlineInput {
  """
  Create and connect multiple existing RowColumnThree documents
  """
  create: [RowColumnThreeCreateInput!]
  """
  Connect multiple existing RowColumnThree documents
  """
  connect: [RowColumnThreeWhereUniqueInput!]
}
input RowColumnOneCreateManyInlineInput {
  """
  Create and connect multiple existing RowColumnOne documents
  """
  create: [RowColumnOneCreateInput!]
  """
  Connect multiple existing RowColumnOne documents
  """
  connect: [RowColumnOneWhereUniqueInput!]
}
input RowColumnTwoCreateManyInlineInput {
  """
  Create and connect multiple existing RowColumnTwo documents
  """
  create: [RowColumnTwoCreateInput!]
  """
  Connect multiple existing RowColumnTwo documents
  """
  connect: [RowColumnTwoWhereUniqueInput!]
}
input AssetCreateLocalizationsInput {
  """
  Create localizations for the newly-created document
  """
  create: [AssetCreateLocalizationInput!]
}
input AssetCreateLocalizationInput {
  """
  Localization input
  """
  data: AssetCreateLocalizationDataInput!
  locale: Locale!
}
input AssetCreateLocalizationDataInput {
  createdAt: DateTime
  updatedAt: DateTime
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}
input AssetUpdateInput {
  handle: String
  fileName: String
  height: Float
  width: Float
  size: Float
  mimeType: String
  personAvatar: PersonUpdateManyInlineInput
  companyLogo: CompanyUpdateManyInlineInput
  rowColumnThreeColOneIcon: RowColumnThreeUpdateManyInlineInput
  rowColumnThreeColTwoIcon: RowColumnThreeUpdateManyInlineInput
  rowColumnThreeColThreeIcon: RowColumnThreeUpdateManyInlineInput
  rowColumnOneColOneIcon: RowColumnOneUpdateManyInlineInput
  rowHeroAsset: RowHeroUpdateManyInlineInput
  """
  alt input for default locale (nl)
  """
  alt: String
  pageAsset: PageUpdateManyInlineInput
  rowColumnTwoColOneIcon: RowColumnTwoUpdateManyInlineInput
  rowColumnTwoColTwoIcon: RowColumnTwoUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: AssetUpdateLocalizationsInput
}
input PersonUpdateManyInlineInput {
  """
  Create and connect multiple Person documents
  """
  create: [PersonCreateInput!]
  """
  Connect multiple existing Person documents
  """
  connect: [PersonConnectInput!]
  """
  Override currently-connected documents with multiple existing Person documents
  """
  set: [PersonWhereUniqueInput!]
  """
  Update multiple Person documents
  """
  update: [PersonUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple Person documents
  """
  upsert: [PersonUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple Person documents
  """
  disconnect: [PersonWhereUniqueInput!]
  """
  Delete multiple Person documents
  """
  delete: [PersonWhereUniqueInput!]
}
input PersonConnectInput {
  """
  Document to connect
  """
  where: PersonWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input ConnectPositionInput {
  """
  Connect document after specified document
  """
  after: ID
  """
  Connect document before specified document
  """
  before: ID
  """
  Connect document at first position
  """
  start: Boolean
  """
  Connect document at last position
  """
  end: Boolean
}
input PersonUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: PersonWhereUniqueInput!
  """
  Document to update
  """
  data: PersonUpdateInput!
}
input PersonUpdateInput {
  avatar: AssetUpdateOneInlineInput
  name: String
  personList: PersonListUpdateManyInlineInput
}
input AssetUpdateOneInlineInput {
  """
  Create and connect one Asset document
  """
  create: AssetCreateInput
  """
  Update single Asset document
  """
  update: AssetUpdateWithNestedWhereUniqueInput
  """
  Upsert single Asset document
  """
  upsert: AssetUpsertWithNestedWhereUniqueInput
  """
  Connect existing Asset document
  """
  connect: AssetWhereUniqueInput
  """
  Disconnect currently connected Asset document
  """
  disconnect: Boolean
  """
  Delete currently connected Asset document
  """
  delete: Boolean
}
input AssetUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: AssetWhereUniqueInput!
  """
  Document to update
  """
  data: AssetUpdateInput!
}
input AssetUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: AssetWhereUniqueInput!
  """
  Upsert data
  """
  data: AssetUpsertInput!
}
input AssetUpsertInput {
  """
  Create document if it didn't exist
  """
  create: AssetCreateInput!
  """
  Update document if it exists
  """
  update: AssetUpdateInput!
}
input PersonListUpdateManyInlineInput {
  """
  Create and connect multiple PersonList documents
  """
  create: [PersonListCreateInput!]
  """
  Connect multiple existing PersonList documents
  """
  connect: [PersonListConnectInput!]
  """
  Override currently-connected documents with multiple existing PersonList documents
  """
  set: [PersonListWhereUniqueInput!]
  """
  Update multiple PersonList documents
  """
  update: [PersonListUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple PersonList documents
  """
  upsert: [PersonListUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple PersonList documents
  """
  disconnect: [PersonListWhereUniqueInput!]
  """
  Delete multiple PersonList documents
  """
  delete: [PersonListWhereUniqueInput!]
}
input PersonListConnectInput {
  """
  Document to connect
  """
  where: PersonListWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input PersonListUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: PersonListWhereUniqueInput!
  """
  Document to update
  """
  data: PersonListUpdateInput!
}
input PersonListUpdateInput {
  identity: String
  people: PersonUpdateManyInlineInput
  rowPeopleWithText: RowPeopleWithTextUpdateManyInlineInput
}
input RowPeopleWithTextUpdateManyInlineInput {
  """
  Create and connect multiple RowPeopleWithText documents
  """
  create: [RowPeopleWithTextCreateInput!]
  """
  Connect multiple existing RowPeopleWithText documents
  """
  connect: [RowPeopleWithTextConnectInput!]
  """
  Override currently-connected documents with multiple existing RowPeopleWithText documents
  """
  set: [RowPeopleWithTextWhereUniqueInput!]
  """
  Update multiple RowPeopleWithText documents
  """
  update: [RowPeopleWithTextUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowPeopleWithText documents
  """
  upsert: [RowPeopleWithTextUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowPeopleWithText documents
  """
  disconnect: [RowPeopleWithTextWhereUniqueInput!]
  """
  Delete multiple RowPeopleWithText documents
  """
  delete: [RowPeopleWithTextWhereUniqueInput!]
}
input RowPeopleWithTextConnectInput {
  """
  Document to connect
  """
  where: RowPeopleWithTextWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowPeopleWithTextUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowPeopleWithTextWhereUniqueInput!
  """
  Document to update
  """
  data: RowPeopleWithTextUpdateInput!
}
input RowPeopleWithTextUpdateInput {
  identity: String
  """
  text input for default locale (nl)
  """
  text: RichTextAST
  links: LinkInternalUpdateManyInlineInput
  personList: PersonListUpdateOneInlineInput
  page: PageUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: RowPeopleWithTextUpdateLocalizationsInput
}
input LinkInternalUpdateManyInlineInput {
  """
  Create and connect multiple LinkInternal documents
  """
  create: [LinkInternalCreateInput!]
  """
  Connect multiple existing LinkInternal documents
  """
  connect: [LinkInternalConnectInput!]
  """
  Override currently-connected documents with multiple existing LinkInternal documents
  """
  set: [LinkInternalWhereUniqueInput!]
  """
  Update multiple LinkInternal documents
  """
  update: [LinkInternalUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple LinkInternal documents
  """
  upsert: [LinkInternalUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple LinkInternal documents
  """
  disconnect: [LinkInternalWhereUniqueInput!]
  """
  Delete multiple LinkInternal documents
  """
  delete: [LinkInternalWhereUniqueInput!]
}
input LinkInternalConnectInput {
  """
  Document to connect
  """
  where: LinkInternalWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input LinkInternalUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: LinkInternalWhereUniqueInput!
  """
  Document to update
  """
  data: LinkInternalUpdateInput!
}
input LinkInternalUpdateInput {
  """
  title input for default locale (nl)
  """
  title: String
  page: PageUpdateOneInlineInput
  description: RichTextAST
  rowPeopleWithText: RowPeopleWithTextUpdateManyInlineInput
  rowHeroVideo: RowHeroUpdateManyInlineInput
  rowServicesWithText: RowServicesWithTextUpdateManyInlineInput
  rowRecentBlogPost: RowRecentBlogPostUpdateOneInlineInput
  """
  Manage document localizations
  """
  localizations: LinkInternalUpdateLocalizationsInput
}
input PageUpdateOneInlineInput {
  """
  Create and connect one Page document
  """
  create: PageCreateInput
  """
  Update single Page document
  """
  update: PageUpdateWithNestedWhereUniqueInput
  """
  Upsert single Page document
  """
  upsert: PageUpsertWithNestedWhereUniqueInput
  """
  Connect existing Page document
  """
  connect: PageWhereUniqueInput
  """
  Disconnect currently connected Page document
  """
  disconnect: Boolean
  """
  Delete currently connected Page document
  """
  delete: Boolean
}
input PageUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: PageWhereUniqueInput!
  """
  Document to update
  """
  data: PageUpdateInput!
}
input PageUpdateInput {
  """
  url input for default locale (nl)
  """
  url: String
  """
  title input for default locale (nl)
  """
  title: String
  """
  metaTitle input for default locale (nl)
  """
  metaTitle: String
  """
  metaDescription input for default locale (nl)
  """
  metaDescription: String
  metaRobots: MetaRobots
  content: PageContentUpdateManyInlineInput
  """
  releaseDate input for default locale (nl)
  """
  releaseDate: DateTime
  asset: AssetUpdateOneInlineInput
  internalLink: LinkInternalUpdateManyInlineInput
  menu: MenuUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: PageUpdateLocalizationsInput
}
input PageContentUpdateManyInlineInput {
  """
  Create and connect multiple PageContent documents
  """
  create: [PageContentCreateInput!]
  """
  Connect multiple existing PageContent documents
  """
  connect: [PageContentConnectInput!]
  """
  Override currently-connected documents with multiple existing PageContent documents
  """
  set: [PageContentWhereUniqueInput!]
  """
  Update multiple PageContent documents
  """
  update: [PageContentUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple PageContent documents
  """
  upsert: [PageContentUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple PageContent documents
  """
  disconnect: [PageContentWhereUniqueInput!]
  """
  Delete multiple PageContent documents
  """
  delete: [PageContentWhereUniqueInput!]
}
input PageContentConnectInput {
  RowServicesWithText: RowServicesWithTextConnectInput
  RowColumnThree: RowColumnThreeConnectInput
  RowColumnTwo: RowColumnTwoConnectInput
  RowRecentBlogPost: RowRecentBlogPostConnectInput
  RowPeopleWithText: RowPeopleWithTextConnectInput
  RowColumnOne: RowColumnOneConnectInput
  RowCompanySlider: RowCompanySliderConnectInput
  RowHero: RowHeroConnectInput
  RowYoutubeVideo: RowYoutubeVideoConnectInput
}
input RowServicesWithTextConnectInput {
  """
  Document to connect
  """
  where: RowServicesWithTextWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowColumnThreeConnectInput {
  """
  Document to connect
  """
  where: RowColumnThreeWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowColumnTwoConnectInput {
  """
  Document to connect
  """
  where: RowColumnTwoWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowRecentBlogPostConnectInput {
  """
  Document to connect
  """
  where: RowRecentBlogPostWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowColumnOneConnectInput {
  """
  Document to connect
  """
  where: RowColumnOneWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowCompanySliderConnectInput {
  """
  Document to connect
  """
  where: RowCompanySliderWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowHeroConnectInput {
  """
  Document to connect
  """
  where: RowHeroWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowYoutubeVideoConnectInput {
  """
  Document to connect
  """
  where: RowYoutubeVideoWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input PageContentUpdateWithNestedWhereUniqueInput {
  RowServicesWithText: RowServicesWithTextUpdateWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpdateWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpdateWithNestedWhereUniqueInput
  RowRecentBlogPost: RowRecentBlogPostUpdateWithNestedWhereUniqueInput
  RowPeopleWithText: RowPeopleWithTextUpdateWithNestedWhereUniqueInput
  RowColumnOne: RowColumnOneUpdateWithNestedWhereUniqueInput
  RowCompanySlider: RowCompanySliderUpdateWithNestedWhereUniqueInput
  RowHero: RowHeroUpdateWithNestedWhereUniqueInput
  RowYoutubeVideo: RowYoutubeVideoUpdateWithNestedWhereUniqueInput
}
input RowServicesWithTextUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowServicesWithTextWhereUniqueInput!
  """
  Document to update
  """
  data: RowServicesWithTextUpdateInput!
}
input RowServicesWithTextUpdateInput {
  identity: String
  """
  text input for default locale (nl)
  """
  text: String
  links: LinkInternalUpdateManyInlineInput
  page: PageUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: RowServicesWithTextUpdateLocalizationsInput
}
input PageUpdateManyInlineInput {
  """
  Create and connect multiple Page documents
  """
  create: [PageCreateInput!]
  """
  Connect multiple existing Page documents
  """
  connect: [PageConnectInput!]
  """
  Override currently-connected documents with multiple existing Page documents
  """
  set: [PageWhereUniqueInput!]
  """
  Update multiple Page documents
  """
  update: [PageUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple Page documents
  """
  upsert: [PageUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple Page documents
  """
  disconnect: [PageWhereUniqueInput!]
  """
  Delete multiple Page documents
  """
  delete: [PageWhereUniqueInput!]
}
input PageConnectInput {
  """
  Document to connect
  """
  where: PageWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input PageUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: PageWhereUniqueInput!
  """
  Upsert data
  """
  data: PageUpsertInput!
}
input PageUpsertInput {
  """
  Create document if it didn't exist
  """
  create: PageCreateInput!
  """
  Update document if it exists
  """
  update: PageUpdateInput!
}
input RowServicesWithTextUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [RowServicesWithTextCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [RowServicesWithTextUpdateLocalizationInput!]
  upsert: [RowServicesWithTextUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input RowServicesWithTextUpdateLocalizationInput {
  data: RowServicesWithTextUpdateLocalizationDataInput!
  locale: Locale!
}
input RowServicesWithTextUpdateLocalizationDataInput {
  text: String!
}
input RowServicesWithTextUpsertLocalizationInput {
  update: RowServicesWithTextUpdateLocalizationDataInput!
  create: RowServicesWithTextCreateLocalizationDataInput!
  locale: Locale!
}
input RowColumnThreeUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowColumnThreeWhereUniqueInput!
  """
  Document to update
  """
  data: RowColumnThreeUpdateInput!
}
input RowColumnThreeUpdateInput {
  identity: String
  """
  colOne input for default locale (nl)
  """
  colOne: RichTextAST
  colOneIcon: AssetUpdateOneInlineInput
  """
  colTwo input for default locale (nl)
  """
  colTwo: RichTextAST
  colTwoIcon: AssetUpdateOneInlineInput
  """
  colThree input for default locale (nl)
  """
  colThree: RichTextAST
  colThreeIcon: AssetUpdateOneInlineInput
  page: PageUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: RowColumnThreeUpdateLocalizationsInput
}
input RowColumnThreeUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [RowColumnThreeCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [RowColumnThreeUpdateLocalizationInput!]
  upsert: [RowColumnThreeUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input RowColumnThreeUpdateLocalizationInput {
  data: RowColumnThreeUpdateLocalizationDataInput!
  locale: Locale!
}
input RowColumnThreeUpdateLocalizationDataInput {
  colOne: RichTextAST!
  colTwo: RichTextAST!
  colThree: RichTextAST!
}
input RowColumnThreeUpsertLocalizationInput {
  update: RowColumnThreeUpdateLocalizationDataInput!
  create: RowColumnThreeCreateLocalizationDataInput!
  locale: Locale!
}
input RowColumnTwoUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowColumnTwoWhereUniqueInput!
  """
  Document to update
  """
  data: RowColumnTwoUpdateInput!
}
input RowColumnTwoUpdateInput {
  identity: String
  """
  colOne input for default locale (nl)
  """
  colOne: RichTextAST
  colOneIcon: AssetUpdateOneInlineInput
  """
  colTwo input for default locale (nl)
  """
  colTwo: RichTextAST
  colTwoIcon: AssetUpdateOneInlineInput
  page: PageUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: RowColumnTwoUpdateLocalizationsInput
}
input RowColumnTwoUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [RowColumnTwoCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [RowColumnTwoUpdateLocalizationInput!]
  upsert: [RowColumnTwoUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input RowColumnTwoUpdateLocalizationInput {
  data: RowColumnTwoUpdateLocalizationDataInput!
  locale: Locale!
}
input RowColumnTwoUpdateLocalizationDataInput {
  colOne: RichTextAST!
  colTwo: RichTextAST!
}
input RowColumnTwoUpsertLocalizationInput {
  update: RowColumnTwoUpdateLocalizationDataInput!
  create: RowColumnTwoCreateLocalizationDataInput!
  locale: Locale!
}
input RowRecentBlogPostUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowRecentBlogPostWhereUniqueInput!
  """
  Document to update
  """
  data: RowRecentBlogPostUpdateInput!
}
input RowRecentBlogPostUpdateInput {
  identity: String
  page: PageUpdateManyInlineInput
  link: LinkInternalUpdateOneInlineInput
}
input LinkInternalUpdateOneInlineInput {
  """
  Create and connect one LinkInternal document
  """
  create: LinkInternalCreateInput
  """
  Update single LinkInternal document
  """
  update: LinkInternalUpdateWithNestedWhereUniqueInput
  """
  Upsert single LinkInternal document
  """
  upsert: LinkInternalUpsertWithNestedWhereUniqueInput
  """
  Connect existing LinkInternal document
  """
  connect: LinkInternalWhereUniqueInput
  """
  Disconnect currently connected LinkInternal document
  """
  disconnect: Boolean
  """
  Delete currently connected LinkInternal document
  """
  delete: Boolean
}
input LinkInternalUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: LinkInternalWhereUniqueInput!
  """
  Upsert data
  """
  data: LinkInternalUpsertInput!
}
input LinkInternalUpsertInput {
  """
  Create document if it didn't exist
  """
  create: LinkInternalCreateInput!
  """
  Update document if it exists
  """
  update: LinkInternalUpdateInput!
}
input RowColumnOneUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowColumnOneWhereUniqueInput!
  """
  Document to update
  """
  data: RowColumnOneUpdateInput!
}
input RowColumnOneUpdateInput {
  identity: String
  colOne: RichTextAST
  colOneIcon: AssetUpdateOneInlineInput
  page: PageUpdateManyInlineInput
}
input RowCompanySliderUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowCompanySliderWhereUniqueInput!
  """
  Document to update
  """
  data: RowCompanySliderUpdateInput!
}
input RowCompanySliderUpdateInput {
  identity: String
  companies: CompanyUpdateManyInlineInput
  page: PageUpdateManyInlineInput
}
input CompanyUpdateManyInlineInput {
  """
  Create and connect multiple Company documents
  """
  create: [CompanyCreateInput!]
  """
  Connect multiple existing Company documents
  """
  connect: [CompanyConnectInput!]
  """
  Override currently-connected documents with multiple existing Company documents
  """
  set: [CompanyWhereUniqueInput!]
  """
  Update multiple Company documents
  """
  update: [CompanyUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple Company documents
  """
  upsert: [CompanyUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple Company documents
  """
  disconnect: [CompanyWhereUniqueInput!]
  """
  Delete multiple Company documents
  """
  delete: [CompanyWhereUniqueInput!]
}
input CompanyConnectInput {
  """
  Document to connect
  """
  where: CompanyWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input CompanyUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: CompanyWhereUniqueInput!
  """
  Document to update
  """
  data: CompanyUpdateInput!
}
input CompanyUpdateInput {
  name: String
  logo: AssetUpdateOneInlineInput
  rowCompanySlider: RowCompanySliderUpdateManyInlineInput
}
input RowCompanySliderUpdateManyInlineInput {
  """
  Create and connect multiple RowCompanySlider documents
  """
  create: [RowCompanySliderCreateInput!]
  """
  Connect multiple existing RowCompanySlider documents
  """
  connect: [RowCompanySliderConnectInput!]
  """
  Override currently-connected documents with multiple existing RowCompanySlider documents
  """
  set: [RowCompanySliderWhereUniqueInput!]
  """
  Update multiple RowCompanySlider documents
  """
  update: [RowCompanySliderUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowCompanySlider documents
  """
  upsert: [RowCompanySliderUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowCompanySlider documents
  """
  disconnect: [RowCompanySliderWhereUniqueInput!]
  """
  Delete multiple RowCompanySlider documents
  """
  delete: [RowCompanySliderWhereUniqueInput!]
}
input RowCompanySliderUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowCompanySliderWhereUniqueInput!
  """
  Upsert data
  """
  data: RowCompanySliderUpsertInput!
}
input RowCompanySliderUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowCompanySliderCreateInput!
  """
  Update document if it exists
  """
  update: RowCompanySliderUpdateInput!
}
input CompanyUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: CompanyWhereUniqueInput!
  """
  Upsert data
  """
  data: CompanyUpsertInput!
}
input CompanyUpsertInput {
  """
  Create document if it didn't exist
  """
  create: CompanyCreateInput!
  """
  Update document if it exists
  """
  update: CompanyUpdateInput!
}
input RowHeroUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowHeroWhereUniqueInput!
  """
  Document to update
  """
  data: RowHeroUpdateInput!
}
input RowHeroUpdateInput {
  identity: String
  asset: AssetUpdateOneInlineInput
  text: RichTextAST
  links: RowHeroVideoLinksUpdateManyInlineInput
  page: PageUpdateManyInlineInput
}
input RowHeroVideoLinksUpdateManyInlineInput {
  """
  Create and connect multiple RowHeroVideoLinks documents
  """
  create: [RowHeroVideoLinksCreateInput!]
  """
  Connect multiple existing RowHeroVideoLinks documents
  """
  connect: [RowHeroVideoLinksConnectInput!]
  """
  Override currently-connected documents with multiple existing RowHeroVideoLinks documents
  """
  set: [RowHeroVideoLinksWhereUniqueInput!]
  """
  Update multiple RowHeroVideoLinks documents
  """
  update: [RowHeroVideoLinksUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowHeroVideoLinks documents
  """
  upsert: [RowHeroVideoLinksUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowHeroVideoLinks documents
  """
  disconnect: [RowHeroVideoLinksWhereUniqueInput!]
  """
  Delete multiple RowHeroVideoLinks documents
  """
  delete: [RowHeroVideoLinksWhereUniqueInput!]
}
input RowHeroVideoLinksConnectInput {
  LinkExternal: LinkExternalConnectInput
  LinkInternal: LinkInternalConnectInput
}
input LinkExternalConnectInput {
  """
  Document to connect
  """
  where: LinkExternalWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowHeroVideoLinksUpdateWithNestedWhereUniqueInput {
  LinkExternal: LinkExternalUpdateWithNestedWhereUniqueInput
  LinkInternal: LinkInternalUpdateWithNestedWhereUniqueInput
}
input LinkExternalUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: LinkExternalWhereUniqueInput!
  """
  Document to update
  """
  data: LinkExternalUpdateInput!
}
input LinkExternalUpdateInput {
  """
  title input for default locale (nl)
  """
  title: String
  """
  url input for default locale (nl)
  """
  url: String
  """
  description input for default locale (nl)
  """
  description: RichTextAST
  rowHeroVideo: RowHeroUpdateManyInlineInput
  """
  Manage document localizations
  """
  localizations: LinkExternalUpdateLocalizationsInput
}
input RowHeroUpdateManyInlineInput {
  """
  Create and connect multiple RowHero documents
  """
  create: [RowHeroCreateInput!]
  """
  Connect multiple existing RowHero documents
  """
  connect: [RowHeroConnectInput!]
  """
  Override currently-connected documents with multiple existing RowHero documents
  """
  set: [RowHeroWhereUniqueInput!]
  """
  Update multiple RowHero documents
  """
  update: [RowHeroUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowHero documents
  """
  upsert: [RowHeroUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowHero documents
  """
  disconnect: [RowHeroWhereUniqueInput!]
  """
  Delete multiple RowHero documents
  """
  delete: [RowHeroWhereUniqueInput!]
}
input RowHeroUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowHeroWhereUniqueInput!
  """
  Upsert data
  """
  data: RowHeroUpsertInput!
}
input RowHeroUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowHeroCreateInput!
  """
  Update document if it exists
  """
  update: RowHeroUpdateInput!
}
input LinkExternalUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [LinkExternalCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [LinkExternalUpdateLocalizationInput!]
  upsert: [LinkExternalUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input LinkExternalUpdateLocalizationInput {
  data: LinkExternalUpdateLocalizationDataInput!
  locale: Locale!
}
input LinkExternalUpdateLocalizationDataInput {
  title: String!
  url: String!
  description: RichTextAST
}
input LinkExternalUpsertLocalizationInput {
  update: LinkExternalUpdateLocalizationDataInput!
  create: LinkExternalCreateLocalizationDataInput!
  locale: Locale!
}
input RowHeroVideoLinksUpsertWithNestedWhereUniqueInput {
  LinkExternal: LinkExternalUpsertWithNestedWhereUniqueInput
  LinkInternal: LinkInternalUpsertWithNestedWhereUniqueInput
}
input LinkExternalUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: LinkExternalWhereUniqueInput!
  """
  Upsert data
  """
  data: LinkExternalUpsertInput!
}
input LinkExternalUpsertInput {
  """
  Create document if it didn't exist
  """
  create: LinkExternalCreateInput!
  """
  Update document if it exists
  """
  update: LinkExternalUpdateInput!
}
input RowYoutubeVideoUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowYoutubeVideoWhereUniqueInput!
  """
  Document to update
  """
  data: RowYoutubeVideoUpdateInput!
}
input RowYoutubeVideoUpdateInput {
  """
  videoId input for default locale (nl)
  """
  videoId: String
  page: PageUpdateManyInlineInput
  title: String
  """
  Manage document localizations
  """
  localizations: RowYoutubeVideoUpdateLocalizationsInput
}
input RowYoutubeVideoUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [RowYoutubeVideoCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [RowYoutubeVideoUpdateLocalizationInput!]
  upsert: [RowYoutubeVideoUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input RowYoutubeVideoUpdateLocalizationInput {
  data: RowYoutubeVideoUpdateLocalizationDataInput!
  locale: Locale!
}
input RowYoutubeVideoUpdateLocalizationDataInput {
  videoId: String!
}
input RowYoutubeVideoUpsertLocalizationInput {
  update: RowYoutubeVideoUpdateLocalizationDataInput!
  create: RowYoutubeVideoCreateLocalizationDataInput!
  locale: Locale!
}
input PageContentUpsertWithNestedWhereUniqueInput {
  RowServicesWithText: RowServicesWithTextUpsertWithNestedWhereUniqueInput
  RowColumnThree: RowColumnThreeUpsertWithNestedWhereUniqueInput
  RowColumnTwo: RowColumnTwoUpsertWithNestedWhereUniqueInput
  RowRecentBlogPost: RowRecentBlogPostUpsertWithNestedWhereUniqueInput
  RowPeopleWithText: RowPeopleWithTextUpsertWithNestedWhereUniqueInput
  RowColumnOne: RowColumnOneUpsertWithNestedWhereUniqueInput
  RowCompanySlider: RowCompanySliderUpsertWithNestedWhereUniqueInput
  RowHero: RowHeroUpsertWithNestedWhereUniqueInput
  RowYoutubeVideo: RowYoutubeVideoUpsertWithNestedWhereUniqueInput
}
input RowServicesWithTextUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowServicesWithTextWhereUniqueInput!
  """
  Upsert data
  """
  data: RowServicesWithTextUpsertInput!
}
input RowServicesWithTextUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowServicesWithTextCreateInput!
  """
  Update document if it exists
  """
  update: RowServicesWithTextUpdateInput!
}
input RowColumnThreeUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowColumnThreeWhereUniqueInput!
  """
  Upsert data
  """
  data: RowColumnThreeUpsertInput!
}
input RowColumnThreeUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowColumnThreeCreateInput!
  """
  Update document if it exists
  """
  update: RowColumnThreeUpdateInput!
}
input RowColumnTwoUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowColumnTwoWhereUniqueInput!
  """
  Upsert data
  """
  data: RowColumnTwoUpsertInput!
}
input RowColumnTwoUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowColumnTwoCreateInput!
  """
  Update document if it exists
  """
  update: RowColumnTwoUpdateInput!
}
input RowRecentBlogPostUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowRecentBlogPostWhereUniqueInput!
  """
  Upsert data
  """
  data: RowRecentBlogPostUpsertInput!
}
input RowRecentBlogPostUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowRecentBlogPostCreateInput!
  """
  Update document if it exists
  """
  update: RowRecentBlogPostUpdateInput!
}
input RowPeopleWithTextUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowPeopleWithTextWhereUniqueInput!
  """
  Upsert data
  """
  data: RowPeopleWithTextUpsertInput!
}
input RowPeopleWithTextUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowPeopleWithTextCreateInput!
  """
  Update document if it exists
  """
  update: RowPeopleWithTextUpdateInput!
}
input RowColumnOneUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowColumnOneWhereUniqueInput!
  """
  Upsert data
  """
  data: RowColumnOneUpsertInput!
}
input RowColumnOneUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowColumnOneCreateInput!
  """
  Update document if it exists
  """
  update: RowColumnOneUpdateInput!
}
input RowYoutubeVideoUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: RowYoutubeVideoWhereUniqueInput!
  """
  Upsert data
  """
  data: RowYoutubeVideoUpsertInput!
}
input RowYoutubeVideoUpsertInput {
  """
  Create document if it didn't exist
  """
  create: RowYoutubeVideoCreateInput!
  """
  Update document if it exists
  """
  update: RowYoutubeVideoUpdateInput!
}
input MenuUpdateManyInlineInput {
  """
  Create and connect multiple Menu documents
  """
  create: [MenuCreateInput!]
  """
  Connect multiple existing Menu documents
  """
  connect: [MenuConnectInput!]
  """
  Override currently-connected documents with multiple existing Menu documents
  """
  set: [MenuWhereUniqueInput!]
  """
  Update multiple Menu documents
  """
  update: [MenuUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple Menu documents
  """
  upsert: [MenuUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple Menu documents
  """
  disconnect: [MenuWhereUniqueInput!]
  """
  Delete multiple Menu documents
  """
  delete: [MenuWhereUniqueInput!]
}
input MenuConnectInput {
  """
  Document to connect
  """
  where: MenuWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input MenuUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: MenuWhereUniqueInput!
  """
  Document to update
  """
  data: MenuUpdateInput!
}
input MenuUpdateInput {
  identity: String
  pages: PageUpdateManyInlineInput
}
input MenuUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: MenuWhereUniqueInput!
  """
  Upsert data
  """
  data: MenuUpsertInput!
}
input MenuUpsertInput {
  """
  Create document if it didn't exist
  """
  create: MenuCreateInput!
  """
  Update document if it exists
  """
  update: MenuUpdateInput!
}
input PageUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [PageCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [PageUpdateLocalizationInput!]
  upsert: [PageUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input PageUpdateLocalizationInput {
  data: PageUpdateLocalizationDataInput!
  locale: Locale!
}
input PageUpdateLocalizationDataInput {
  url: String!
  title: String!
  metaTitle: String!
  metaDescription: String!
  releaseDate: DateTime
}
input PageUpsertLocalizationInput {
  update: PageUpdateLocalizationDataInput!
  create: PageCreateLocalizationDataInput!
  locale: Locale!
}
input RowServicesWithTextUpdateManyInlineInput {
  """
  Create and connect multiple RowServicesWithText documents
  """
  create: [RowServicesWithTextCreateInput!]
  """
  Connect multiple existing RowServicesWithText documents
  """
  connect: [RowServicesWithTextConnectInput!]
  """
  Override currently-connected documents with multiple existing RowServicesWithText documents
  """
  set: [RowServicesWithTextWhereUniqueInput!]
  """
  Update multiple RowServicesWithText documents
  """
  update: [RowServicesWithTextUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowServicesWithText documents
  """
  upsert: [RowServicesWithTextUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowServicesWithText documents
  """
  disconnect: [RowServicesWithTextWhereUniqueInput!]
  """
  Delete multiple RowServicesWithText documents
  """
  delete: [RowServicesWithTextWhereUniqueInput!]
}
input RowRecentBlogPostUpdateOneInlineInput {
  """
  Create and connect one RowRecentBlogPost document
  """
  create: RowRecentBlogPostCreateInput
  """
  Update single RowRecentBlogPost document
  """
  update: RowRecentBlogPostUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowRecentBlogPost document
  """
  upsert: RowRecentBlogPostUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowRecentBlogPost document
  """
  connect: RowRecentBlogPostWhereUniqueInput
  """
  Disconnect currently connected RowRecentBlogPost document
  """
  disconnect: Boolean
  """
  Delete currently connected RowRecentBlogPost document
  """
  delete: Boolean
}
input LinkInternalUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [LinkInternalCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [LinkInternalUpdateLocalizationInput!]
  upsert: [LinkInternalUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input LinkInternalUpdateLocalizationInput {
  data: LinkInternalUpdateLocalizationDataInput!
  locale: Locale!
}
input LinkInternalUpdateLocalizationDataInput {
  title: String!
}
input LinkInternalUpsertLocalizationInput {
  update: LinkInternalUpdateLocalizationDataInput!
  create: LinkInternalCreateLocalizationDataInput!
  locale: Locale!
}
input PersonListUpdateOneInlineInput {
  """
  Create and connect one PersonList document
  """
  create: PersonListCreateInput
  """
  Update single PersonList document
  """
  update: PersonListUpdateWithNestedWhereUniqueInput
  """
  Upsert single PersonList document
  """
  upsert: PersonListUpsertWithNestedWhereUniqueInput
  """
  Connect existing PersonList document
  """
  connect: PersonListWhereUniqueInput
  """
  Disconnect currently connected PersonList document
  """
  disconnect: Boolean
  """
  Delete currently connected PersonList document
  """
  delete: Boolean
}
input PersonListUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: PersonListWhereUniqueInput!
  """
  Upsert data
  """
  data: PersonListUpsertInput!
}
input PersonListUpsertInput {
  """
  Create document if it didn't exist
  """
  create: PersonListCreateInput!
  """
  Update document if it exists
  """
  update: PersonListUpdateInput!
}
input RowPeopleWithTextUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [RowPeopleWithTextCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [RowPeopleWithTextUpdateLocalizationInput!]
  upsert: [RowPeopleWithTextUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input RowPeopleWithTextUpdateLocalizationInput {
  data: RowPeopleWithTextUpdateLocalizationDataInput!
  locale: Locale!
}
input RowPeopleWithTextUpdateLocalizationDataInput {
  text: RichTextAST!
}
input RowPeopleWithTextUpsertLocalizationInput {
  update: RowPeopleWithTextUpdateLocalizationDataInput!
  create: RowPeopleWithTextCreateLocalizationDataInput!
  locale: Locale!
}
input PersonUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: PersonWhereUniqueInput!
  """
  Upsert data
  """
  data: PersonUpsertInput!
}
input PersonUpsertInput {
  """
  Create document if it didn't exist
  """
  create: PersonCreateInput!
  """
  Update document if it exists
  """
  update: PersonUpdateInput!
}
input RowColumnThreeUpdateManyInlineInput {
  """
  Create and connect multiple RowColumnThree documents
  """
  create: [RowColumnThreeCreateInput!]
  """
  Connect multiple existing RowColumnThree documents
  """
  connect: [RowColumnThreeConnectInput!]
  """
  Override currently-connected documents with multiple existing RowColumnThree documents
  """
  set: [RowColumnThreeWhereUniqueInput!]
  """
  Update multiple RowColumnThree documents
  """
  update: [RowColumnThreeUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowColumnThree documents
  """
  upsert: [RowColumnThreeUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowColumnThree documents
  """
  disconnect: [RowColumnThreeWhereUniqueInput!]
  """
  Delete multiple RowColumnThree documents
  """
  delete: [RowColumnThreeWhereUniqueInput!]
}
input RowColumnOneUpdateManyInlineInput {
  """
  Create and connect multiple RowColumnOne documents
  """
  create: [RowColumnOneCreateInput!]
  """
  Connect multiple existing RowColumnOne documents
  """
  connect: [RowColumnOneConnectInput!]
  """
  Override currently-connected documents with multiple existing RowColumnOne documents
  """
  set: [RowColumnOneWhereUniqueInput!]
  """
  Update multiple RowColumnOne documents
  """
  update: [RowColumnOneUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowColumnOne documents
  """
  upsert: [RowColumnOneUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowColumnOne documents
  """
  disconnect: [RowColumnOneWhereUniqueInput!]
  """
  Delete multiple RowColumnOne documents
  """
  delete: [RowColumnOneWhereUniqueInput!]
}
input RowColumnTwoUpdateManyInlineInput {
  """
  Create and connect multiple RowColumnTwo documents
  """
  create: [RowColumnTwoCreateInput!]
  """
  Connect multiple existing RowColumnTwo documents
  """
  connect: [RowColumnTwoConnectInput!]
  """
  Override currently-connected documents with multiple existing RowColumnTwo documents
  """
  set: [RowColumnTwoWhereUniqueInput!]
  """
  Update multiple RowColumnTwo documents
  """
  update: [RowColumnTwoUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowColumnTwo documents
  """
  upsert: [RowColumnTwoUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowColumnTwo documents
  """
  disconnect: [RowColumnTwoWhereUniqueInput!]
  """
  Delete multiple RowColumnTwo documents
  """
  delete: [RowColumnTwoWhereUniqueInput!]
}
input AssetUpdateLocalizationsInput {
  """
  Localizations to create
  """
  create: [AssetCreateLocalizationInput!]
  """
  Localizations to update
  """
  update: [AssetUpdateLocalizationInput!]
  upsert: [AssetUpsertLocalizationInput!]
  """
  Localizations to delete
  """
  delete: [Locale!]
}
input AssetUpdateLocalizationInput {
  data: AssetUpdateLocalizationDataInput!
  locale: Locale!
}
input AssetUpdateLocalizationDataInput {
  handle: String!
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}
input AssetUpsertLocalizationInput {
  update: AssetUpdateLocalizationDataInput!
  create: AssetCreateLocalizationDataInput!
  locale: Locale!
}
"""
Identifies documents
"""
input AssetManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [AssetWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [AssetWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AssetWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  personAvatar_every: PersonWhereInput
  personAvatar_some: PersonWhereInput
  personAvatar_none: PersonWhereInput
  companyLogo_every: CompanyWhereInput
  companyLogo_some: CompanyWhereInput
  companyLogo_none: CompanyWhereInput
  rowColumnThreeColOneIcon_every: RowColumnThreeWhereInput
  rowColumnThreeColOneIcon_some: RowColumnThreeWhereInput
  rowColumnThreeColOneIcon_none: RowColumnThreeWhereInput
  rowColumnThreeColTwoIcon_every: RowColumnThreeWhereInput
  rowColumnThreeColTwoIcon_some: RowColumnThreeWhereInput
  rowColumnThreeColTwoIcon_none: RowColumnThreeWhereInput
  rowColumnThreeColThreeIcon_every: RowColumnThreeWhereInput
  rowColumnThreeColThreeIcon_some: RowColumnThreeWhereInput
  rowColumnThreeColThreeIcon_none: RowColumnThreeWhereInput
  rowColumnOneColOneIcon_every: RowColumnOneWhereInput
  rowColumnOneColOneIcon_some: RowColumnOneWhereInput
  rowColumnOneColOneIcon_none: RowColumnOneWhereInput
  rowHeroAsset_every: RowHeroWhereInput
  rowHeroAsset_some: RowHeroWhereInput
  rowHeroAsset_none: RowHeroWhereInput
  pageAsset_every: PageWhereInput
  pageAsset_some: PageWhereInput
  pageAsset_none: PageWhereInput
  rowColumnTwoColOneIcon_every: RowColumnTwoWhereInput
  rowColumnTwoColOneIcon_some: RowColumnTwoWhereInput
  rowColumnTwoColOneIcon_none: RowColumnTwoWhereInput
  rowColumnTwoColTwoIcon_every: RowColumnTwoWhereInput
  rowColumnTwoColTwoIcon_some: RowColumnTwoWhereInput
  rowColumnTwoColTwoIcon_none: RowColumnTwoWhereInput
}
input AssetUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  Optional updates to localizations
  """
  localizations: [AssetUpdateManyLocalizationInput!]
}
input AssetUpdateManyLocalizationInput {
  fileName: String!
  height: Float
  width: Float
  size: Float
  mimeType: String
  alt: String
}
type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}
"""
The Long scalar type represents non-fractional signed whole numeric values. Long
can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long
"""
Identifies documents
"""
input CompanyManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [CompanyWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [CompanyWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CompanyWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string
  """
  name_not_ends_with: String
  logo: AssetWhereInput
  rowCompanySlider_every: RowCompanySliderWhereInput
  rowCompanySlider_some: RowCompanySliderWhereInput
  rowCompanySlider_none: RowCompanySliderWhereInput
}
input CompanyUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
}
input ContactFormCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  email: String!
  phoneNumber: String
  subject: ContactSubject!
  message: String!
}
input ContactFormUpdateInput {
  name: String
  email: String
  phoneNumber: String
  subject: ContactSubject
  message: String
}
input ContactFormUpsertInput {
  """
  Create document if it didn't exist
  """
  create: ContactFormCreateInput!
  """
  Update document if it exists
  """
  update: ContactFormUpdateInput!
}
"""
Identifies documents
"""
input ContactFormManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [ContactFormWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ContactFormWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [ContactFormWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string
  """
  name_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string
  """
  email_not_ends_with: String
  phoneNumber: String
  """
  All values that are not equal to given value.
  """
  phoneNumber_not: String
  """
  All values that are contained in given list.
  """
  phoneNumber_in: [String!]
  """
  All values that are not contained in given list.
  """
  phoneNumber_not_in: [String!]
  """
  All values containing the given string.
  """
  phoneNumber_contains: String
  """
  All values not containing the given string.
  """
  phoneNumber_not_contains: String
  """
  All values starting with the given string.
  """
  phoneNumber_starts_with: String
  """
  All values not starting with the given string.
  """
  phoneNumber_not_starts_with: String
  """
  All values ending with the given string.
  """
  phoneNumber_ends_with: String
  """
  All values not ending with the given string
  """
  phoneNumber_not_ends_with: String
  subject: ContactSubject
  """
  All values that are not equal to given value.
  """
  subject_not: ContactSubject
  """
  All values that are contained in given list.
  """
  subject_in: [ContactSubject!]
  """
  All values that are not contained in given list.
  """
  subject_not_in: [ContactSubject!]
  message: String
  """
  All values that are not equal to given value.
  """
  message_not: String
  """
  All values that are contained in given list.
  """
  message_in: [String!]
  """
  All values that are not contained in given list.
  """
  message_not_in: [String!]
  """
  All values containing the given string.
  """
  message_contains: String
  """
  All values not containing the given string.
  """
  message_not_contains: String
  """
  All values starting with the given string.
  """
  message_starts_with: String
  """
  All values not starting with the given string.
  """
  message_not_starts_with: String
  """
  All values ending with the given string.
  """
  message_ends_with: String
  """
  All values not ending with the given string
  """
  message_not_ends_with: String
}
input ContactFormUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  email: String!
  phoneNumber: String
  subject: ContactSubject!
  message: String!
}
"""
Identifies documents
"""
input LinkExternalManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [LinkExternalWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [LinkExternalWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LinkExternalWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
}
input LinkExternalUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  Optional updates to localizations
  """
  localizations: [LinkExternalUpdateManyLocalizationInput!]
}
input LinkExternalUpdateManyLocalizationInput {
  title: String!
  url: String!
  description: RichTextAST
}
"""
Identifies documents
"""
input LinkInternalManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [LinkInternalWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [LinkInternalWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LinkInternalWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  page: PageWhereInput
  rowPeopleWithText_every: RowPeopleWithTextWhereInput
  rowPeopleWithText_some: RowPeopleWithTextWhereInput
  rowPeopleWithText_none: RowPeopleWithTextWhereInput
  rowServicesWithText_every: RowServicesWithTextWhereInput
  rowServicesWithText_some: RowServicesWithTextWhereInput
  rowServicesWithText_none: RowServicesWithTextWhereInput
  rowRecentBlogPost: RowRecentBlogPostWhereInput
}
input LinkInternalUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  description: RichTextAST
  """
  Optional updates to localizations
  """
  localizations: [LinkInternalUpdateManyLocalizationInput!]
}
input LinkInternalUpdateManyLocalizationInput {
  title: String!
}
"""
Identifies documents
"""
input MenuManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [MenuWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [MenuWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [MenuWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  pages_every: PageWhereInput
  pages_some: PageWhereInput
  pages_none: PageWhereInput
}
input MenuUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
}
"""
Identifies documents
"""
input PageManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [PageWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PageWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PageWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  metaRobots: MetaRobots
  """
  All values that are not equal to given value.
  """
  metaRobots_not: MetaRobots
  """
  All values that are contained in given list.
  """
  metaRobots_in: [MetaRobots!]
  """
  All values that are not contained in given list.
  """
  metaRobots_not_in: [MetaRobots!]
  asset: AssetWhereInput
  internalLink_every: LinkInternalWhereInput
  internalLink_some: LinkInternalWhereInput
  internalLink_none: LinkInternalWhereInput
  menu_every: MenuWhereInput
  menu_some: MenuWhereInput
  menu_none: MenuWhereInput
}
input PageUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  metaRobots: MetaRobots
  """
  Optional updates to localizations
  """
  localizations: [PageUpdateManyLocalizationInput!]
}
input PageUpdateManyLocalizationInput {
  title: String!
  metaTitle: String!
  metaDescription: String!
  releaseDate: DateTime
}
"""
Identifies documents
"""
input PersonManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [PersonWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PersonWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PersonWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  avatar: AssetWhereInput
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string
  """
  name_not_ends_with: String
  personList_every: PersonListWhereInput
  personList_some: PersonListWhereInput
  personList_none: PersonListWhereInput
}
input PersonUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
}
"""
Identifies documents
"""
input PersonListManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [PersonListWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PersonListWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PersonListWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  people_every: PersonWhereInput
  people_some: PersonWhereInput
  people_none: PersonWhereInput
  rowPeopleWithText_every: RowPeopleWithTextWhereInput
  rowPeopleWithText_some: RowPeopleWithTextWhereInput
  rowPeopleWithText_none: RowPeopleWithTextWhereInput
}
input PersonListUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
}
"""
Identifies documents
"""
input RowColumnOneManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowColumnOneWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowColumnOneWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowColumnOneWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  colOneIcon: AssetWhereInput
}
input RowColumnOneUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  colOne: RichTextAST!
}
"""
Identifies documents
"""
input RowColumnThreeManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowColumnThreeWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowColumnThreeWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowColumnThreeWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  colOneIcon: AssetWhereInput
  colTwoIcon: AssetWhereInput
  colThreeIcon: AssetWhereInput
}
input RowColumnThreeUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  Optional updates to localizations
  """
  localizations: [RowColumnThreeUpdateManyLocalizationInput!]
}
input RowColumnThreeUpdateManyLocalizationInput {
  colOne: RichTextAST!
  colTwo: RichTextAST!
  colThree: RichTextAST!
}
"""
Identifies documents
"""
input RowColumnTwoManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowColumnTwoWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowColumnTwoWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowColumnTwoWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  colOneIcon: AssetWhereInput
  colTwoIcon: AssetWhereInput
}
input RowColumnTwoUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  Optional updates to localizations
  """
  localizations: [RowColumnTwoUpdateManyLocalizationInput!]
}
input RowColumnTwoUpdateManyLocalizationInput {
  colOne: RichTextAST!
  colTwo: RichTextAST!
}
"""
Identifies documents
"""
input RowCompanySliderManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowCompanySliderWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowCompanySliderWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowCompanySliderWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  companies_every: CompanyWhereInput
  companies_some: CompanyWhereInput
  companies_none: CompanyWhereInput
}
input RowCompanySliderUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
}
"""
Identifies documents
"""
input RowHeroManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowHeroWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowHeroWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowHeroWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  asset: AssetWhereInput
}
input RowHeroUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  text: RichTextAST!
}
"""
Identifies documents
"""
input RowPeopleWithTextManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowPeopleWithTextWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowPeopleWithTextWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowPeopleWithTextWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  links_every: LinkInternalWhereInput
  links_some: LinkInternalWhereInput
  links_none: LinkInternalWhereInput
  personList: PersonListWhereInput
}
input RowPeopleWithTextUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  Optional updates to localizations
  """
  localizations: [RowPeopleWithTextUpdateManyLocalizationInput!]
}
input RowPeopleWithTextUpdateManyLocalizationInput {
  text: RichTextAST!
}
"""
Identifies documents
"""
input RowRecentBlogPostManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowRecentBlogPostWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowRecentBlogPostWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowRecentBlogPostWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  link: LinkInternalWhereInput
}
input RowRecentBlogPostUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
}
"""
Identifies documents
"""
input RowServicesWithTextManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowServicesWithTextWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowServicesWithTextWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowServicesWithTextWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  identity: String
  """
  All values that are not equal to given value.
  """
  identity_not: String
  """
  All values that are contained in given list.
  """
  identity_in: [String!]
  """
  All values that are not contained in given list.
  """
  identity_not_in: [String!]
  """
  All values containing the given string.
  """
  identity_contains: String
  """
  All values not containing the given string.
  """
  identity_not_contains: String
  """
  All values starting with the given string.
  """
  identity_starts_with: String
  """
  All values not starting with the given string.
  """
  identity_not_starts_with: String
  """
  All values ending with the given string.
  """
  identity_ends_with: String
  """
  All values not ending with the given string
  """
  identity_not_ends_with: String
  links_every: LinkInternalWhereInput
  links_some: LinkInternalWhereInput
  links_none: LinkInternalWhereInput
}
input RowServicesWithTextUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  """
  Optional updates to localizations
  """
  localizations: [RowServicesWithTextUpdateManyLocalizationInput!]
}
input RowServicesWithTextUpdateManyLocalizationInput {
  text: String!
}
"""
Identifies documents
"""
input RowYoutubeVideoManyWhereInput {
  """
  Contains search across all appropriate fields.
  """
  _search: String
  """
  Logical AND on all given filters.
  """
  AND: [RowYoutubeVideoWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RowYoutubeVideoWhereInput!]
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RowYoutubeVideoWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  publishedAt: DateTime
  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string
  """
  title_not_ends_with: String
}
input RowYoutubeVideoUpdateManyInput {
  createdAt: DateTime
  updatedAt: DateTime
  title: String!
  """
  Optional updates to localizations
  """
  localizations: [RowYoutubeVideoUpdateManyLocalizationInput!]
}
input RowYoutubeVideoUpdateManyLocalizationInput {
  videoId: String!
}
"""
Representing a color value comprising of HEX, RGBA and css color values
"""
type Color {
  hex: Hex!
  rgba: RGBA!
  css: String!
}
scalar Hex
"""
Representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
type RGBA {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}
scalar RGBAHue
scalar RGBATransparency
"""
Raw JSON value
"""
scalar Json
input RowHeroVideoLinksUpdateInput {
  LinkExternal: LinkExternalUpdateInput
  LinkInternal: LinkInternalUpdateInput
}
"""
A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard
for representation of dates using the Gregorian calendar.
"""
scalar Date
enum _FilterKind {
  search
  AND
  OR
  NOT
  eq
  eq_not
  in
  not_in
  lt
  lte
  gt
  gte
  contains
  not_contains
  starts_with
  not_starts_with
  ends_with
  not_ends_with
  contains_all
  contains_some
  contains_none
  relational_single
  relational_every
  relational_some
  relational_none
}
input RowColumnThreeCreateOneInlineInput {
  """
  Create and connect one RowColumnThree document
  """
  create: RowColumnThreeCreateInput
  """
  Connect one existing RowColumnThree document
  """
  connect: RowColumnThreeWhereUniqueInput
}
input RowHeroVideoLinksWhereInput {
  LinkExternal: LinkExternalWhereInput
  LinkInternal: LinkInternalWhereInput
}
input RowColumnThreeUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowColumnThreeWhereInput!
  """
  Update many input
  """
  data: RowColumnThreeUpdateManyInput!
}
input RowPeopleWithTextCreateOneInlineInput {
  """
  Create and connect one RowPeopleWithText document
  """
  create: RowPeopleWithTextCreateInput
  """
  Connect one existing RowPeopleWithText document
  """
  connect: RowPeopleWithTextWhereUniqueInput
}
input MenuUpdateOneInlineInput {
  """
  Create and connect one Menu document
  """
  create: MenuCreateInput
  """
  Update single Menu document
  """
  update: MenuUpdateWithNestedWhereUniqueInput
  """
  Upsert single Menu document
  """
  upsert: MenuUpsertWithNestedWhereUniqueInput
  """
  Connect existing Menu document
  """
  connect: MenuWhereUniqueInput
  """
  Disconnect currently connected Menu document
  """
  disconnect: Boolean
  """
  Delete currently connected Menu document
  """
  delete: Boolean
}
input RowServicesWithTextUpdateOneInlineInput {
  """
  Create and connect one RowServicesWithText document
  """
  create: RowServicesWithTextCreateInput
  """
  Update single RowServicesWithText document
  """
  update: RowServicesWithTextUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowServicesWithText document
  """
  upsert: RowServicesWithTextUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowServicesWithText document
  """
  connect: RowServicesWithTextWhereUniqueInput
  """
  Disconnect currently connected RowServicesWithText document
  """
  disconnect: Boolean
  """
  Delete currently connected RowServicesWithText document
  """
  delete: Boolean
}
input PageContentUpdateManyWithNestedWhereInput {
  RowServicesWithText: RowServicesWithTextUpdateManyWithNestedWhereInput
  RowColumnThree: RowColumnThreeUpdateManyWithNestedWhereInput
  RowColumnTwo: RowColumnTwoUpdateManyWithNestedWhereInput
  RowRecentBlogPost: RowRecentBlogPostUpdateManyWithNestedWhereInput
  RowPeopleWithText: RowPeopleWithTextUpdateManyWithNestedWhereInput
  RowColumnOne: RowColumnOneUpdateManyWithNestedWhereInput
  RowCompanySlider: RowCompanySliderUpdateManyWithNestedWhereInput
  RowHero: RowHeroUpdateManyWithNestedWhereInput
  RowYoutubeVideo: RowYoutubeVideoUpdateManyWithNestedWhereInput
}
input RowServicesWithTextUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowServicesWithTextWhereInput!
  """
  Update many input
  """
  data: RowServicesWithTextUpdateManyInput!
}
input RowColumnTwoUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowColumnTwoWhereInput!
  """
  Update many input
  """
  data: RowColumnTwoUpdateManyInput!
}
input RowRecentBlogPostUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowRecentBlogPostWhereInput!
  """
  Update many input
  """
  data: RowRecentBlogPostUpdateManyInput!
}
input RowPeopleWithTextUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowPeopleWithTextWhereInput!
  """
  Update many input
  """
  data: RowPeopleWithTextUpdateManyInput!
}
input RowColumnOneUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowColumnOneWhereInput!
  """
  Update many input
  """
  data: RowColumnOneUpdateManyInput!
}
input RowCompanySliderUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowCompanySliderWhereInput!
  """
  Update many input
  """
  data: RowCompanySliderUpdateManyInput!
}
input RowHeroUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowHeroWhereInput!
  """
  Update many input
  """
  data: RowHeroUpdateManyInput!
}
input RowYoutubeVideoUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: RowYoutubeVideoWhereInput!
  """
  Update many input
  """
  data: RowYoutubeVideoUpdateManyInput!
}
input ContactFormUpsertWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: ContactFormWhereUniqueInput!
  """
  Upsert data
  """
  data: ContactFormUpsertInput!
}
input RowHeroUpdateOneInlineInput {
  """
  Create and connect one RowHero document
  """
  create: RowHeroCreateInput
  """
  Update single RowHero document
  """
  update: RowHeroUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowHero document
  """
  upsert: RowHeroUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowHero document
  """
  connect: RowHeroWhereUniqueInput
  """
  Disconnect currently connected RowHero document
  """
  disconnect: Boolean
  """
  Delete currently connected RowHero document
  """
  delete: Boolean
}
input MenuUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: MenuWhereInput!
  """
  Update many input
  """
  data: MenuUpdateManyInput!
}
input PageUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: PageWhereInput!
  """
  Update many input
  """
  data: PageUpdateManyInput!
}
enum _MutationInputFieldKind {
  scalar
  richText
  enum
  relation
  union
  virtual
}
input AssetUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: AssetWhereInput!
  """
  Update many input
  """
  data: AssetUpdateManyInput!
}
input RowColumnTwoUpdateOneInlineInput {
  """
  Create and connect one RowColumnTwo document
  """
  create: RowColumnTwoCreateInput
  """
  Update single RowColumnTwo document
  """
  update: RowColumnTwoUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowColumnTwo document
  """
  upsert: RowColumnTwoUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowColumnTwo document
  """
  connect: RowColumnTwoWhereUniqueInput
  """
  Disconnect currently connected RowColumnTwo document
  """
  disconnect: Boolean
  """
  Delete currently connected RowColumnTwo document
  """
  delete: Boolean
}
input PageContentUpdateOneInlineInput {
  """
  Create and connect one PageContent document
  """
  create: PageContentCreateInput
  """
  Update single PageContent document
  """
  update: PageContentUpdateWithNestedWhereUniqueInput
  """
  Upsert single PageContent document
  """
  upsert: PageContentUpsertWithNestedWhereUniqueInput
  """
  Connect existing PageContent document
  """
  connect: PageContentWhereUniqueInput
  """
  Disconnect currently connected PageContent document
  """
  disconnect: Boolean
  """
  Delete currently connected PageContent document
  """
  delete: Boolean
}
enum _MutationKind {
  create
  publish
  unpublish
  update
  upsert
  delete
  updateMany
  publishMany
  unpublishMany
  deleteMany
}
input RowYoutubeVideoCreateOneInlineInput {
  """
  Create and connect one RowYoutubeVideo document
  """
  create: RowYoutubeVideoCreateInput
  """
  Connect one existing RowYoutubeVideo document
  """
  connect: RowYoutubeVideoWhereUniqueInput
}
enum _RelationKind {
  regular
  union
}
input AssetCreateManyInlineInput {
  """
  Create and connect multiple existing Asset documents
  """
  create: [AssetCreateInput!]
  """
  Connect multiple existing Asset documents
  """
  connect: [AssetWhereUniqueInput!]
}
input PersonCreateOneInlineInput {
  """
  Create and connect one Person document
  """
  create: PersonCreateInput
  """
  Connect one existing Person document
  """
  connect: PersonWhereUniqueInput
}
input RowColumnTwoCreateOneInlineInput {
  """
  Create and connect one RowColumnTwo document
  """
  create: RowColumnTwoCreateInput
  """
  Connect one existing RowColumnTwo document
  """
  connect: RowColumnTwoWhereUniqueInput
}
enum _RelationInputCardinality {
  one
  many
}
"""
Input type representing a RGBA color value: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgb()_and_rgba()
"""
input RGBAInput {
  r: RGBAHue!
  g: RGBAHue!
  b: RGBAHue!
  a: RGBATransparency!
}
input CompanyUpdateOneInlineInput {
  """
  Create and connect one Company document
  """
  create: CompanyCreateInput
  """
  Update single Company document
  """
  update: CompanyUpdateWithNestedWhereUniqueInput
  """
  Upsert single Company document
  """
  upsert: CompanyUpsertWithNestedWhereUniqueInput
  """
  Connect existing Company document
  """
  connect: CompanyWhereUniqueInput
  """
  Disconnect currently connected Company document
  """
  disconnect: Boolean
  """
  Delete currently connected Company document
  """
  delete: Boolean
}
input RowColumnThreeUpdateOneInlineInput {
  """
  Create and connect one RowColumnThree document
  """
  create: RowColumnThreeCreateInput
  """
  Update single RowColumnThree document
  """
  update: RowColumnThreeUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowColumnThree document
  """
  upsert: RowColumnThreeUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowColumnThree document
  """
  connect: RowColumnThreeWhereUniqueInput
  """
  Disconnect currently connected RowColumnThree document
  """
  disconnect: Boolean
  """
  Delete currently connected RowColumnThree document
  """
  delete: Boolean
}
input LinkExternalCreateManyInlineInput {
  """
  Create and connect multiple existing LinkExternal documents
  """
  create: [LinkExternalCreateInput!]
  """
  Connect multiple existing LinkExternal documents
  """
  connect: [LinkExternalWhereUniqueInput!]
}
input LinkExternalUpdateOneInlineInput {
  """
  Create and connect one LinkExternal document
  """
  create: LinkExternalCreateInput
  """
  Update single LinkExternal document
  """
  update: LinkExternalUpdateWithNestedWhereUniqueInput
  """
  Upsert single LinkExternal document
  """
  upsert: LinkExternalUpsertWithNestedWhereUniqueInput
  """
  Connect existing LinkExternal document
  """
  connect: LinkExternalWhereUniqueInput
  """
  Disconnect currently connected LinkExternal document
  """
  disconnect: Boolean
  """
  Delete currently connected LinkExternal document
  """
  delete: Boolean
}
input PublishLocaleInput {
  """
  Locales to publish
  """
  locale: Locale!
  """
  Stages to publish selected locales to
  """
  stages: [Stage!]!
}
input RowYoutubeVideoUpdateOneInlineInput {
  """
  Create and connect one RowYoutubeVideo document
  """
  create: RowYoutubeVideoCreateInput
  """
  Update single RowYoutubeVideo document
  """
  update: RowYoutubeVideoUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowYoutubeVideo document
  """
  upsert: RowYoutubeVideoUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowYoutubeVideo document
  """
  connect: RowYoutubeVideoWhereUniqueInput
  """
  Disconnect currently connected RowYoutubeVideo document
  """
  disconnect: Boolean
  """
  Delete currently connected RowYoutubeVideo document
  """
  delete: Boolean
}
input LinkExternalUpdateManyInlineInput {
  """
  Create and connect multiple LinkExternal documents
  """
  create: [LinkExternalCreateInput!]
  """
  Connect multiple existing LinkExternal documents
  """
  connect: [LinkExternalConnectInput!]
  """
  Override currently-connected documents with multiple existing LinkExternal documents
  """
  set: [LinkExternalWhereUniqueInput!]
  """
  Update multiple LinkExternal documents
  """
  update: [LinkExternalUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple LinkExternal documents
  """
  upsert: [LinkExternalUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple LinkExternal documents
  """
  disconnect: [LinkExternalWhereUniqueInput!]
  """
  Delete multiple LinkExternal documents
  """
  delete: [LinkExternalWhereUniqueInput!]
}
input PersonUpdateOneInlineInput {
  """
  Create and connect one Person document
  """
  create: PersonCreateInput
  """
  Update single Person document
  """
  update: PersonUpdateWithNestedWhereUniqueInput
  """
  Upsert single Person document
  """
  upsert: PersonUpsertWithNestedWhereUniqueInput
  """
  Connect existing Person document
  """
  connect: PersonWhereUniqueInput
  """
  Disconnect currently connected Person document
  """
  disconnect: Boolean
  """
  Delete currently connected Person document
  """
  delete: Boolean
}
enum _OrderDirection {
  asc
  desc
}
input ContactFormUpdateWithNestedWhereUniqueInput {
  """
  Unique document search
  """
  where: ContactFormWhereUniqueInput!
  """
  Document to update
  """
  data: ContactFormUpdateInput!
}
input CompanyUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: CompanyWhereInput!
  """
  Update many input
  """
  data: CompanyUpdateManyInput!
}
input PersonUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: PersonWhereInput!
  """
  Update many input
  """
  data: PersonUpdateManyInput!
}
input LinkInternalUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: LinkInternalWhereInput!
  """
  Update many input
  """
  data: LinkInternalUpdateManyInput!
}
input UnpublishLocaleInput {
  """
  Locales to unpublish
  """
  locale: Locale!
  """
  Stages to unpublish selected locales from
  """
  stages: [Stage!]!
}
input PageContentUpdateInput {
  RowServicesWithText: RowServicesWithTextUpdateInput
  RowColumnThree: RowColumnThreeUpdateInput
  RowColumnTwo: RowColumnTwoUpdateInput
  RowRecentBlogPost: RowRecentBlogPostUpdateInput
  RowPeopleWithText: RowPeopleWithTextUpdateInput
  RowColumnOne: RowColumnOneUpdateInput
  RowCompanySlider: RowCompanySliderUpdateInput
  RowHero: RowHeroUpdateInput
  RowYoutubeVideo: RowYoutubeVideoUpdateInput
}
input PageContentWhereInput {
  RowServicesWithText: RowServicesWithTextWhereInput
  RowColumnThree: RowColumnThreeWhereInput
  RowColumnTwo: RowColumnTwoWhereInput
  RowRecentBlogPost: RowRecentBlogPostWhereInput
  RowPeopleWithText: RowPeopleWithTextWhereInput
  RowColumnOne: RowColumnOneWhereInput
  RowCompanySlider: RowCompanySliderWhereInput
  RowHero: RowHeroWhereInput
  RowYoutubeVideo: RowYoutubeVideoWhereInput
}
input RowHeroVideoLinksUpdateOneInlineInput {
  """
  Create and connect one RowHeroVideoLinks document
  """
  create: RowHeroVideoLinksCreateInput
  """
  Update single RowHeroVideoLinks document
  """
  update: RowHeroVideoLinksUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowHeroVideoLinks document
  """
  upsert: RowHeroVideoLinksUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowHeroVideoLinks document
  """
  connect: RowHeroVideoLinksWhereUniqueInput
  """
  Disconnect currently connected RowHeroVideoLinks document
  """
  disconnect: Boolean
  """
  Delete currently connected RowHeroVideoLinks document
  """
  delete: Boolean
}
"""
Representing a geolocation point with latitude and longitude
"""
type Location {
  latitude: Float!
  longitude: Float!
  distance(from: LocationInput!): Float!
}
"""
Input for a geolocation point with latitude and longitude
"""
input LocationInput {
  latitude: Float!
  longitude: Float!
}
input RowServicesWithTextCreateOneInlineInput {
  """
  Create and connect one RowServicesWithText document
  """
  create: RowServicesWithTextCreateInput
  """
  Connect one existing RowServicesWithText document
  """
  connect: RowServicesWithTextWhereUniqueInput
}
input LinkExternalUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: LinkExternalWhereInput!
  """
  Update many input
  """
  data: LinkExternalUpdateManyInput!
}
input AssetConnectInput {
  """
  Document to connect
  """
  where: AssetWhereUniqueInput!
  """
  Allow to specify document position in list of connected documents, will default to appending at end of list
  """
  position: ConnectPositionInput
}
input RowRecentBlogPostUpdateManyInlineInput {
  """
  Create and connect multiple RowRecentBlogPost documents
  """
  create: [RowRecentBlogPostCreateInput!]
  """
  Connect multiple existing RowRecentBlogPost documents
  """
  connect: [RowRecentBlogPostConnectInput!]
  """
  Override currently-connected documents with multiple existing RowRecentBlogPost documents
  """
  set: [RowRecentBlogPostWhereUniqueInput!]
  """
  Update multiple RowRecentBlogPost documents
  """
  update: [RowRecentBlogPostUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowRecentBlogPost documents
  """
  upsert: [RowRecentBlogPostUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowRecentBlogPost documents
  """
  disconnect: [RowRecentBlogPostWhereUniqueInput!]
  """
  Delete multiple RowRecentBlogPost documents
  """
  delete: [RowRecentBlogPostWhereUniqueInput!]
}
input RowHeroVideoLinksUpdateManyWithNestedWhereInput {
  LinkExternal: LinkExternalUpdateManyWithNestedWhereInput
  LinkInternal: LinkInternalUpdateManyWithNestedWhereInput
}
input AssetUpdateManyInlineInput {
  """
  Create and connect multiple Asset documents
  """
  create: [AssetCreateInput!]
  """
  Connect multiple existing Asset documents
  """
  connect: [AssetConnectInput!]
  """
  Override currently-connected documents with multiple existing Asset documents
  """
  set: [AssetWhereUniqueInput!]
  """
  Update multiple Asset documents
  """
  update: [AssetUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple Asset documents
  """
  upsert: [AssetUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple Asset documents
  """
  disconnect: [AssetWhereUniqueInput!]
  """
  Delete multiple Asset documents
  """
  delete: [AssetWhereUniqueInput!]
}
input ContactFormUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: ContactFormWhereInput!
  """
  Update many input
  """
  data: ContactFormUpdateManyInput!
}
input PageContentCreateOneInlineInput {
  """
  Create and connect one PageContent document
  """
  create: PageContentCreateInput
  """
  Connect one existing PageContent document
  """
  connect: PageContentWhereUniqueInput
}
input RowHeroCreateOneInlineInput {
  """
  Create and connect one RowHero document
  """
  create: RowHeroCreateInput
  """
  Connect one existing RowHero document
  """
  connect: RowHeroWhereUniqueInput
}
input RowRecentBlogPostCreateManyInlineInput {
  """
  Create and connect multiple existing RowRecentBlogPost documents
  """
  create: [RowRecentBlogPostCreateInput!]
  """
  Connect multiple existing RowRecentBlogPost documents
  """
  connect: [RowRecentBlogPostWhereUniqueInput!]
}
input RowCompanySliderCreateOneInlineInput {
  """
  Create and connect one RowCompanySlider document
  """
  create: RowCompanySliderCreateInput
  """
  Connect one existing RowCompanySlider document
  """
  connect: RowCompanySliderWhereUniqueInput
}
input LinkExternalCreateOneInlineInput {
  """
  Create and connect one LinkExternal document
  """
  create: LinkExternalCreateInput
  """
  Connect one existing LinkExternal document
  """
  connect: LinkExternalWhereUniqueInput
}
input PersonListUpdateManyWithNestedWhereInput {
  """
  Document search
  """
  where: PersonListWhereInput!
  """
  Update many input
  """
  data: PersonListUpdateManyInput!
}
input RowColumnOneCreateOneInlineInput {
  """
  Create and connect one RowColumnOne document
  """
  create: RowColumnOneCreateInput
  """
  Connect one existing RowColumnOne document
  """
  connect: RowColumnOneWhereUniqueInput
}
"""
Accepts either HEX or RGBA color value. At least one of hex or rgba value should be passed. If both are passed RGBA is used.
"""
input ColorInput {
  hex: Hex
  rgba: RGBAInput
}
input RowPeopleWithTextUpdateOneInlineInput {
  """
  Create and connect one RowPeopleWithText document
  """
  create: RowPeopleWithTextCreateInput
  """
  Update single RowPeopleWithText document
  """
  update: RowPeopleWithTextUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowPeopleWithText document
  """
  upsert: RowPeopleWithTextUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowPeopleWithText document
  """
  connect: RowPeopleWithTextWhereUniqueInput
  """
  Disconnect currently connected RowPeopleWithText document
  """
  disconnect: Boolean
  """
  Delete currently connected RowPeopleWithText document
  """
  delete: Boolean
}
input RowYoutubeVideoUpdateManyInlineInput {
  """
  Create and connect multiple RowYoutubeVideo documents
  """
  create: [RowYoutubeVideoCreateInput!]
  """
  Connect multiple existing RowYoutubeVideo documents
  """
  connect: [RowYoutubeVideoConnectInput!]
  """
  Override currently-connected documents with multiple existing RowYoutubeVideo documents
  """
  set: [RowYoutubeVideoWhereUniqueInput!]
  """
  Update multiple RowYoutubeVideo documents
  """
  update: [RowYoutubeVideoUpdateWithNestedWhereUniqueInput!]
  """
  Upsert multiple RowYoutubeVideo documents
  """
  upsert: [RowYoutubeVideoUpsertWithNestedWhereUniqueInput!]
  """
  Disconnect multiple RowYoutubeVideo documents
  """
  disconnect: [RowYoutubeVideoWhereUniqueInput!]
  """
  Delete multiple RowYoutubeVideo documents
  """
  delete: [RowYoutubeVideoWhereUniqueInput!]
}
input RowColumnOneUpdateOneInlineInput {
  """
  Create and connect one RowColumnOne document
  """
  create: RowColumnOneCreateInput
  """
  Update single RowColumnOne document
  """
  update: RowColumnOneUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowColumnOne document
  """
  upsert: RowColumnOneUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowColumnOne document
  """
  connect: RowColumnOneWhereUniqueInput
  """
  Disconnect currently connected RowColumnOne document
  """
  disconnect: Boolean
  """
  Delete currently connected RowColumnOne document
  """
  delete: Boolean
}
input RowYoutubeVideoCreateManyInlineInput {
  """
  Create and connect multiple existing RowYoutubeVideo documents
  """
  create: [RowYoutubeVideoCreateInput!]
  """
  Connect multiple existing RowYoutubeVideo documents
  """
  connect: [RowYoutubeVideoWhereUniqueInput!]
}
enum _RelationInputKind {
  create
  update
}
input CompanyCreateOneInlineInput {
  """
  Create and connect one Company document
  """
  create: CompanyCreateInput
  """
  Connect one existing Company document
  """
  connect: CompanyWhereUniqueInput
}
input RowHeroVideoLinksCreateOneInlineInput {
  """
  Create and connect one RowHeroVideoLinks document
  """
  create: RowHeroVideoLinksCreateInput
  """
  Connect one existing RowHeroVideoLinks document
  """
  connect: RowHeroVideoLinksWhereUniqueInput
}
input MenuCreateOneInlineInput {
  """
  Create and connect one Menu document
  """
  create: MenuCreateInput
  """
  Connect one existing Menu document
  """
  connect: MenuWhereUniqueInput
}
input RowCompanySliderUpdateOneInlineInput {
  """
  Create and connect one RowCompanySlider document
  """
  create: RowCompanySliderCreateInput
  """
  Update single RowCompanySlider document
  """
  update: RowCompanySliderUpdateWithNestedWhereUniqueInput
  """
  Upsert single RowCompanySlider document
  """
  upsert: RowCompanySliderUpsertWithNestedWhereUniqueInput
  """
  Connect existing RowCompanySlider document
  """
  connect: RowCompanySliderWhereUniqueInput
  """
  Disconnect currently connected RowCompanySlider document
  """
  disconnect: Boolean
  """
  Delete currently connected RowCompanySlider document
  """
  delete: Boolean
}
