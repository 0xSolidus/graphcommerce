// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import {
  ProductPageInterface_VirtualProduct_Fragment,
  ProductPageInterface_SimpleProduct_Fragment,
  ProductPageInterface_DownloadableProduct_Fragment,
  ProductPageInterface_BundleProduct_Fragment,
  ProductPageInterface_GroupedProduct_Fragment,
  ProductPageInterface_ConfigurableProduct_Fragment,
  ProductPageInterfaceFragmentDoc,
} from '../magento-product/ProductPageInterface.gql'

export const ProductPageGroupedFragmentDoc: DocumentNode<ProductPageGroupedFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProductPageGrouped' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'GroupedProduct' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageInterface' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'items' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'position' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'product' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [{ kind: 'Field', name: { kind: 'Name', value: 'name' } }],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'qty' } },
              ],
            },
          },
        ],
      },
    },
    ...ProductPageInterfaceFragmentDoc.definitions,
  ],
}
export type ProductPageGroupedFragment = {
  items?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.GroupedProductItem, 'position' | 'qty'> & {
          product?: Types.Maybe<
            | Pick<Types.VirtualProduct, 'name'>
            | Pick<Types.SimpleProduct, 'name'>
            | Pick<Types.DownloadableProduct, 'name'>
            | Pick<Types.BundleProduct, 'name'>
            | Pick<Types.GroupedProduct, 'name'>
            | Pick<Types.ConfigurableProduct, 'name'>
          >
        }
      >
    >
  >
} & ProductPageInterface_GroupedProduct_Fragment
