// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import {
  CartItemBundleFragment,
  CartItemBundleFragmentDoc,
} from '../../magento-product-bundle/CartBundleItem.gql'
import {
  ConfigurableCartItemFragment,
  ConfigurableCartItemFragmentDoc,
} from '../../magento-product-configurable/ConfigurableCartItem/ConfigurableCartItem.gql'
import {
  CartItemDownloadableFragment,
  CartItemDownloadableFragmentDoc,
} from '../../magento-product-downloadable/CartItemDownloadable.gql'
import {
  CartItemSimpleFragment,
  CartItemSimpleFragmentDoc,
} from '../../magento-product-simple/CartItemSimple.gql'
import {
  CartItemVirtualFragment,
  CartItemVirtualFragmentDoc,
} from '../../magento-product-virtual/CartItemVirtual.gql'
import {
  CartItem_SimpleCartItem_Fragment,
  CartItem_VirtualCartItem_Fragment,
  CartItem_DownloadableCartItem_Fragment,
  CartItem_BundleCartItem_Fragment,
  CartItem_ConfigurableCartItem_Fragment,
  CartItemFragmentDoc,
} from './CartItem.gql'

export const CartItemsFragmentDoc: DocumentNode<CartItemsFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CartItems' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'Cart' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'items' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: '__typename' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'CartItem' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'CartItemSimple' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ConfigurableCartItem' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'CartItemDownloadable' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'CartItemVirtual' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'CartItemBundle' } },
              ],
            },
          },
        ],
      },
    },
    ...CartItemFragmentDoc.definitions,
    ...CartItemSimpleFragmentDoc.definitions,
    ...ConfigurableCartItemFragmentDoc.definitions,
    ...CartItemDownloadableFragmentDoc.definitions,
    ...CartItemVirtualFragmentDoc.definitions,
    ...CartItemBundleFragmentDoc.definitions,
  ],
}
export type CartItemsFragment = Pick<Types.Cart, 'id'> & {
  items?: Types.Maybe<
    Array<
      Types.Maybe<
        | ({ __typename: 'SimpleCartItem' } & Pick<Types.SimpleCartItem, 'id'> &
            CartItem_SimpleCartItem_Fragment &
            CartItemSimpleFragment)
        | ({ __typename: 'VirtualCartItem' } & Pick<Types.VirtualCartItem, 'id'> &
            CartItem_VirtualCartItem_Fragment &
            CartItemVirtualFragment)
        | ({ __typename: 'DownloadableCartItem' } & Pick<Types.DownloadableCartItem, 'id'> &
            CartItem_DownloadableCartItem_Fragment &
            CartItemDownloadableFragment)
        | ({ __typename: 'BundleCartItem' } & Pick<Types.BundleCartItem, 'id'> &
            CartItem_BundleCartItem_Fragment &
            CartItemBundleFragment)
        | ({ __typename: 'ConfigurableCartItem' } & Pick<Types.ConfigurableCartItem, 'id'> &
            CartItem_ConfigurableCartItem_Fragment &
            ConfigurableCartItemFragment)
      >
    >
  >
}
