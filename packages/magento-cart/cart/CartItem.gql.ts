// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import { MoneyFragment, MoneyFragmentDoc } from '../../magento-store/Money.gql'

export const CartItemFragmentDoc: DocumentNode<CartItemFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CartItem' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'CartItemInterface' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'quantity' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'product' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                { kind: 'Field', name: { kind: 'Name', value: 'url_key' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'thumbnail' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'url' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'label' } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'prices' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'discounts' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'amount' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                          ],
                        },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'label' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'price' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'row_total' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'row_total_including_tax' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'total_item_discount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...MoneyFragmentDoc.definitions,
  ],
}
export type CartItem_SimpleCartItem_Fragment = Pick<Types.SimpleCartItem, 'id' | 'quantity'> & {
  product:
    | (Pick<Types.VirtualProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.SimpleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.DownloadableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GiftCardProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.BundleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GroupedProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.ConfigurableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
  prices?: Types.Maybe<{
    discounts?: Types.Maybe<
      Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
    >
    price: MoneyFragment
    row_total: MoneyFragment
    row_total_including_tax: MoneyFragment
    total_item_discount?: Types.Maybe<MoneyFragment>
  }>
}

export type CartItem_VirtualCartItem_Fragment = Pick<Types.VirtualCartItem, 'id' | 'quantity'> & {
  product:
    | (Pick<Types.VirtualProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.SimpleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.DownloadableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GiftCardProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.BundleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GroupedProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.ConfigurableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
  prices?: Types.Maybe<{
    discounts?: Types.Maybe<
      Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
    >
    price: MoneyFragment
    row_total: MoneyFragment
    row_total_including_tax: MoneyFragment
    total_item_discount?: Types.Maybe<MoneyFragment>
  }>
}

export type CartItem_DownloadableCartItem_Fragment = Pick<
  Types.DownloadableCartItem,
  'id' | 'quantity'
> & {
  product:
    | (Pick<Types.VirtualProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.SimpleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.DownloadableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GiftCardProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.BundleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GroupedProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.ConfigurableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
  prices?: Types.Maybe<{
    discounts?: Types.Maybe<
      Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
    >
    price: MoneyFragment
    row_total: MoneyFragment
    row_total_including_tax: MoneyFragment
    total_item_discount?: Types.Maybe<MoneyFragment>
  }>
}

export type CartItem_GiftCardCartItem_Fragment = Pick<Types.GiftCardCartItem, 'id' | 'quantity'> & {
  product:
    | (Pick<Types.VirtualProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.SimpleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.DownloadableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GiftCardProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.BundleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GroupedProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.ConfigurableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
  prices?: Types.Maybe<{
    discounts?: Types.Maybe<
      Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
    >
    price: MoneyFragment
    row_total: MoneyFragment
    row_total_including_tax: MoneyFragment
    total_item_discount?: Types.Maybe<MoneyFragment>
  }>
}

export type CartItem_ConfigurableCartItem_Fragment = Pick<
  Types.ConfigurableCartItem,
  'id' | 'quantity'
> & {
  product:
    | (Pick<Types.VirtualProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.SimpleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.DownloadableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GiftCardProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.BundleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GroupedProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.ConfigurableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
  prices?: Types.Maybe<{
    discounts?: Types.Maybe<
      Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
    >
    price: MoneyFragment
    row_total: MoneyFragment
    row_total_including_tax: MoneyFragment
    total_item_discount?: Types.Maybe<MoneyFragment>
  }>
}

export type CartItem_BundleCartItem_Fragment = Pick<Types.BundleCartItem, 'id' | 'quantity'> & {
  product:
    | (Pick<Types.VirtualProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.SimpleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.DownloadableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GiftCardProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.BundleProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.GroupedProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
    | (Pick<Types.ConfigurableProduct, 'name' | 'url_key'> & {
        thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
      })
  prices?: Types.Maybe<{
    discounts?: Types.Maybe<
      Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
    >
    price: MoneyFragment
    row_total: MoneyFragment
    row_total_including_tax: MoneyFragment
    total_item_discount?: Types.Maybe<MoneyFragment>
  }>
}

export type CartItemFragment =
  | CartItem_SimpleCartItem_Fragment
  | CartItem_VirtualCartItem_Fragment
  | CartItem_DownloadableCartItem_Fragment
  | CartItem_GiftCardCartItem_Fragment
  | CartItem_ConfigurableCartItem_Fragment
  | CartItem_BundleCartItem_Fragment
