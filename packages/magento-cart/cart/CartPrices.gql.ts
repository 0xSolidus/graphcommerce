// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import { MoneyFragment, MoneyFragmentDoc } from '../../magento-store/Money.gql'

export const CartPricesFragmentDoc: DocumentNode<CartPricesFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'CartPrices' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'CartPrices' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'applied_taxes' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'amount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'label' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'discounts' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'amount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'label' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'grand_total' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } }],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'subtotal_excluding_tax' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } }],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'subtotal_including_tax' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } }],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'subtotal_with_discount_excluding_tax' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } }],
            },
          },
        ],
      },
    },
    ...MoneyFragmentDoc.definitions,
  ],
}
export type CartPricesFragment = {
  applied_taxes?: Types.Maybe<
    Array<Types.Maybe<Pick<Types.CartTaxItem, 'label'> & { amount: MoneyFragment }>>
  >
  discounts?: Types.Maybe<
    Array<Types.Maybe<Pick<Types.Discount, 'label'> & { amount: MoneyFragment }>>
  >
  grand_total?: Types.Maybe<MoneyFragment>
  subtotal_excluding_tax?: Types.Maybe<MoneyFragment>
  subtotal_including_tax?: Types.Maybe<MoneyFragment>
  subtotal_with_discount_excluding_tax?: Types.Maybe<MoneyFragment>
}
