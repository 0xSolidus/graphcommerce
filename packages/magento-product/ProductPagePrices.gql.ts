// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import { MoneyFragment, MoneyFragmentDoc } from '../magento-store/Money.gql'
import { ProductPagePriceFragment, ProductPagePriceFragmentDoc } from './ProductPagePrice.gql'

export const ProductPagePricesFragmentDoc: DocumentNode<ProductPagePricesFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProductPagePrices' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'ProductInterface' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'price_range' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'maximum_price' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPagePrice' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'minimum_price' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPagePrice' } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'price_tiers' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'discount' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'amount_off' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'percent_off' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'final_price' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Money' } },
                    ],
                  },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'quantity' } },
              ],
            },
          },
        ],
      },
    },
    ...ProductPagePriceFragmentDoc.definitions,
    ...MoneyFragmentDoc.definitions,
  ],
}
export type ProductPagePrices_VirtualProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePrices_SimpleProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePrices_DownloadableProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePrices_GiftCardProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePrices_BundleProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePrices_GroupedProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePrices_ConfigurableProduct_Fragment = {
  price_range: {
    maximum_price?: Types.Maybe<ProductPagePriceFragment>
    minimum_price: ProductPagePriceFragment
  }
  price_tiers?: Types.Maybe<
    Array<
      Types.Maybe<
        Pick<Types.TierPrice, 'quantity'> & {
          discount?: Types.Maybe<Pick<Types.ProductDiscount, 'amount_off' | 'percent_off'>>
          final_price?: Types.Maybe<MoneyFragment>
        }
      >
    >
  >
}

export type ProductPagePricesFragment =
  | ProductPagePrices_VirtualProduct_Fragment
  | ProductPagePrices_SimpleProduct_Fragment
  | ProductPagePrices_DownloadableProduct_Fragment
  | ProductPagePrices_GiftCardProduct_Fragment
  | ProductPagePrices_BundleProduct_Fragment
  | ProductPagePrices_GroupedProduct_Fragment
  | ProductPagePrices_ConfigurableProduct_Fragment
