// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

export const ProductPageDescriptionFragmentDoc: DocumentNode<
  ProductPageDescriptionFragment,
  unknown
> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProductPageDescription' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'ProductInterface' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'name' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'short_description' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'Field', name: { kind: 'Name', value: 'html' } }],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'description' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [{ kind: 'Field', name: { kind: 'Name', value: 'html' } }],
            },
          },
        ],
      },
    },
  ],
}
export type ProductPageDescription_VirtualProduct_Fragment = Pick<Types.VirtualProduct, 'name'> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescription_SimpleProduct_Fragment = Pick<Types.SimpleProduct, 'name'> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescription_DownloadableProduct_Fragment = Pick<
  Types.DownloadableProduct,
  'name'
> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescription_GiftCardProduct_Fragment = Pick<
  Types.GiftCardProduct,
  'name'
> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescription_BundleProduct_Fragment = Pick<Types.BundleProduct, 'name'> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescription_GroupedProduct_Fragment = Pick<Types.GroupedProduct, 'name'> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescription_ConfigurableProduct_Fragment = Pick<
  Types.ConfigurableProduct,
  'name'
> & {
  short_description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
  description?: Types.Maybe<Pick<Types.ComplexTextValue, 'html'>>
}

export type ProductPageDescriptionFragment =
  | ProductPageDescription_VirtualProduct_Fragment
  | ProductPageDescription_SimpleProduct_Fragment
  | ProductPageDescription_DownloadableProduct_Fragment
  | ProductPageDescription_GiftCardProduct_Fragment
  | ProductPageDescription_BundleProduct_Fragment
  | ProductPageDescription_GroupedProduct_Fragment
  | ProductPageDescription_ConfigurableProduct_Fragment
