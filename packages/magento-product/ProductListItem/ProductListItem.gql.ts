// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import {
  ProductLink_VirtualProduct_Fragment,
  ProductLink_SimpleProduct_Fragment,
  ProductLink_DownloadableProduct_Fragment,
  ProductLink_BundleProduct_Fragment,
  ProductLink_GroupedProduct_Fragment,
  ProductLink_ConfigurableProduct_Fragment,
  ProductLinkFragmentDoc,
} from '../ProductLink/ProductLink.gql'
import {
  ProductListPriceFragment,
  ProductListPriceFragmentDoc,
} from '../ProductListPrice/ProductListPrice.gql'

export const ProductListItemFragmentDoc: DocumentNode<ProductListItemFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProductListItem' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'ProductInterface' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductLink' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sku' } },
          { kind: 'Field', name: { kind: 'Name', value: 'name' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'small_image' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'url' } },
                { kind: 'Field', name: { kind: 'Name', value: 'label' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'price_range' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'maximum_price' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductListPrice' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'minimum_price' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductListPrice' } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...ProductLinkFragmentDoc.definitions,
    ...ProductListPriceFragmentDoc.definitions,
  ],
}
export type ProductListItem_VirtualProduct_Fragment = Pick<Types.VirtualProduct, 'sku' | 'name'> & {
  small_image?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
  price_range: {
    maximum_price?: Types.Maybe<ProductListPriceFragment>
    minimum_price: ProductListPriceFragment
  }
} & ProductLink_VirtualProduct_Fragment

export type ProductListItem_SimpleProduct_Fragment = Pick<Types.SimpleProduct, 'sku' | 'name'> & {
  small_image?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
  price_range: {
    maximum_price?: Types.Maybe<ProductListPriceFragment>
    minimum_price: ProductListPriceFragment
  }
} & ProductLink_SimpleProduct_Fragment

export type ProductListItem_DownloadableProduct_Fragment = Pick<
  Types.DownloadableProduct,
  'sku' | 'name'
> & {
  small_image?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
  price_range: {
    maximum_price?: Types.Maybe<ProductListPriceFragment>
    minimum_price: ProductListPriceFragment
  }
} & ProductLink_DownloadableProduct_Fragment

export type ProductListItem_BundleProduct_Fragment = Pick<Types.BundleProduct, 'sku' | 'name'> & {
  small_image?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
  price_range: {
    maximum_price?: Types.Maybe<ProductListPriceFragment>
    minimum_price: ProductListPriceFragment
  }
} & ProductLink_BundleProduct_Fragment

export type ProductListItem_GroupedProduct_Fragment = Pick<Types.GroupedProduct, 'sku' | 'name'> & {
  small_image?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
  price_range: {
    maximum_price?: Types.Maybe<ProductListPriceFragment>
    minimum_price: ProductListPriceFragment
  }
} & ProductLink_GroupedProduct_Fragment

export type ProductListItem_ConfigurableProduct_Fragment = Pick<
  Types.ConfigurableProduct,
  'sku' | 'name'
> & {
  small_image?: Types.Maybe<Pick<Types.ProductImage, 'url' | 'label'>>
  price_range: {
    maximum_price?: Types.Maybe<ProductListPriceFragment>
    minimum_price: ProductListPriceFragment
  }
} & ProductLink_ConfigurableProduct_Fragment

export type ProductListItemFragment =
  | ProductListItem_VirtualProduct_Fragment
  | ProductListItem_SimpleProduct_Fragment
  | ProductListItem_DownloadableProduct_Fragment
  | ProductListItem_BundleProduct_Fragment
  | ProductListItem_GroupedProduct_Fragment
  | ProductListItem_ConfigurableProduct_Fragment
