// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

export const ProductPageDocument: DocumentNode<ProductPageQuery, ProductPageQueryVariables> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'ProductPage' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'urlKey' } },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'products' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'filter' },
                value: {
                  kind: 'ObjectValue',
                  fields: [
                    {
                      kind: 'ObjectField',
                      name: { kind: 'Name', value: 'url_key' },
                      value: {
                        kind: 'ObjectValue',
                        fields: [
                          {
                            kind: 'ObjectField',
                            name: { kind: 'Name', value: 'eq' },
                            value: { kind: 'Variable', name: { kind: 'Name', value: 'urlKey' } },
                          },
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: '__typename' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
}
export type ProductPageQueryVariables = Types.Exact<{
  urlKey?: Types.Maybe<Types.Scalars['String']>
}>

export type ProductPageQuery = {
  products?: Types.Maybe<{
    items?: Types.Maybe<
      Array<
        Types.Maybe<
          | ({ __typename: 'VirtualProduct' } & Pick<Types.VirtualProduct, 'id'>)
          | ({ __typename: 'SimpleProduct' } & Pick<Types.SimpleProduct, 'id'>)
          | ({ __typename: 'DownloadableProduct' } & Pick<Types.DownloadableProduct, 'id'>)
          | ({ __typename: 'BundleProduct' } & Pick<Types.BundleProduct, 'id'>)
          | ({ __typename: 'GroupedProduct' } & Pick<Types.GroupedProduct, 'id'>)
          | ({ __typename: 'ConfigurableProduct' } & Pick<Types.ConfigurableProduct, 'id'>)
        >
      >
    >
  }>
}
