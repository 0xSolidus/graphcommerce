// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import {
  ProductPageBundleFragment,
  ProductPageBundleFragmentDoc,
} from '../../magento-product-bundle/ProductPageBundle.gql'
import {
  ProductPageConfigurableFragment,
  ProductPageConfigurableFragmentDoc,
} from '../../magento-product-configurable/ProductPageConfigurable.gql'
import {
  ProductPageDownloadableFragment,
  ProductPageDownloadableFragmentDoc,
} from '../../magento-product-downloadable/ProductPageDownloadable.gql'
import {
  ProductPageGroupedFragment,
  ProductPageGroupedFragmentDoc,
} from '../../magento-product-grouped/ProductPageGrouped.gql'
import {
  ProductPageSimpleFragment,
  ProductPageSimpleFragmentDoc,
} from '../../magento-product-simple/ProductPageSimple.gql'
import {
  ProductPageVirtualFragment,
  ProductPageVirtualFragmentDoc,
} from '../../magento-product-virtual/ProductPageVirtual.gql'

export const ProductPageRendererFragmentDoc: DocumentNode<ProductPageRendererFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProductPageRenderer' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'ProductInterface' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: '__typename' } },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageBundle' } },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageConfigurable' } },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageDownloadable' } },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageGrouped' } },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageSimple' } },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductPageVirtual' } },
        ],
      },
    },
    ...ProductPageBundleFragmentDoc.definitions,
    ...ProductPageConfigurableFragmentDoc.definitions,
    ...ProductPageDownloadableFragmentDoc.definitions,
    ...ProductPageGroupedFragmentDoc.definitions,
    ...ProductPageSimpleFragmentDoc.definitions,
    ...ProductPageVirtualFragmentDoc.definitions,
  ],
}
export type ProductPageRenderer_VirtualProduct_Fragment = { __typename: 'VirtualProduct' } & Pick<
  Types.VirtualProduct,
  'id'
> &
  ProductPageVirtualFragment

export type ProductPageRenderer_SimpleProduct_Fragment = { __typename: 'SimpleProduct' } & Pick<
  Types.SimpleProduct,
  'id'
> &
  ProductPageSimpleFragment

export type ProductPageRenderer_DownloadableProduct_Fragment = {
  __typename: 'DownloadableProduct'
} & Pick<Types.DownloadableProduct, 'id'> &
  ProductPageDownloadableFragment

export type ProductPageRenderer_BundleProduct_Fragment = { __typename: 'BundleProduct' } & Pick<
  Types.BundleProduct,
  'id'
> &
  ProductPageBundleFragment

export type ProductPageRenderer_GroupedProduct_Fragment = { __typename: 'GroupedProduct' } & Pick<
  Types.GroupedProduct,
  'id'
> &
  ProductPageGroupedFragment

export type ProductPageRenderer_ConfigurableProduct_Fragment = {
  __typename: 'ConfigurableProduct'
} & Pick<Types.ConfigurableProduct, 'id'> &
  ProductPageConfigurableFragment

export type ProductPageRendererFragment =
  | ProductPageRenderer_VirtualProduct_Fragment
  | ProductPageRenderer_SimpleProduct_Fragment
  | ProductPageRenderer_DownloadableProduct_Fragment
  | ProductPageRenderer_BundleProduct_Fragment
  | ProductPageRenderer_GroupedProduct_Fragment
  | ProductPageRenderer_ConfigurableProduct_Fragment
