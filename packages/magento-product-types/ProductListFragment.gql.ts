// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

import {
  ProductListCountFragment,
  ProductListCountFragmentDoc,
} from '../magento-product/ProductListCount/ProductListCount.gql'
import {
  ProductListPaginationFragment,
  ProductListPaginationFragmentDoc,
} from '../magento-product/ProductListPagination/ProductListPagination.gql'
import {
  ProductListSortFragment,
  ProductListSortFragmentDoc,
} from '../magento-product/ProductListSort/ProductListSort.gql'
import { ProductListItemsFragment, ProductListItemsFragmentDoc } from './ProductListItems.gql'

export const ProductListFragmentDoc: DocumentNode<ProductListFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ProductListFragment' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'Query' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'products' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'pageSize' },
                value: { kind: 'Variable', name: { kind: 'Name', value: 'pageSize' } },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'currentPage' },
                value: { kind: 'Variable', name: { kind: 'Name', value: 'currentPage' } },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'filter' },
                value: { kind: 'Variable', name: { kind: 'Name', value: 'filters' } },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'sort' },
                value: { kind: 'Variable', name: { kind: 'Name', value: 'sort' } },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'search' },
                value: { kind: 'Variable', name: { kind: 'Name', value: 'search' } },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductListCount' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductListPagination' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductListSort' } },
                { kind: 'FragmentSpread', name: { kind: 'Name', value: 'ProductListItems' } },
              ],
            },
          },
        ],
      },
    },
    ...ProductListCountFragmentDoc.definitions,
    ...ProductListPaginationFragmentDoc.definitions,
    ...ProductListSortFragmentDoc.definitions,
    ...ProductListItemsFragmentDoc.definitions,
  ],
}
export type ProductListFragment = {
  products?: Types.Maybe<
    ProductListCountFragment &
      ProductListPaginationFragment &
      ProductListSortFragment &
      ProductListItemsFragment
  >
}
