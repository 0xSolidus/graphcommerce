// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

export const GetCategoryStaticPathsDocument: DocumentNode<
  GetCategoryStaticPathsQuery,
  GetCategoryStaticPathsQueryVariables
> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetCategoryStaticPaths' },
      variableDefinitions: [],
      directives: [],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'categories' },
            arguments: [],
            directives: [],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'items' },
                  arguments: [],
                  directives: [],
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'children' },
                        arguments: [],
                        directives: [],
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url_key' },
                              arguments: [],
                              directives: [],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'children' },
                              arguments: [],
                              directives: [],
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'url_key' },
                                    arguments: [],
                                    directives: [],
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'children' },
                                    arguments: [],
                                    directives: [],
                                    selectionSet: {
                                      kind: 'SelectionSet',
                                      selections: [
                                        {
                                          kind: 'Field',
                                          name: { kind: 'Name', value: 'url_key' },
                                          arguments: [],
                                          directives: [],
                                        },
                                        {
                                          kind: 'Field',
                                          name: { kind: 'Name', value: 'children' },
                                          arguments: [],
                                          directives: [],
                                          selectionSet: {
                                            kind: 'SelectionSet',
                                            selections: [
                                              {
                                                kind: 'Field',
                                                name: { kind: 'Name', value: 'url_key' },
                                                arguments: [],
                                                directives: [],
                                              },
                                              {
                                                kind: 'Field',
                                                name: { kind: 'Name', value: 'children' },
                                                arguments: [],
                                                directives: [],
                                                selectionSet: {
                                                  kind: 'SelectionSet',
                                                  selections: [
                                                    {
                                                      kind: 'Field',
                                                      name: { kind: 'Name', value: 'url_key' },
                                                      arguments: [],
                                                      directives: [],
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
}
export type GetCategoryStaticPathsQueryVariables = Types.Exact<{ [key: string]: never }>

export type GetCategoryStaticPathsQuery = {
  categories?: Types.Maybe<{
    items?: Types.Maybe<
      Array<
        Types.Maybe<{
          children?: Types.Maybe<
            Array<
              Types.Maybe<
                Pick<Types.CategoryTree, 'url_key'> & {
                  children?: Types.Maybe<
                    Array<
                      Types.Maybe<
                        Pick<Types.CategoryTree, 'url_key'> & {
                          children?: Types.Maybe<
                            Array<
                              Types.Maybe<
                                Pick<Types.CategoryTree, 'url_key'> & {
                                  children?: Types.Maybe<
                                    Array<
                                      Types.Maybe<
                                        Pick<Types.CategoryTree, 'url_key'> & {
                                          children?: Types.Maybe<
                                            Array<Types.Maybe<Pick<Types.CategoryTree, 'url_key'>>>
                                          >
                                        }
                                      >
                                    >
                                  >
                                }
                              >
                            >
                          >
                        }
                      >
                    >
                  >
                }
              >
            >
          >
        }>
      >
    >
  }>
}
