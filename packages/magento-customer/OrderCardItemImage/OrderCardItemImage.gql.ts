// Do not edit this file: autogenerated by graphql-code-generator
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
import * as Types from '@reachdigital/magento-graphql'

export const OrderCardItemImageFragmentDoc: DocumentNode<OrderCardItemImageFragment, unknown> = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'OrderCardItemImage' },
      typeCondition: { kind: 'NamedType', name: { kind: 'Name', value: 'ProductInterface' } },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'thumbnail' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'label' } },
                { kind: 'Field', name: { kind: 'Name', value: 'url' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'url_key' } },
        ],
      },
    },
  ],
}
export type OrderCardItemImage_VirtualProduct_Fragment = Pick<Types.VirtualProduct, 'url_key'> & {
  thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>>
}

export type OrderCardItemImage_SimpleProduct_Fragment = Pick<Types.SimpleProduct, 'url_key'> & {
  thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>>
}

export type OrderCardItemImage_DownloadableProduct_Fragment = Pick<
  Types.DownloadableProduct,
  'url_key'
> & { thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>> }

export type OrderCardItemImage_BundleProduct_Fragment = Pick<Types.BundleProduct, 'url_key'> & {
  thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>>
}

export type OrderCardItemImage_GroupedProduct_Fragment = Pick<Types.GroupedProduct, 'url_key'> & {
  thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>>
}

export type OrderCardItemImage_ConfigurableProduct_Fragment = Pick<
  Types.ConfigurableProduct,
  'url_key'
> & { thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>> }

export type OrderCardItemImage_GiftCardProduct_Fragment = Pick<Types.GiftCardProduct, 'url_key'> & {
  thumbnail?: Types.Maybe<Pick<Types.ProductImage, 'label' | 'url'>>
}

export type OrderCardItemImageFragment =
  | OrderCardItemImage_VirtualProduct_Fragment
  | OrderCardItemImage_SimpleProduct_Fragment
  | OrderCardItemImage_DownloadableProduct_Fragment
  | OrderCardItemImage_BundleProduct_Fragment
  | OrderCardItemImage_GroupedProduct_Fragment
  | OrderCardItemImage_ConfigurableProduct_Fragment
  | OrderCardItemImage_GiftCardProduct_Fragment
